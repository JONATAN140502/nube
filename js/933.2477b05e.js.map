{"version":3,"file":"js/933.2477b05e.js","mappings":"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","sources":["webpack://legalcase/./node_modules/datatables.net-buttons/node_modules/datatables.net/js/dataTables.mjs","webpack://legalcase/./node_modules/datatables.net-buttons/js/dataTables.buttons.mjs","webpack://legalcase/./node_modules/datatables.net-buttons-bs5/js/buttons.bootstrap5.mjs"],"sourcesContent":["/*! DataTables 2.0.0\n * © SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\nvar $ = jQuery;\n\n\nvar DataTable = function ( selector, options )\n{\n\t// Check if called with a window or jQuery object for DOM less applications\n\t// This is for backwards compatibility\n\tif (DataTable.factory(selector, options)) {\n\t\treturn DataTable;\n\t}\n\n\t// When creating with `new`, create a new DataTable, returning the API instance\n\tif (this instanceof DataTable) {\n\t\treturn $(selector).DataTable(options);\n\t}\n\telse {\n\t\t// Argument switching\n\t\toptions = selector;\n\t}\n\n\tvar _that = this;\n\tvar emptyInit = options === undefined;\n\tvar len = this.length;\n\n\tif ( emptyInit ) {\n\t\toptions = {};\n\t}\n\n\t// Method to get DT API instance from jQuery object\n\tthis.api = function ()\n\t{\n\t\treturn new _Api( this );\n\t};\n\n\tthis.each(function() {\n\t\t// For each initialisation we want to give it a clean initialisation\n\t\t// object that can be bashed around\n\t\tvar o = {};\n\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t_fnExtend( o, options, true ) :\n\t\t\toptions;\n\n\t\t\n\t\tvar i=0, iLen;\n\t\tvar sId = this.getAttribute( 'id' );\n\t\tvar bInitHandedOff = false;\n\t\tvar defaults = DataTable.defaults;\n\t\tvar $this = $(this);\n\t\t\n\t\t\n\t\t/* Sanity check */\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t{\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t$(this).trigger( 'options.dt', oInit );\n\t\t\n\t\t/* Backwards compatibility for the defaults */\n\t\t_fnCompatOpts( defaults );\n\t\t_fnCompatCols( defaults.column );\n\t\t\n\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\n\t\t/* Setting up the initialisation object */\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\n\t\t\n\t\t\n\t\t/* Check to see if we are re-initialising a table */\n\t\tvar allSettings = DataTable.settings;\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar s = allSettings[i];\n\t\t\n\t\t\t/* Base check on table node */\n\t\t\tif (\n\t\t\t\ts.nTable == this ||\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t) {\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\n\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t{\n\t\t\t\t\treturn s.oInstance;\n\t\t\t\t}\n\t\t\t\telse if ( bDestroy )\n\t\t\t\t{\n\t\t\t\t\tnew DataTable.Api(s).destroy();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t */\n\t\t\tif ( s.sTableId == this.id )\n\t\t\t{\n\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Ensure the table has an ID - required for accessibility */\n\t\tif ( sId === null || sId === \"\" )\n\t\t{\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\tthis.id = sId;\n\t\t}\n\t\t\n\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\"sInstance\":     sId,\n\t\t\t\"sTableId\":      sId,\n\t\t\tcolgroup: $('<colgroup>').prependTo(this),\n\t\t\tfastData: function (row, column, type) {\n\t\t\t\treturn _fnGetCellData(oSettings, row, column, type);\n\t\t\t}\n\t\t} );\n\t\toSettings.nTable = this;\n\t\toSettings.oInit  = oInit;\n\t\t\n\t\tallSettings.push( oSettings );\n\t\t\n\t\t// Make a single API instance available for internal handling\n\t\toSettings.api = new _Api( oSettings );\n\t\t\n\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\n\t\t// Backwards compatibility, before we apply all the defaults\n\t\t_fnCompatOpts( oInit );\n\t\t\n\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t{\n\t\t\toInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0])\n\t\t\t\t? oInit.aLengthMenu[0][0]\n\t\t\t\t: $.isPlainObject( oInit.aLengthMenu[0] )\n\t\t\t\t\t? oInit.aLengthMenu[0].value\n\t\t\t\t\t: oInit.aLengthMenu[0];\n\t\t}\n\t\t\n\t\t// Apply the defaults and init options to make a single init object will all\n\t\t// options defined from defaults and instance options.\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\n\t\t\n\t\t// Map the initialisation options onto the settings object\n\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\"bPaginate\",\n\t\t\t\"bLengthChange\",\n\t\t\t\"bFilter\",\n\t\t\t\"bSort\",\n\t\t\t\"bSortMulti\",\n\t\t\t\"bInfo\",\n\t\t\t\"bProcessing\",\n\t\t\t\"bAutoWidth\",\n\t\t\t\"bSortClasses\",\n\t\t\t\"bServerSide\",\n\t\t\t\"bDeferRender\"\n\t\t] );\n\t\t_fnMap( oSettings, oInit, [\n\t\t\t\"ajax\",\n\t\t\t\"fnFormatNumber\",\n\t\t\t\"sServerMethod\",\n\t\t\t\"aaSorting\",\n\t\t\t\"aaSortingFixed\",\n\t\t\t\"aLengthMenu\",\n\t\t\t\"sPaginationType\",\n\t\t\t\"iStateDuration\",\n\t\t\t\"bSortCellsTop\",\n\t\t\t\"iTabIndex\",\n\t\t\t\"sDom\",\n\t\t\t\"fnStateLoadCallback\",\n\t\t\t\"fnStateSaveCallback\",\n\t\t\t\"renderer\",\n\t\t\t\"searchDelay\",\n\t\t\t\"rowId\",\n\t\t\t\"caption\",\n\t\t\t\"layout\",\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\n\t\t/* Callback functions which are array driven */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback );\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded );\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback );\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow );\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback );\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback );\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete );\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback );\n\t\t\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\n\t\t/* Browser support detection */\n\t\t_fnBrowserDetect( oSettings );\n\t\t\n\t\tvar oClasses = oSettings.oClasses;\n\t\t\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t$this.addClass( oClasses.table );\n\t\t\n\t\tif (! oSettings.oFeatures.bPaginate) {\n\t\t\toInit.iDisplayStart = 0;\n\t\t}\n\t\t\n\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t{\n\t\t\t/* Display start point, taking into account the save saving */\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t}\n\t\t\n\t\t/* Language definitions */\n\t\tvar oLanguage = oSettings.oLanguage;\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\n\t\tif ( oLanguage.sUrl )\n\t\t{\n\t\t\t/* Get the language definitions from a file - because this Ajax call makes the language\n\t\t\t * get async to the remainder of this function we use bInitHandedOff to indicate that\n\t\t\t * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor\n\t\t\t */\n\t\t\t$.ajax( {\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\n\t\t\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t},\n\t\t\t\terror: function () {\n\t\t\t\t\t// Error occurred loading language file\n\t\t\t\t\t_fnLog( oSettings, 0, 'i18n file loading error', 21 );\n\t\t\n\t\t\t\t\t// continue on as best we can\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t\tbInitHandedOff = true;\n\t\t}\n\t\telse {\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);\n\t\t}\n\t\t\n\t\t/*\n\t\t * Columns\n\t\t * See if we should load columns automatically or use defined ones\n\t\t */\n\t\tvar columnsInit = [];\n\t\tvar thead = this.getElementsByTagName('thead');\n\t\tvar initHeaderLayout = _fnDetectHeader( oSettings, thead[0] );\n\t\t\n\t\t// If we don't have a columns array, then generate one with nulls\n\t\tif ( oInit.aoColumns ) {\n\t\t\tcolumnsInit = oInit.aoColumns;\n\t\t}\n\t\telse if ( initHeaderLayout.length ) {\n\t\t\tfor ( i=0, iLen=initHeaderLayout[0].length ; i<iLen ; i++ ) {\n\t\t\t\tcolumnsInit.push( null );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Add the columns\n\t\tfor ( i=0, iLen=columnsInit.length ; i<iLen ; i++ ) {\n\t\t\t_fnAddColumn( oSettings );\n\t\t}\n\t\t\n\t\t// Apply the column definitions\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, columnsInit, initHeaderLayout, function (iCol, oDef) {\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t} );\n\t\t\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t * attributes are found\n\t\t */\n\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\n\t\tif ( rowOne.length ) {\n\t\t\tvar a = function ( cell, name ) {\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t};\n\t\t\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\n\t\t\t\tif (! col) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t}\n\t\t\n\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcol._isArrayHost = true;\n\t\t\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t\n\t\tvar features = oSettings.oFeatures;\n\t\tvar loadedInit = function () {\n\t\t\t/*\n\t\t\t * Sorting\n\t\t\t * @todo For modularisation (1.11) this needs to do into a sort start up handler\n\t\t\t */\n\t\t\n\t\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t\t// in case that has been altered, so the default sort reflects that option\n\t\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t\t * account, and also will apply sorting disabled classes if disabled\n\t\t\t */\n\t\t\t_fnSortingClasses( oSettings );\n\t\t\n\t\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t\n\t\t\n\t\t\t/*\n\t\t\t * Final init\n\t\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t\t */\n\t\t\tvar caption = $this.children('caption');\n\t\t\n\t\t\tif ( oSettings.caption ) {\n\t\t\t\tif ( caption.length === 0 ) {\n\t\t\t\t\tcaption = $('<caption/>').appendTo( $this );\n\t\t\t\t}\n\t\t\n\t\t\t\tcaption.html( oSettings.caption );\n\t\t\t}\n\t\t\n\t\t\t// Store the caption side, so we can remove the element from the document\n\t\t\t// when creating the element\n\t\t\tif (caption.length) {\n\t\t\t\tcaption[0]._captionSide = caption.css('caption-side');\n\t\t\t\toSettings.captionNode = caption[0];\n\t\t\t}\n\t\t\n\t\t\tif ( thead.length === 0 ) {\n\t\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t\t}\n\t\t\toSettings.nTHead = thead[0];\n\t\t\t$('tr', thead).addClass(oClasses.thead.row);\n\t\t\n\t\t\tvar tbody = $this.children('tbody');\n\t\t\tif ( tbody.length === 0 ) {\n\t\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t\t}\n\t\t\toSettings.nTBody = tbody[0];\n\t\t\n\t\t\tvar tfoot = $this.children('tfoot');\n\t\t\tif ( tfoot.length === 0 ) {\n\t\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t\t}\n\t\t\toSettings.nTFoot = tfoot[0];\n\t\t\t$('tr', tfoot).addClass(oClasses.tfoot.row);\n\t\t\n\t\t\t// Check if there is data passing into the constructor\n\t\t\tif ( oInit.aaData ) {\n\t\t\t\tfor ( i=0 ; i<oInit.aaData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( oSettings, oInit.aaData[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( _fnDataSource( oSettings ) == 'dom' ) {\n\t\t\t\t// Grab the data from the page\n\t\t\t\t_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );\n\t\t\t}\n\t\t\n\t\t\t/* Copy the data index array */\n\t\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\n\t\t\t/* Initialisation complete - table can be drawn */\n\t\t\toSettings.bInitialised = true;\n\t\t\n\t\t\t/* Check if we need to initialise the table (it might not have been handed off to the\n\t\t\t * language processor)\n\t\t\t */\n\t\t\tif ( bInitHandedOff === false ) {\n\t\t\t\t_fnInitialise( oSettings );\n\t\t\t}\n\t\t};\n\t\t\n\t\t/* Must be done after everything which can be overridden by the state saving! */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState );\n\t\t\n\t\tif ( oInit.bStateSave )\n\t\t{\n\t\t\tfeatures.bStateSave = true;\n\t\t\t_fnLoadState( oSettings, oInit, loadedInit );\n\t\t}\n\t\telse {\n\t\t\tloadedInit();\n\t\t}\n\t\t\n\t} );\n\t_that = null;\n\treturn this;\n};\n\n\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n\t/**\n\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t * defined here so other extensions can define buttons regardless of load\n\t * order. It is _not_ used by DataTables core.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tbuttons: {},\n\n\n\t/**\n\t * Element class names\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tclasses: {},\n\n\n\t/**\n\t * DataTables build type (expanded by the download builder)\n\t *\n\t *  @type string\n\t */\n\tbuilder: \"-source-\",\n\n\n\t/**\n\t * Error reporting.\n\t * \n\t * How should DataTables report an error. Can take the value 'alert',\n\t * 'throw', 'none' or a function.\n\t *\n\t *  @type string|function\n\t *  @default alert\n\t */\n\terrMode: \"alert\",\n\n\n\t/**\n\t * Legacy so v1 plug-ins don't throw js errors on load\n\t */\n\tfeature: [],\n\n\t/**\n\t * Feature plug-ins.\n\t * \n\t * This is an object of callbacks which provide the features for DataTables\n\t * to be initialised via the `layout` option.\n\t */\n\tfeatures: {},\n\n\n\t/**\n\t * Row searching.\n\t * \n\t * This method of searching is complimentary to the default type based\n\t * searching, and a lot more comprehensive as it allows you complete control\n\t * over the searching logic. Each element in this array is a function\n\t * (parameters described below) that is called for every row in the table,\n\t * and your logic decides if it should be included in the searching data set\n\t * or not.\n\t *\n\t * Searching functions have the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t *    original format that was passed in as the data source, or an array\n\t *    from a DOM data source\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t *\n\t * And the following return is expected:\n\t *\n\t * * {boolean} Include the row in the searched result set (true) or not\n\t *   (false)\n\t *\n\t * Note that as with the main search ability in DataTables, technically this\n\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t * naming we call it searching here.\n\t *\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @example\n\t *    // The following example shows custom search being applied to the\n\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t *    // from the end-user, matching the data in a certain range.\n\t *    $.fn.dataTable.ext.search.push(\n\t *      function( settings, data, dataIndex ) {\n\t *        var min = document.getElementById('min').value * 1;\n\t *        var max = document.getElementById('max').value * 1;\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t *\n\t *        if ( min == \"\" && max == \"\" ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min == \"\" && version < max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && \"\" == max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && version < max ) {\n\t *          return true;\n\t *        }\n\t *        return false;\n\t *      }\n\t *    );\n\t */\n\tsearch: [],\n\n\n\t/**\n\t * Selector extensions\n\t *\n\t * The `selector` option can be used to extend the options available for the\n\t * selector modifier options (`selector-modifier` object data type) that\n\t * each of the three built in selector types offer (row, column and cell +\n\t * their plural counterparts). For example the Select extension uses this\n\t * mechanism to provide an option to select only rows, columns and cells\n\t * that have been marked as selected by the end user (`{selected: true}`),\n\t * which can be used in conjunction with the existing built in selector\n\t * options.\n\t *\n\t * Each property is an array to which functions can be pushed. The functions\n\t * take three attributes:\n\t *\n\t * * Settings object for the host table\n\t * * Options object (`selector-modifier` object type)\n\t * * Array of selected item indexes\n\t *\n\t * The return is an array of the resulting item indexes after the custom\n\t * selector has been applied.\n\t *\n\t *  @type object\n\t */\n\tselector: {\n\t\tcell: [],\n\t\tcolumn: [],\n\t\trow: []\n\t},\n\n\n\t/**\n\t * Legacy configuration options. Enable and disable legacy options that\n\t * are available in DataTables.\n\t *\n\t *  @type object\n\t */\n\tlegacy: {\n\t\t/**\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t * requests\n\t\t *\n\t\t *  @type boolean\n\t\t *  @default null\n\t\t */\n\t\tajax: null\n\t},\n\n\n\t/**\n\t * Pagination plug-in methods.\n\t * \n\t * Each entry in this object is a function and defines which buttons should\n\t * be shown by the pagination rendering method that is used for the table:\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t * buttons are displayed in the document, while the functions here tell it\n\t * what buttons to display. This is done by returning an array of button\n\t * descriptions (what each button will do).\n\t *\n\t * Pagination types (the four built in options and any additional plug-in\n\t * options defined here) can be used through the `paginationType`\n\t * initialisation parameter.\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{int} page` The current page index\n\t * 2. `{int} pages` The number of pages in the table\n\t *\n\t * Each function is expected to return an array where each element of the\n\t * array can be one of:\n\t *\n\t * * `first` - Jump to first page when activated\n\t * * `last` - Jump to last page when activated\n\t * * `previous` - Show previous page when activated\n\t * * `next` - Show next page when activated\n\t * * `{int}` - Show page of the index given\n\t * * `{array}` - A nested array containing the above elements to add a\n\t *   containing 'DIV' element (might be useful for styling).\n\t *\n\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t * an object with two functions would be defined for each plug-in. That\n\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t * compatibility, but this option of use is now decremented and no longer\n\t * documented in DataTables 1.10+.\n\t *\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    // Show previous, next and current page buttons only\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t *      return [ 'previous', page, 'next' ];\n\t *    };\n\t */\n\tpager: {},\n\n\n\trenderer: {\n\t\tpageButton: {},\n\t\theader: {}\n\t},\n\n\n\t/**\n\t * Ordering plug-ins - custom data source\n\t * \n\t * The extension options for ordering of data available here is complimentary\n\t * to the default type based ordering that DataTables typically uses. It\n\t * allows much greater control over the the data that is being used to\n\t * order a column, but is necessarily therefore more complex.\n\t * \n\t * This type of ordering is useful if you want to do ordering based on data\n\t * live from the DOM (for example the contents of an 'input' element) rather\n\t * than just the static string that DataTables knows of.\n\t * \n\t * The way these plug-ins work is that you create an array of the values you\n\t * wish to be ordering for the column in question and then return that\n\t * array. The data in the array much be in the index order of the rows in\n\t * the table (not the currently ordering order!). Which order data gathering\n\t * function is run here depends on the `dt-init columns.orderDataType`\n\t * parameter that is used for the column (if any).\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{int}` Target column index\n\t *\n\t * Each function is expected to return an array:\n\t *\n\t * * `{array}` Data for the column to be ordering upon\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    // Ordering using `input` node values\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t *    {\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t *        return $('input', td).val();\n\t *      } );\n\t *    }\n\t */\n\torder: {},\n\n\n\t/**\n\t * Type based plug-ins.\n\t *\n\t * Each column in DataTables has a type assigned to it, either by automatic\n\t * detection or by direct assignment using the `type` option for the column.\n\t * The type of a column will effect how it is ordering and search (plug-ins\n\t * can also make use of the column type if required).\n\t *\n\t * @namespace\n\t */\n\ttype: {\n\t\t/**\n\t\t * Automatic column class assignment\n\t\t */\n\t\tclassName: {},\n\n\t\t/**\n\t\t * Type detection functions.\n\t\t *\n\t\t * The functions defined in this object are used to automatically detect\n\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t * when complex data is in the table.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be analysed\n\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t     *     perform context specific type detection - for example detection\n\t     *     based on language settings such as using a comma for a decimal\n\t     *     place. Generally speaking the options from the settings will not\n\t     *     be required\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t *   pass it on to the other type detection functions.\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Currency type detection plug-in:\n\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t *      function ( data, settings ) {\n\t\t *        // Check the numeric part\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t *          return null;\n\t\t *        }\n\t\t *\n\t\t *        // Check prefixed by currency\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t *          return 'currency';\n\t\t *        }\n\t\t *        return null;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tdetect: [],\n\n\t\t/**\n\t\t * Automatic renderer assignment\n\t\t */\n\t\trender: {},\n\n\n\t\t/**\n\t\t * Type based search formatting.\n\t\t *\n\t\t * The type based searching functions can be used to pre-format the\n\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t *\n\t\t * Note that is a search is not defined for a column of a given type,\n\t\t * no search formatting will be performed.\n\t\t * \n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t * or a type detection plug-in), you will typically be using this for\n\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t * the format that should be searched upon. This is done by adding\n\t\t * functions this object with a parameter name which matches the sType\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t * for searching data.\n\t\t *\n\t\t * The functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t *    }\n\t\t */\n\t\tsearch: {},\n\n\n\t\t/**\n\t\t * Type based ordering.\n\t\t *\n\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t * is defined by the functions available in this object.\n\t\t *\n\t\t * Each ordering option can be described by three properties added to\n\t\t * this object:\n\t\t *\n\t\t * * `{type}-pre` - Pre-formatting function\n\t\t * * `{type}-asc` - Ascending order function\n\t\t * * `{type}-desc` - Descending order function\n\t\t *\n\t\t * All three can be used together, only `{type}-pre` or only\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t * implementation in terms of speed, although the others are provided\n\t\t * for compatibility with existing Javascript sort functions.\n\t\t *\n\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t *\n\t\t * And return:\n\t\t *\n\t\t * * `{*}` Data to be sorted upon\n\t\t *\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t * functions, taking two parameters:\n\t\t *\n\t     *  1. `{*}` Data to compare to the second parameter\n\t     *  2. `{*}` Data to compare to the first parameter\n\t\t *\n\t\t * And returning:\n\t\t *\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t *   parameter.\n\t\t * \n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t *      \"string-pre\": function(x) {\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t *        return parseFloat( a );\n\t\t *      }\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t *      \"string-case-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-case-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\torder: {}\n\t},\n\n\t/**\n\t * Unique DataTables instance counter\n\t *\n\t * @type int\n\t * @private\n\t */\n\t_unique: 0,\n\n\n\t//\n\t// Depreciated\n\t// The following properties are retained for backwards compatibility only.\n\t// The should not be used in new projects and will be removed in a future\n\t// version\n\t//\n\n\t/**\n\t * Version check function.\n\t *  @type function\n\t *  @depreciated Since 1.10\n\t */\n\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t/**\n\t * Index for what 'this' index API functions should use\n\t *  @type int\n\t *  @deprecated Since v1.10\n\t */\n\tiApiIndex: 0,\n\n\n\t/**\n\t * Software version\n\t *  @type string\n\t *  @deprecated Since v1.10\n\t */\n\tsVersion: DataTable.version\n};\n\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend( _ext, {\n\tafnFiltering: _ext.search,\n\taTypes:       _ext.type.detect,\n\tofnSearch:    _ext.type.search,\n\toSort:        _ext.type.order,\n\tafnSortData:  _ext.order,\n\taoFeatures:   _ext.feature,\n\toStdClasses:  _ext.classes,\n\toPagination:  _ext.pager\n} );\n\n\n$.extend( DataTable.ext.classes, {\n\tcontainer: 'dt-container',\n\tempty: {\n\t\trow: 'dt-empty'\n\t},\n\tinfo: {\n\t\tcontainer: 'dt-info'\n\t},\n\tlength: {\n\t\tcontainer: 'dt-length',\n\t\tselect: 'dt-input'\n\t},\n\torder: {\n\t\tcanAsc: 'dt-orderable-asc',\n\t\tcanDesc: 'dt-orderable-desc',\n\t\tisAsc: 'dt-ordering-asc',\n\t\tisDesc: 'dt-ordering-desc',\n\t\tnone: 'dt-orderable-none',\n\t\tposition: 'sorting_'\n\t},\n\tprocessing: {\n\t\tcontainer: 'dt-processing'\n\t},\n\tscrolling: {\n\t\tbody: 'dt-scroll-body',\n\t\tcontainer: 'dt-scroll',\n\t\tfooter: {\n\t\t\tself: 'dt-scroll-foot',\n\t\t\tinner: 'dt-scroll-footInner'\n\t\t},\n\t\theader: {\n\t\t\tself: 'dt-scroll-head',\n\t\t\tinner: 'dt-scroll-headInner'\n\t\t}\n\t},\n\tsearch: {\n\t\tcontainer: 'dt-search',\n\t\tinput: 'dt-input'\n\t},\n\ttable: 'dataTable',\t\n\ttbody: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tthead: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\ttfoot: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tpaging: {\n\t\tactive: 'current',\n\t\tbutton: 'dt-paging-button',\n\t\tcontainer: 'dt-paging',\n\t\tdisabled: 'disabled'\n\t}\n} );\n\n\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<.*?>/g;\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[./-]\\d{1,2}[./-]\\d{1,2}([T ]{1}\\d{1,2}[:.]\\d{2}([.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\n// https://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - Ƀ - Bitcoin\n// - Ξ - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$£€¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkɃΞ]/gi;\n\n\nvar _empty = function ( d ) {\n\treturn !d || d === true || d === '-' ? true : false;\n};\n\n\nvar _intVal = function ( s ) {\n\tvar integer = parseInt( s, 10 );\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function ( num, decimalPoint ) {\n\t// Cache created regular expressions for speed as this function is called often\n\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t}\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\tnum;\n};\n\n\nvar _isNumber = function ( d, decimalPoint, formatted ) {\n\tvar type = typeof d;\n\tvar strType = type === 'string';\n\n\tif ( type === 'number' || type === 'bigint') {\n\t\treturn true;\n\t}\n\n\t// If empty return immediately so there must be a number if it is a\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t// as a formatted number for currency\n\tif ( _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tif ( decimalPoint && strType ) {\n\t\td = _numToDecimal( d, decimalPoint );\n\t}\n\n\tif ( formatted && strType ) {\n\t\td = d.replace( _re_formatted_numeric, '' );\n\t}\n\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n};\n\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function ( d ) {\n\treturn _empty( d ) || typeof d === 'string';\n};\n\n// Is a string a number surrounded by HTML?\nvar _htmlNumeric = function ( d, decimalPoint, formatted ) {\n\tif ( _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\t// input and select strings mean that this isn't just a number\n\tif (typeof d === 'string' && d.match(/<(input|select)/i)) {\n\t\treturn null;\n\t}\n\n\tvar html = _isHtml( d );\n\treturn ! html ?\n\t\tnull :\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?\n\t\t\ttrue :\n\t\t\tnull;\n};\n\n\nvar _pluck = function ( a, prop, prop2 ) {\n\tvar out = [];\n\tvar i=0, ien=a.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) {\n\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function ( a, order, prop, prop2 )\n{\n\tvar out = [];\n\tvar i=0, ien=order.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ][ prop ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _range = function ( len, start )\n{\n\tvar out = [];\n\tvar end;\n\n\tif ( start === undefined ) {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\telse {\n\t\tend = start;\n\t\tstart = len;\n\t}\n\n\tfor ( var i=start ; i<end ; i++ ) {\n\t\tout.push( i );\n\t}\n\n\treturn out;\n};\n\n\nvar _removeEmpty = function ( a )\n{\n\tvar out = [];\n\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\tout.push( a[i] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n// Replaceable function in api.util\nvar _stripHtml = function ( d ) {\n\treturn d\n\t\t.replace( _re_html, '' ) // Complete tags\n\t\t.replace(/<script/i, ''); // Safety for incomplete script tag\n};\n\n// Replaceable function in api.util\nvar _escapeHtml = function ( d ) {\n\tif (Array.isArray(d)) {\n\t\td = d.join(',');\n\t}\n\n\treturn typeof d === 'string' ?\n\t\td\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;') :\n\t\td;\n};\n\n// Remove diacritics from a string by decomposing it and then removing\n// non-ascii characters\nvar _normalize = function (str, both) {\n\tif (typeof str !== 'string') {\n\t\treturn str;\n\t}\n\n\t// It is faster to just run `normalize` than it is to check if\n\t// we need to with a regex!\n\tvar res = str.normalize(\"NFD\");\n\n\t// Equally, here we check if a regex is needed or not\n\treturn res.length !== str.length\n\t\t? (both === true ? str + ' ' : '' ) + res.replace(/[\\u0300-\\u036f]/g, \"\")\n\t\t: res;\n}\n\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\nvar _areAllUnique = function ( src ) {\n\tif ( src.length < 2 ) {\n\t\treturn true;\n\t}\n\n\tvar sorted = src.slice().sort();\n\tvar last = sorted[0];\n\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\tif ( sorted[i] === last ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlast = sorted[i];\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\nvar _unique = function ( src )\n{\n\tif (Array.from && Set) {\n\t\treturn Array.from(new Set(src));\n\t}\n\n\tif ( _areAllUnique( src ) ) {\n\t\treturn src.slice();\n\t}\n\n\t// A faster unique method is to use object keys to identify used values,\n\t// but this doesn't work with arrays or objects, which we must also\n\t// consider. See jsperf.app/compare-array-unique-versions/4 for more\n\t// information.\n\tvar\n\t\tout = [],\n\t\tval,\n\t\ti, ien=src.length,\n\t\tj, k=0;\n\n\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\tval = src[i];\n\n\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\tif ( out[j] === val ) {\n\t\t\t\tcontinue again;\n\t\t\t}\n\t\t}\n\n\t\tout.push( val );\n\t\tk++;\n\t}\n\n\treturn out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n\tif (Array.isArray(val)) {\n\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t_flatten(out, val[i]);\n\t\t}\n\t}\n\telse {\n\t\tout.push(val);\n\t}\n\n\treturn out;\n}\n\n// Similar to jQuery's addClass, but use classList.add\nfunction _addClass(el, name) {\n\tif (name) {\n\t\tname.split(' ').forEach(function (n) {\n\t\t\tif (n) {\n\t\t\t\t// `add` does deduplication, so no need to check `contains`\n\t\t\t\tel.classList.add(n);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\nDataTable.util = {\n\t/**\n\t * Return a string with diacritic characters decomposed\n\t * @param {*} mixed Function or string to normalize\n\t * @param {*} both Return original string and the normalized string\n\t * @returns String or undefined\n\t */\n\tdiacritics: function (mixed, both) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type !== 'function') {\n\t\t\treturn _normalize(mixed, both);\n\t\t}\n\t\t_normalize = mixed;\n\t},\n\n\t/**\n\t * Debounce a function\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tdebounce: function ( fn, timeout ) {\n\t\tvar timer;\n\n\t\treturn function () {\n\t\t\tvar that = this;\n\t\t\tvar args = arguments;\n\n\t\t\tclearTimeout(timer);\n\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tfn.apply(that, args);\n\t\t\t}, timeout || 250 );\n\t\t};\n\t},\n\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained\n\t * for the throttled function.\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tthrottle: function ( fn, freq ) {\n\t\tvar\n\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\tlast,\n\t\t\ttimer;\n\n\t\treturn function () {\n\t\t\tvar\n\t\t\t\tthat = this,\n\t\t\t\tnow  = +new Date(),\n\t\t\t\targs = arguments;\n\n\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\tclearTimeout( timer );\n\n\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\tlast = undefined;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}, frequency );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlast = now;\n\t\t\t\tfn.apply( that, args );\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *\n\t *  @param {string} val string to escape\n\t *  @returns {string} escaped string\n\t */\n\tescapeRegex: function ( val ) {\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t},\n\n\t/**\n\t * Create a function that will write to a nested object or array\n\t * @param {*} source JSON notation string\n\t * @returns Write function\n\t */\n\tset: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn DataTable.util.set( source._ );\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Nothing to do when the data source is null\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tsource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if (\n\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\n\t\t) {\n\t\t\t// Like the get, we need to get data from a nested object\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\n\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) ) {\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[source] = val;\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t * @param {*} source JSON notation string\n\t * @returns Value read\n\t */\n\tget: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\tvar o = {};\n\t\t\t$.each( source, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = DataTable.util.get( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn source( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if (\n\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\n\t\t) {\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" ) {\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (data === null || data[ a[i] ] === null) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( data === undefined || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data) { // row and meta also passed, but not used\n\t\t\t\treturn data[source];\n\t\t\t};\n\t\t}\n\t},\n\n\tstripHtml: function (mixed) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type === 'function') {\n\t\t\t_stripHtml = mixed;\n\t\t\treturn;\n\t\t}\n\t\telse if (type === 'string') {\n\t\t\treturn _stripHtml(mixed);\n\t\t}\n\t\treturn mixed;\n\t},\n\n\tescapeHtml: function (mixed) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type === 'function') {\n\t\t\t_escapeHtml = mixed;\n\t\t\treturn;\n\t\t}\n\t\telse if (type === 'string' || Array.isArray(mixed)) {\n\t\t\treturn _escapeHtml(mixed);\n\t\t}\n\t\treturn mixed;\n\t},\n\n\tunique: _unique\n};\n\n\n\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\nfunction _fnHungarianMap ( o )\n{\n\tvar\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\tmatch,\n\t\tnewKey,\n\t\tmap = {};\n\n\t$.each( o, function (key) {\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t{\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\tmap[ newKey ] = key;\n\n\t\t\tif ( match[1] === 'o' )\n\t\t\t{\n\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t}\n\t\t}\n\t} );\n\n\to._hungarianMap = map;\n}\n\n\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\nfunction _fnCamelToHungarian ( src, user, force )\n{\n\tif ( ! src._hungarianMap ) {\n\t\t_fnHungarianMap( src );\n\t}\n\n\tvar hungarianKey;\n\n\t$.each( user, function (key) {\n\t\thungarianKey = src._hungarianMap[ key ];\n\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t{\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t{\n\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t}\n\t\t}\n\t} );\n}\n\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\nvar _fnCompatMap = function ( o, knew, old ) {\n\tif ( o[ knew ] !== undefined ) {\n\t\to[ old ] = o[ knew ];\n\t}\n};\n\n\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatOpts ( init )\n{\n\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t_fnCompatMap( init, 'searching',     'bFilter' );\n\n\t// Boolean initialisation of x-scrolling\n\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t}\n\tif ( typeof init.scrollX === 'boolean' ) {\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t}\n\n\t// Column search objects are in an array, so it needs to be converted\n\t// element by element\n\tvar searchCols = init.aoSearchCols;\n\n\tif ( searchCols ) {\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\tif ( searchCols[i] ) {\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enable search delay if server-side processing is enabled\n\tif (init.serverSide && ! init.searchDelay) {\n\t\tinit.searchDelay = 400;\n\t}\n}\n\n\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatCols ( init )\n{\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\n\t// orderData can be given as an integer\n\tvar dataSort = init.aDataSort;\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\tinit.aDataSort = [ dataSort ];\n\t}\n}\n\n\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBrowserDetect( settings )\n{\n\t// We don't need to do this every time DataTables is constructed, the values\n\t// calculated are specific to the browser and OS configuration which we\n\t// don't expect to change between initialisations\n\tif ( ! DataTable.__browser ) {\n\t\tvar browser = {};\n\t\tDataTable.__browser = browser;\n\n\t\t// Scrolling feature / quirks detection\n\t\tvar n = $('<div/>')\n\t\t\t.css( {\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: -1 * window.pageXOffset, // allow for scrolling\n\t\t\t\theight: 1,\n\t\t\t\twidth: 1,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} )\n\t\t\t.append(\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.appendTo( 'body' );\n\n\t\tvar outer = n.children();\n\t\tvar inner = outer.children();\n\n\t\t// Get scrollbar width\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t// scrollbar on the left, rather than the right.\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\n\t\tn.remove();\n\t}\n\n\t$.extend( settings.oBrowser, DataTable.__browser );\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddColumn( oSettings )\n{\n\t// Add column to aoColumns array\n\tvar oDefaults = DataTable.defaults.column;\n\tvar iCol = oSettings.aoColumns.length;\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\tidx: iCol,\n\t\tsearchFixed: {},\n\t\tcolEl: $('<col>')\n\t} );\n\toSettings.aoColumns.push( oCol );\n\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t// passed into extend can be undefined. This allows the user to give a default\n\t// with only some of the parameters defined, and also not give a default\n\tvar searchCols = oSettings.aoPreSearchCols;\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n}\n\n\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\n{\n\tvar oCol = oSettings.aoColumns[ iCol ];\n\n\t/* User specified column options */\n\tif ( oOptions !== undefined && oOptions !== null )\n\t{\n\t\t// Backwards compatibility\n\t\t_fnCompatCols( oOptions );\n\n\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\n\t\t/* Backwards compatibility for mDataProp */\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t{\n\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t}\n\n\t\tif ( oOptions.sType )\n\t\t{\n\t\t\toCol._sManualType = oOptions.sType;\n\t\t}\n\t\n\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t// the ability to use a valid name for the camel case input\n\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t{\n\t\t\toOptions.sClass = oOptions.className;\n\t\t}\n\n\t\tvar origClass = oCol.sClass;\n\n\t\t$.extend( oCol, oOptions );\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\n\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t// overwriting it in the extend above\n\t\tif (origClass !== oCol.sClass) {\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t}\n\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t * priority if defined\n\t\t */\n\t\tif ( oOptions.iDataSort !== undefined )\n\t\t{\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t}\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t}\n\n\t/* Cache the data get and set functions for speed */\n\tvar mDataSrc = oCol.mData;\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\n\t// The `render` option can be given as an array to access the helper rendering methods.\n\t// The first element is the rendering method to use, the rest are the parameters to pass\n\tif ( oCol.mRender && Array.isArray( oCol.mRender ) ) {\n\t\tvar copy = oCol.mRender.slice();\n\t\tvar name = copy.shift();\n\n\t\toCol.mRender = DataTable.render[name].apply(window, copy);\n\t}\n\n\toCol._render = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\n\tvar attrTest = function( src ) {\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t};\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t);\n\toCol._setter = null;\n\n\toCol.fnGetData = function (rowData, type, meta) {\n\t\tvar innerData = mData( rowData, type, undefined, meta );\n\n\t\treturn oCol._render && type ?\n\t\t\toCol._render( innerData, type, rowData, meta ) :\n\t\t\tinnerData;\n\t};\n\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t};\n\n\t// Indicate if DataTables should read DOM data as an object or array\n\t// Used in _fnGetRowElements\n\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\n\t\toSettings._rowReadObject = true;\n\t}\n\n\t/* Feature sorting overrides column specific when off */\n\tif ( !oSettings.oFeatures.bSort )\n\t{\n\t\toCol.bSortable = false;\n\t}\n}\n\n\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAdjustColumnSizing ( settings )\n{\n\t_fnCalculateColumnWidths( settings );\n\t_fnColumnSizes( settings );\n\n\tvar scroll = settings.oScroll;\n\tif ( scroll.sY !== '' || scroll.sX !== '') {\n\t\t_fnScrollDraw( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n}\n\n/**\n * Apply column sizes\n *\n * @param {*} settings DataTables settings object\n */\nfunction _fnColumnSizes ( settings )\n{\n\tvar cols = settings.aoColumns;\n\n\tfor (var i=0 ; i<cols.length ; i++) {\n\t\tvar width = _fnColumnsSumWidth(settings, [i], false, false);\n\n\t\tcols[i].colEl.css('width', width);\n\t}\n}\n\n\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\n\treturn typeof aiVis[iMatch] === 'number' ?\n\t\taiVis[iMatch] :\n\t\tnull;\n}\n\n\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\tvar iPos = aiVis.indexOf(iMatch);\n\n\treturn iPos !== -1 ? iPos : null;\n}\n\n\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\nfunction _fnVisbleColumns( settings )\n{\n\tvar layout = settings.aoHeader;\n\tvar columns = settings.aoColumns;\n\tvar vis = 0;\n\n\tif ( layout.length ) {\n\t\tfor ( var i=0, ien=layout[0].length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].bVisible && $(layout[0][i].cell).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vis;\n}\n\n\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\nfunction _fnGetColumns( oSettings, sParam )\n{\n\tvar a = [];\n\n\toSettings.aoColumns.map( function(val, i) {\n\t\tif ( val[sParam] ) {\n\t\t\ta.push( i );\n\t\t}\n\t} );\n\n\treturn a;\n}\n\n\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnTypes ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar types = DataTable.ext.type.detect;\n\tvar i, ien, j, jen, k, ken;\n\tvar col, detectedType, cache;\n\n\t// For each column, spin over the \n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcol = columns[i];\n\t\tcache = [];\n\n\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\tcol.sType = col._sManualType;\n\t\t}\n\t\telse if ( ! col.sType ) {\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\n\t\t\t\t\tif (! data[k]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t}\n\n\t\t\t\t\tdetectedType = types[j]( cache[k], settings );\n\n\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t// types\n\t\t\t\t\tif ( ! detectedType && j !== types.length-2 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t// must not be empty\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t// type\n\t\t\t\tif ( detectedType ) {\n\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fall back - if no type was detected, always use string\n\t\t\tif ( ! col.sType ) {\n\t\t\t\tcol.sType = 'string';\n\t\t\t}\n\t\t}\n\n\t\t// Set class names for header / footer for auto type classes\n\t\tvar autoClass = _ext.type.className[col.sType];\n\n\t\tif (autoClass) {\n\t\t\t_columnAutoClass(settings.aoHeader, i, autoClass);\n\t\t\t_columnAutoClass(settings.aoFooter, i, autoClass);\n\t\t}\n\n\t\tvar renderer = _ext.type.render[col.sType];\n\n\t\t// This can only happen once! There is no way to remover\n\t\t// a renderer. After the first time the renderer has\n\t\t// already been set so createTr will run the renderer itself.\n\t\tif (renderer && ! col._render) {\n\t\t\tcol._render = DataTable.util.get(renderer);\n\n\t\t\t_columnAutoRender(settings, i);\n\t\t}\n\t}\n}\n\n/**\n * Apply an auto detected renderer to data which doesn't yet have\n * a renderer\n */\nfunction _columnAutoRender(settings, colIdx) {\n\tvar data = settings.aoData;\n\n\tfor (var i=0 ; i<data.length ; i++) {\n\t\tif (data[i].nTr) {\n\t\t\t// We have to update the display here since there is no\n\t\t\t// invalidation check for the data\n\t\t\tvar display = _fnGetCellData( settings, i, colIdx, 'display' );\n\n\t\t\tdata[i].displayData[colIdx] = display;\n\t\t\t_fnWriteCell(data[i].anCells[colIdx], display);\n\n\t\t\t// No need to update sort / filter data since it has\n\t\t\t// been invalidated and will be re-read with the\n\t\t\t// renderer now applied\n\t\t}\n\t}\n}\n\n/**\n * Apply a class name to a column's header cells\n */\nfunction _columnAutoClass(container, colIdx, className) {\n\tcontainer.forEach(function (row) {\n\t\tif (row[colIdx].unique) {\n\t\t\t_addClass(row[colIdx].cell, className);\n\t\t}\n\t});\n}\n\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {array} headerLayout Layout for header as it was loaded\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, headerLayout, fn )\n{\n\tvar i, iLen, j, jLen, k, kLen, def;\n\tvar columns = oSettings.aoColumns;\n\n\tif ( aoCols ) {\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\n\t\t\tif (aoCols[i] && aoCols[i].name) {\n\t\t\t\tcolumns[i].sName = aoCols[i].name;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Column definitions with aTargets\n\tif ( aoColDefs )\n\t{\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t{\n\t\t\tdef = aoColDefs[i];\n\n\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t? def.target\n\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t? def.targets\n\t\t\t\t\t: def.aTargets;\n\n\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t{\n\t\t\t\taTargets = [ aTargets ];\n\t\t\t}\n\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tvar target = aTargets[j];\n\n\t\t\t\tif ( typeof target === 'number' && target >= 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\twhile( columns.length <= target )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\tfn( target, def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof target === 'number' && target < 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\tfn( columns.length+target, def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof target === 'string' )\n\t\t\t\t{\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ ) {\n\t\t\t\t\t\tif (target.indexOf(':name') !== -1) {\n\t\t\t\t\t\t\tif (columns[k].sName === target.replace(':name', '')) {\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\theaderLayout.forEach(function (row) {\n\t\t\t\t\t\t\t\tvar cell = $(row[k].cell);\n\n\t\t\t\t\t\t\t\t// Legacy support. Note that it means that we don't support\n\t\t\t\t\t\t\t\t// an element name selector only, since they are treated as\n\t\t\t\t\t\t\t\t// class names for 1.x compat.\n\t\t\t\t\t\t\t\tif (target.match(/^[a-z][\\w-]*$/i)) {\n\t\t\t\t\t\t\t\t\ttarget = '.' + target;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (target === '_all' || cell.is( target )) {\n\t\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Statically defined columns array\n\tif ( aoCols ) {\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\n\t\t\tfn( i, aoCols[i] );\n\t\t}\n\t}\n}\n\n\n/**\n * Get the width for a given set of columns\n *\n * @param {*} settings DataTables settings object\n * @param {*} targets Columns - comma separated string or array of numbers\n * @param {*} original Use the original width (true) or calculated (false)\n * @param {*} incVisible Include visible columns (true) or not (false)\n * @returns Combined CSS value\n */\nfunction _fnColumnsSumWidth( settings, targets, original, incVisible ) {\n\tif ( ! Array.isArray( targets ) ) {\n\t\ttargets = _fnColumnsFromHeader( targets );\n\t}\n\n\tvar sum = 0;\n\tvar unit;\n\tvar columns = settings.aoColumns;\n\t\n\tfor ( var i=0, ien=targets.length ; i<ien ; i++ ) {\n\t\tvar column = columns[ targets[i] ];\n\t\tvar definedWidth = original ?\n\t\t\tcolumn.sWidthOrig :\n\t\t\tcolumn.sWidth;\n\n\t\tif ( ! incVisible && column.bVisible === false ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( definedWidth === null || definedWidth === undefined ) {\n\t\t\treturn null; // can't determine a defined width - browser defined\n\t\t}\n\t\telse if ( typeof definedWidth === 'number' ) {\n\t\t\tunit = 'px';\n\t\t\tsum += definedWidth;\n\t\t}\n\t\telse {\n\t\t\tvar matched = definedWidth.match(/([\\d\\.]+)([^\\d]*)/);\n\n\t\t\tif ( matched ) {\n\t\t\t\tsum += matched[1] * 1;\n\t\t\t\tunit = matched.length === 3 ?\n\t\t\t\t\tmatched[2] :\n\t\t\t\t\t'px';\n\t\t\t}\n\t\t}\n\t}\n\n\treturn sum + unit;\n}\n\nfunction _fnColumnsFromHeader( cell )\n{\n\tvar attr = $(cell).closest('[data-dt-column]').attr('data-dt-column');\n\n\tif ( ! attr ) {\n\t\treturn [];\n\t}\n\n\treturn attr.split(',').map( function (val) {\n\t\treturn val * 1;\n\t} );\n}\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} settings dataTables settings object\n *  @param {array} data data array to be added\n *  @param {node} [tr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [tds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\nfunction _fnAddData ( settings, dataIn, tr, tds )\n{\n\t/* Create the object for storing information about this new row */\n\tvar rowIdx = settings.aoData.length;\n\tvar rowModel = $.extend( true, {}, DataTable.models.oRow, {\n\t\tsrc: tr ? 'dom' : 'data',\n\t\tidx: rowIdx\n\t} );\n\n\trowModel._aData = dataIn;\n\tsettings.aoData.push( rowModel );\n\n\tvar columns = settings.aoColumns;\n\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tcolumns[i].sType = null;\n\t}\n\n\t/* Add to the display array */\n\tsettings.aiDisplayMaster.push( rowIdx );\n\n\tvar id = settings.rowIdFn( dataIn );\n\tif ( id !== undefined ) {\n\t\tsettings.aIds[ id ] = rowModel;\n\t}\n\n\t/* Create the DOM information, or register it if already present */\n\tif ( tr || ! settings.oFeatures.bDeferRender )\n\t{\n\t\t_fnCreateTr( settings, rowIdx, tr, tds );\n\t}\n\n\treturn rowIdx;\n}\n\n\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\nfunction _fnAddTr( settings, trs )\n{\n\tvar row;\n\n\t// Allow an individual node to be passed in\n\tif ( ! (trs instanceof $) ) {\n\t\ttrs = $(trs);\n\t}\n\n\treturn trs.map( function (i, el) {\n\t\trow = _fnGetRowElements( settings, el );\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t} );\n}\n\n\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n{\n\tif (type === 'search') {\n\t\ttype = 'filter';\n\t}\n\telse if (type === 'order') {\n\t\ttype = 'sort';\n\t}\n\n\tvar draw           = settings.iDraw;\n\tvar col            = settings.aoColumns[colIdx];\n\tvar rowData        = settings.aoData[rowIdx]._aData;\n\tvar defaultContent = col.sDefaultContent;\n\tvar cellData       = col.fnGetData( rowData, type, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t} );\n\n\t// Allow for a node being returned for non-display types\n\tif (type !== 'display' && cellData && typeof cellData === 'object' && cellData.nodeName) {\n\t\tcellData = cellData.innerHTML;\n\t}\n\n\tif ( cellData === undefined ) {\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\tsettings.iDrawError = draw;\n\t\t}\n\t\treturn defaultContent;\n\t}\n\n\t// When the data source is null and a specific data type is requested (i.e.\n\t// not the original data), we can use default column data\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\tcellData = defaultContent;\n\t}\n\telse if ( typeof cellData === 'function' ) {\n\t\t// If the data source is a function, then we run it and use the return,\n\t\t// executing in the scope of the data object (for instances)\n\t\treturn cellData.call( rowData );\n\t}\n\n\tif ( cellData === null && type === 'display' ) {\n\t\treturn '';\n\t}\n\n\tif ( type === 'filter' ) {\n\t\tvar fomatters = DataTable.ext.type.search;\n\n\t\tif ( fomatters[ col.sType ] ) {\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\n\t\t}\n\t}\n\n\treturn cellData;\n}\n\n\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n{\n\tvar col     = settings.aoColumns[colIdx];\n\tvar rowData = settings.aoData[rowIdx]._aData;\n\n\tcol.fnSetData( rowData, val, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t}  );\n}\n\n/**\n * Write a value to a cell\n * @param {*} td Cell\n * @param {*} val Value\n */\nfunction _fnWriteCell(td, val)\n{\n\tif (val && typeof val === 'object' && val.nodeName) {\n\t\t$(td)\n\t\t\t.empty()\n\t\t\t.append(val);\n\t}\n\telse {\n\t\ttd.innerHTML = val;\n\t}\n}\n\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\nfunction _fnSplitObjNotation( str )\n{\n\tvar parts = str.match(/(\\\\.|[^.])+/g) || [''];\n\n\treturn parts.map( function ( s ) {\n\t\treturn s.replace(/\\\\\\./g, '.');\n\t} );\n}\n\n\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\nfunction _fnGetDataMaster ( settings )\n{\n\treturn _pluck( settings.aoData, '_aData' );\n}\n\n\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnClearTable( settings )\n{\n\tsettings.aoData.length = 0;\n\tsettings.aiDisplayMaster.length = 0;\n\tsettings.aiDisplay.length = 0;\n\tsettings.aIds = {};\n}\n\n\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n{\n\tvar row = settings.aoData[ rowIdx ];\n\tvar i, ien;\n\n\t// Remove the cached data for the row\n\trow._aSortData = null;\n\trow._aFilterData = null;\n\trow.displayData = null;\n\n\t// Are we reading last data from DOM or the data object?\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t// Read the data from the DOM\n\t\trow._aData = _fnGetRowElements(\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t)\n\t\t\t.data;\n\t}\n\telse {\n\t\t// Reading from data object, update the DOM\n\t\tvar cells = row.anCells;\n\t\tvar display = _fnGetRowDisplay(settings, rowIdx);\n\n\t\tif ( cells ) {\n\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t_fnWriteCell(cells[colIdx], display[colIdx]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnWriteCell(cells[i], display[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Column specific invalidation\n\tvar cols = settings.aoColumns;\n\tif ( colIdx !== undefined ) {\n\t\t// Type - the data might have changed\n\t\tcols[ colIdx ].sType = null;\n\n\t\t// Max length string. Its a fairly cheep recalculation, so not worth\n\t\t// something more complicated\n\t\tcols[ colIdx ].maxLenString = null;\n\t}\n\telse {\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\tcols[i].sType = null;\n\t\t\tcols[i].maxLenString = null;\n\t\t}\n\n\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t_fnRowAttributes( settings, row );\n\t}\n}\n\n\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\nfunction _fnGetRowElements( settings, row, colIdx, d )\n{\n\tvar\n\t\ttds = [],\n\t\ttd = row.firstChild,\n\t\tname, col, i=0, contents,\n\t\tcolumns = settings.aoColumns,\n\t\tobjectRead = settings._rowReadObject;\n\n\t// Allow the data object to be passed in, or construct\n\td = d !== undefined ?\n\t\td :\n\t\tobjectRead ?\n\t\t\t{} :\n\t\t\t[];\n\n\tvar attr = function ( str, td  ) {\n\t\tif ( typeof str === 'string' ) {\n\t\t\tvar idx = str.indexOf('@');\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t}\n\t\t}\n\t};\n\n\t// Read data from a cell and store into the data object\n\tvar cellProcess = function ( cell ) {\n\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\tcol = columns[i];\n\t\t\tcontents = (cell.innerHTML).trim();\n\n\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\tsetter( d, contents );\n\n\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t// be read to either an object or an array.\n\t\t\t\tif ( objectRead ) {\n\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t}\n\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td[i] = contents;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t};\n\n\tif ( td ) {\n\t\t// `tr` element was passed in\n\t\twhile ( td ) {\n\t\t\tname = td.nodeName.toUpperCase();\n\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\tcellProcess( td );\n\t\t\t\ttds.push( td );\n\t\t\t}\n\n\t\t\ttd = td.nextSibling;\n\t\t}\n\t}\n\telse {\n\t\t// Existing row object passed in\n\t\ttds = row.anCells;\n\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\tcellProcess( tds[j] );\n\t\t}\n\t}\n\n\t// Read the ID from the DOM if present\n\tvar rowNode = row.firstChild ? row : row.nTr;\n\n\tif ( rowNode ) {\n\t\tvar id = rowNode.getAttribute( 'id' );\n\n\t\tif ( id ) {\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t}\n\t}\n\n\treturn {\n\t\tdata: d,\n\t\tcells: tds\n\t};\n}\n\n/**\n * Render and cache a row's display data for the columns, if required\n * @returns \n */\nfunction _fnGetRowDisplay (settings, rowIdx) {\n\tlet rowModal = settings.aoData[rowIdx];\n\tlet columns = settings.aoColumns;\n\n\tif (! rowModal.displayData) {\n\t\t// Need to render and cache\n\t\trowModal.displayData = [];\n\t\n\t\tfor ( var colIdx=0, len=columns.length ; colIdx<len ; colIdx++ ) {\n\t\t\trowModal.displayData.push(\n\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'display' )\n\t\t\t);\n\t\t}\n\t}\n\n\treturn rowModal.displayData;\n}\n\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n{\n\tvar\n\t\trow = oSettings.aoData[iRow],\n\t\trowData = row._aData,\n\t\tcells = [],\n\t\tnTr, nTd, oCol,\n\t\ti, iLen, create,\n\t\ttrClass = oSettings.oClasses.tbody.row;\n\n\tif ( row.nTr === null )\n\t{\n\t\tnTr = nTrIn || document.createElement('tr');\n\n\t\trow.nTr = nTr;\n\t\trow.anCells = cells;\n\n\t\t_addClass(nTr, trClass);\n\n\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t * to the aoData array for fast look up\n\t\t */\n\t\tnTr._DT_RowIndex = iRow;\n\n\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t_fnRowAttributes( oSettings, row );\n\n\t\t/* Process each column */\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toCol = oSettings.aoColumns[i];\n\t\t\tcreate = nTrIn ? false : true;\n\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\n\t\t\tif (! nTd) {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\n\t\t\tnTd._DT_CellIndex = {\n\t\t\t\trow: iRow,\n\t\t\t\tcolumn: i\n\t\t\t};\n\t\t\t\n\t\t\tcells.push( nTd );\n\t\t\t\n\t\t\tvar display = _fnGetRowDisplay(oSettings, iRow);\n\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\tif (\n\t\t\t\tcreate ||\n\t\t\t\t(\n\t\t\t\t\t(oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t(!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t_fnWriteCell(nTd, display[i]);\n\t\t\t}\n\n\t\t\t// Visibility - add or remove as required\n\t\t\tif ( oCol.bVisible && ! nTrIn )\n\t\t\t{\n\t\t\t\tnTr.appendChild( nTd );\n\t\t\t}\n\t\t\telse if ( ! oCol.bVisible && nTrIn )\n\t\t\t{\n\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t}\n\n\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t{\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', 'row-created', [nTr, rowData, iRow, cells] );\n\t}\n\telse {\n\t\t_addClass(row.nTr, trClass);\n\t}\n}\n\n\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\nfunction _fnRowAttributes( settings, row )\n{\n\tvar tr = row.nTr;\n\tvar data = row._aData;\n\n\tif ( tr ) {\n\t\tvar id = settings.rowIdFn( data );\n\n\t\tif ( id ) {\n\t\t\ttr.id = id;\n\t\t}\n\n\t\tif ( data.DT_RowClass ) {\n\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\ta;\n\n\t\t\t$(tr)\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t.addClass( data.DT_RowClass );\n\t\t}\n\n\t\tif ( data.DT_RowAttr ) {\n\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t}\n\n\t\tif ( data.DT_RowData ) {\n\t\t\t$(tr).data( data.DT_RowData );\n\t\t}\n\t}\n}\n\n\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBuildHead( settings, side )\n{\n\tvar classes = settings.oClasses;\n\tvar columns = settings.aoColumns;\n\tvar i, ien, row;\n\tvar target = side === 'header'\n\t\t? settings.nTHead\n\t\t: settings.nTFoot;\n\tvar titleProp = side === 'header' ? 'sTitle' : side;\n\n\t// Footer might be defined\n\tif (! target) {\n\t\treturn;\n\t}\n\n\t// If no cells yet and we have content for them, then create\n\tif ( $('th, td', target).length === 0 && (side === 'header' || _pluck(settings.aoColumns, titleProp).join('')) ) {\n\t\trow = $('<tr/>')\n\t\t\t.appendTo( target );\n\n\t\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\t$('<th/>')\n\t\t\t\t.html( columns[i][titleProp] || '' )\n\t\t\t\t.appendTo( row );\n\t\t}\n\t}\n\n\tvar detected = _fnDetectHeader( settings, target, true );\n\n\tif (side === 'header') {\n\t\tsettings.aoHeader = detected;\n\t}\n\telse {\n\t\tsettings.aoFooter = detected;\n\t}\n\n\t// ARIA role for the rows\n\t$(target).children('tr').attr('role', 'row');\n\n\t// Every cell needs to be passed through the renderer\n\t$(target).children('tr').children('th, td')\n\t\t.each( function () {\n\t\t\t_fnRenderer( settings, side )(\n\t\t\t\tsettings, $(this), classes\n\t\t\t);\n\t\t} );\n}\n\n/**\n * Build a layout structure for a header or footer\n *\n * @param {*} settings DataTables settings\n * @param {*} source Source layout array\n * @param {*} incColumns What columns should be included\n * @returns Layout array\n */\nfunction _fnHeaderLayout( settings, source, incColumns )\n{\n\tvar row, column, cell;\n\tvar local = [];\n\tvar structure = [];\n\tvar columns = settings.aoColumns;\n\tvar columnCount = columns.length;\n\tvar rowspan, colspan;\n\n\tif ( ! source ) {\n\t\treturn;\n\t}\n\n\t// Default is to work on only visible columns\n\tif ( ! incColumns ) {\n\t\tincColumns = _range(columnCount)\n\t\t\t.filter(function (idx) {\n\t\t\t\treturn columns[idx].bVisible;\n\t\t\t});\n\t}\n\n\t// Make a copy of the master layout array, but with only the columns we want\n\tfor ( row=0 ; row<source.length ; row++ ) {\n\t\t// Remove any columns we haven't selected\n\t\tlocal[row] = source[row].slice().filter(function (cell, i) {\n\t\t\treturn incColumns.includes(i);\n\t\t});\n\n\t\t// Prep the structure array - it needs an element for each row\n\t\tstructure.push( [] );\n\t}\n\n\tfor ( row=0 ; row<local.length ; row++ ) {\n\t\tfor ( column=0 ; column<local[row].length ; column++ ) {\n\t\t\trowspan = 1;\n\t\t\tcolspan = 1;\n\n\t\t\t// Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t// insert point. If there is, then there is nothing to do.\n\t\t\tif ( structure[row][column] === undefined ) {\n\t\t\t\tcell = local[row][column].cell;\n\n\t\t\t\t// Expand for rowspan\n\t\t\t\twhile (\n\t\t\t\t\tlocal[row+rowspan] !== undefined &&\n\t\t\t\t\tlocal[row][column].cell == local[row+rowspan][column].cell\n\t\t\t\t) {\n\t\t\t\t\tstructure[row+rowspan][column] = null;\n\t\t\t\t\trowspan++;\n\t\t\t\t}\n\n\t\t\t\t// And for colspan\n\t\t\t\twhile (\n\t\t\t\t\tlocal[row][column+colspan] !== undefined &&\n\t\t\t\t\tlocal[row][column].cell == local[row][column+colspan].cell\n\t\t\t\t) {\n\t\t\t\t\t// Which also needs to go over rows\n\t\t\t\t\tfor ( var k=0 ; k<rowspan ; k++ ) {\n\t\t\t\t\t\tstructure[row+k][column+colspan] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolspan++;\n\t\t\t\t}\n\n\t\t\t\tstructure[row][column] = {\n\t\t\t\t\tcell: cell,\n\t\t\t\t\tcolspan: colspan,\n\t\t\t\t\trowspan: rowspan,\n\t\t\t\t\ttitle: $('span.dt-column-title', cell).html()\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn structure;\n}\n\n\n/**\n * Draw the header (or footer) element based on the column visibility states.\n *\n *  @param object oSettings dataTables settings object\n *  @param array aoSource Layout array from _fnDetectHeader\n *  @memberof DataTable#oApi\n */\nfunction _fnDrawHead( settings, source )\n{\n\tvar layout = _fnHeaderLayout(settings, source);\n\tvar tr, n;\n\n\tfor ( var row=0 ; row<source.length ; row++ ) {\n\t\ttr = source[row].row;\n\n\t\t// All cells are going to be replaced, so empty out the row\n\t\t// Can't use $().empty() as that kills event handlers\n\t\tif (tr) {\n\t\t\twhile( (n = tr.firstChild) ) {\n\t\t\t\ttr.removeChild( n );\n\t\t\t}\n\t\t}\n\n\t\tfor ( var column=0 ; column<layout[row].length ; column++ ) {\n\t\t\tvar point = layout[row][column];\n\n\t\t\tif (point) {\n\t\t\t\t$(point.cell)\n\t\t\t\t\t.appendTo(tr)\n\t\t\t\t\t.attr('rowspan', point.rowspan)\n\t\t\t\t\t.attr('colspan', point.colspan);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\nfunction _fnDraw( oSettings, ajaxComplete )\n{\n\t// Allow for state saving and a custom start position\n\t_fnStart( oSettings );\n\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\tif ( aPreDraw.indexOf(false) !== -1 )\n\t{\n\t\t_fnProcessingDisplay( oSettings, false );\n\t\treturn;\n\t}\n\n\tvar anRows = [];\n\tvar iRowCount = 0;\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar aiDisplay = oSettings.aiDisplay;\n\tvar iDisplayStart = oSettings._iDisplayStart;\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\tvar columns = oSettings.aoColumns;\n\tvar body = $(oSettings.nTBody);\n\n\toSettings.bDrawing = true;\n\n\t/* Server-side processing draw intercept */\n\tif ( !bServerSide )\n\t{\n\t\toSettings.iDraw++;\n\t}\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\n\t{\n\t\t// Show loading message for server-side processing\n\t\tif (oSettings.iDraw === 0) {\n\t\t\tbody.empty().append(_emptyRow(oSettings));\n\t\t}\n\n\t\t_fnAjaxUpdate( oSettings );\n\t\treturn;\n\t}\n\n\tif ( aiDisplay.length !== 0 )\n\t{\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t{\n\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\tif ( aoData.nTr === null )\n\t\t\t{\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t}\n\n\t\t\tvar nRow = aoData.nTr;\n\n\t\t\t// Add various classes as needed\n\t\t\tfor (var i=0 ; i<columns.length ; i++) {\n\t\t\t\tvar col = columns[i];\n\t\t\t\tvar td = aoData.anCells[i];\n\n\t\t\t\t_addClass(td, _ext.type.className[col.sType]); // auto class\n\t\t\t\t_addClass(td, col.sClass); // column class\n\t\t\t\t_addClass(td, oSettings.oClasses.tbody.cell); // all cells\n\t\t\t}\n\n\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t// useful?\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\n\t\t\tanRows.push( nRow );\n\t\t\tiRowCount++;\n\t\t}\n\t}\n\telse\n\t{\n\t\tanRows[ 0 ] = _emptyRow(oSettings);\n\t}\n\n\t/* Header and footer callbacks */\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\tbody.children().detach();\n\tbody.append( $(anRows) );\n\n\t// Empty table needs a specific class\n\t$(oSettings.nTableWrapper).toggleClass('dt-empty-footer', $('tr', oSettings.nTFoot).length === 0);\n\n\t/* Call all required callback functions for the end of a draw */\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings], true );\n\n\t/* Draw is complete, sorting and filtering must be as well */\n\toSettings.bSorted = false;\n\toSettings.bFiltered = false;\n\toSettings.bDrawing = false;\n}\n\n\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\nfunction _fnReDraw( settings, holdPosition, recompute )\n{\n\tvar\n\t\tfeatures = settings.oFeatures,\n\t\tsort     = features.bSort,\n\t\tfilter   = features.bFilter;\n\n\tif (recompute === undefined || recompute === true) {\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t}\n\n\tif ( holdPosition !== true ) {\n\t\tsettings._iDisplayStart = 0;\n\t}\n\n\t// Let any modules know about the draw hold position state (used by\n\t// scrolling internally)\n\tsettings._drawHold = holdPosition;\n\n\t_fnDraw( settings );\n\n\tsettings._drawHold = false;\n}\n\n\n/*\n * Table is empty - create a row with an empty message in it\n */\nfunction _emptyRow ( settings ) {\n\tvar oLang = settings.oLanguage;\n\tvar zero = oLang.sZeroRecords;\n\tvar dataSrc = _fnDataSource( settings );\n\n\tif ( settings.iDraw <= 1 && (dataSrc === 'ajax' || dataSrc === 'ssp') )\n\t{\n\t\tzero = oLang.sLoadingRecords;\n\t}\n\telse if ( oLang.sEmptyTable && settings.fnRecordsTotal() === 0 )\n\t{\n\t\tzero = oLang.sEmptyTable;\n\t}\n\n\treturn $( '<tr/>' )\n\t\t.append( $('<td />', {\n\t\t\t'colSpan': _fnVisbleColumns( settings ),\n\t\t\t'class':   settings.oClasses.empty.row\n\t\t} ).html( zero ) )[0];\n}\n\n\n/**\n * Convert a `layout` object given by a user to the object structure needed\n * for the renderer. This is done twice, once for above and once for below\n * the table. Ordering must also be considered.\n *\n * @param {*} settings DataTables settings object\n * @param {*} layout Layout object to convert\n * @param {string} side `top` or `bottom`\n * @returns Converted array structure - one item for each row.\n */\nfunction _layoutArray ( settings, layout, side )\n{\n\tvar groups = {};\n\n\t// Combine into like groups (e.g. `top`, `top2`, etc)\n\t$.each( layout, function ( pos, val ) {\n\t\tif (val === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar splitPos = pos.replace(/([A-Z])/g, ' $1').split(' ');\n\n\t\tif ( ! groups[ splitPos[0] ] ) {\n\t\t\tgroups[ splitPos[0] ] = {};\n\t\t}\n\n\t\tvar align = splitPos.length === 1 ?\n\t\t\t'full' :\n\t\t\tsplitPos[1].toLowerCase();\n\t\tvar group = groups[ splitPos[0] ];\n\n\t\t// Transform to an object with a contents property\n\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t// Already a group from a previous pass\n\t\t\tif (val.contents) {\n\t\t\t\tgroup[ align ] = val;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// For objects, each property becomes an entry in the contents\n\t\t\t\t// array for this insert position\n\t\t\t\tgroup[ align ] = {\n\t\t\t\t\tcontents: Object.keys(val).map(function (key) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tfeature: key,\n\t\t\t\t\t\t\topts: val[key]\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tgroup[ align ] = {\n\t\t\t\tcontents: val\n\t\t\t};\n\t\t}\n\n\t\t// And make contents an array\n\t\tif ( ! Array.isArray( group[ align ].contents ) ) {\n\t\t\tgroup[ align ].contents = [ group[ align ].contents ];\n\t\t}\n\t} );\n\n\tvar filtered = Object.keys(groups)\n\t\t.map( function ( pos ) {\n\t\t\t// Filter to only the side we need\n\t\t\tif ( pos.indexOf(side) !== 0 ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tname: pos,\n\t\t\t\tval: groups[pos]\n\t\t\t};\n\t\t} )\n\t\t.filter( function (item) {\n\t\t\treturn item !== null;\n\t\t});\n\n\t// Order by item identifier\n\tfiltered.sort( function ( a, b ) {\n\t\tvar order1 = a.name.replace(/[^0-9]/g, '') * 1;\n\t\tvar order2 = b.name.replace(/[^0-9]/g, '') * 1;\n\n\t\treturn order2 - order1;\n\t} );\n\t\n\tif ( side === 'bottom' ) {\n\t\tfiltered.reverse();\n\t}\n\n\t// Split into rows\n\tvar rows = [];\n\tfor ( var i=0, ien=filtered.length ; i<ien ; i++ ) {\n\t\tif (  filtered[i].val.full ) {\n\t\t\trows.push( { full: filtered[i].val.full } );\n\t\t\t_layoutResolve( settings, rows[ rows.length - 1 ] );\n\n\t\t\tdelete filtered[i].val.full;\n\t\t}\n\n\t\tif ( Object.keys(filtered[i].val).length ) {\n\t\t\trows.push( filtered[i].val );\n\t\t\t_layoutResolve( settings, rows[ rows.length - 1 ] );\n\t\t}\n\t}\n\n\treturn rows;\n}\n\n\n/**\n * Convert the contents of a row's layout object to nodes that can be inserted\n * into the document by a renderer. Execute functions, look up plug-ins, etc.\n *\n * @param {*} settings DataTables settings object\n * @param {*} row Layout object for this row\n */\nfunction _layoutResolve( settings, row ) {\n\tvar getFeature = function (feature, opts) {\n\t\tif ( ! _ext.features[ feature ] ) {\n\t\t\t_fnLog( settings, 0, 'Unknown feature: '+ feature );\n\t\t}\n\n\t\treturn _ext.features[ feature ].apply( this, [settings, opts] );\n\t};\n\n\tvar resolve = function ( item ) {\n\t\tvar line = row[ item ].contents;\n\n\t\tfor ( var i=0, ien=line.length ; i<ien ; i++ ) {\n\t\t\tif ( ! line[i] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if ( typeof line[i] === 'string' ) {\n\t\t\t\tline[i] = getFeature( line[i], null );\n\t\t\t}\n\t\t\telse if ( $.isPlainObject(line[i]) ) {\n\t\t\t\t// If it's an object, it just has feature and opts properties from\n\t\t\t\t// the transform in _layoutArray\n\t\t\t\tline[i] = getFeature(line[i].feature, line[i].opts);\n\t\t\t}\n\t\t\telse if ( typeof line[i].node === 'function' ) {\n\t\t\t\tline[i] = line[i].node( settings );\n\t\t\t}\n\t\t\telse if ( typeof line[i] === 'function' ) {\n\t\t\t\tvar inst = line[i]( settings );\n\n\t\t\t\tline[i] = typeof inst.node === 'function' ?\n\t\t\t\t\tinst.node() :\n\t\t\t\t\tinst;\n\t\t\t}\n\t\t}\n\t};\n\n\t$.each( row, function ( key ) {\n\t\tresolve( key );\n\t} );\n}\n\n\n/**\n * Add the options to the page HTML for the table\n *  @param {object} settings DataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddOptionsHtml ( settings )\n{\n\tvar classes = settings.oClasses;\n\tvar table = $(settings.nTable);\n\n\t// Wrapper div around everything DataTables controls\n\tvar insert = $('<div/>')\n\t\t.attr({\n\t\t\tid:      settings.sTableId+'_wrapper',\n\t\t\t'class': classes.container\n\t\t})\n\t\t.insertBefore(table);\n\n\tsettings.nTableWrapper = insert[0];\n\n\tvar top = _layoutArray( settings, settings.layout, 'top' );\n\tvar bottom = _layoutArray( settings, settings.layout, 'bottom' );\n\tvar renderer = _fnRenderer( settings, 'layout' );\n\n\tif (settings.sDom) {\n\t\t// Legacy\n\t\t_fnLayoutDom(settings, settings.sDom, insert);\n\t}\n\telse {\n\t\t// Everything above - the renderer will actually insert the contents into the document\n\t\ttop.forEach(function (item) {\n\t\t\trenderer( settings, insert, item );\n\t\t});\n\n\t\t// The table - always the center of attention\n\t\trenderer( settings, insert, {\n\t\t\tfull: {\n\t\t\t\ttable: true,\n\t\t\t\tcontents: [ _fnFeatureHtmlTable(settings) ]\n\t\t\t}\n\t\t} );\n\n\t\t// Everything below\n\t\tbottom.forEach(function (item) {\n\t\t\trenderer( settings, insert, item );\n\t\t});\n\t}\n\n\t// Processing floats on top, so it isn't an inserted feature\n\t_processingHtml( settings );\n}\n\n/**\n * Draw the table with the legacy DOM property\n * @param {*} settings DT settings object\n * @param {*} dom DOM string\n * @param {*} insert Insert point\n */\nfunction _fnLayoutDom( settings, dom, insert )\n{\n\tvar parts = dom.match(/(\".*?\")|('.*?')|./g);\n\tvar featureNode, option, newNode, next, attr;\n\n\tfor ( var i=0 ; i<parts.length ; i++ ) {\n\t\tfeatureNode = null;\n\t\toption = parts[i];\n\n\t\tif ( option == '<' ) {\n\t\t\t// New container div\n\t\t\tnewNode = $('<div/>');\n\n\t\t\t// Check to see if we should append an id and/or a class name to the container\n\t\t\tnext = parts[i+1];\n\n\t\t\tif ( next[0] == \"'\" || next[0] == '\"' ) {\n\t\t\t\tattr = next.replace(/['\"]/g, '');\n\n\t\t\t\tvar id = '', className;\n\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t */\n\t\t\t\tif ( attr.indexOf('.') != -1 ) {\n\t\t\t\t\tvar split = attr.split('.');\n\n\t\t\t\t\tid = split[0];\n\t\t\t\t\tclassName = split[1];\n\t\t\t\t}\n\t\t\t\telse if ( attr[0] == \"#\" ) {\n\t\t\t\t\tid = attr;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tclassName = attr;\n\t\t\t\t}\n\n\t\t\t\tnewNode\n\t\t\t\t\t.attr('id', id.substring(1))\n\t\t\t\t\t.addClass(className);\n\n\t\t\t\ti++; // Move along the position array\n\t\t\t}\n\n\t\t\tinsert.append( newNode );\n\t\t\tinsert = newNode;\n\t\t}\n\t\telse if ( option == '>' ) {\n\t\t\t// End container div\n\t\t\tinsert = insert.parent();\n\t\t}\n\t\telse if ( option == 't' ) {\n\t\t\t// Table\n\t\t\tfeatureNode = _fnFeatureHtmlTable( settings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tDataTable.ext.feature.forEach(function(feature) {\n\t\t\t\tif ( option == feature.cFeature ) {\n\t\t\t\t\tfeatureNode = feature.fnInit( settings );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Add to the display\n\t\tif ( featureNode ) {\n\t\t\tinsert.append( featureNode );\n\t\t}\n\t}\n}\n\n\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param {node} thead The header/footer element for the table\n *  @returns {array} Calculated layout array\n *  @memberof DataTable#oApi\n */\nfunction _fnDetectHeader ( settings, thead, write )\n{\n\tvar columns = settings.aoColumns;\n\tvar rows = $(thead).children('tr');\n\tvar row, cell;\n\tvar i, k, l, iLen, shifted, column, colspan, rowspan;\n\tvar isHeader = thead && thead.nodeName.toLowerCase() === 'thead';\n\tvar layout = [];\n\tvar unique;\n\tvar shift = function ( a, i, j ) {\n\t\tvar k = a[i];\n\t\twhile ( k[j] ) {\n\t\t\tj++;\n\t\t}\n\t\treturn j;\n\t};\n\n\t// We know how many rows there are in the layout - so prep it\n\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\n\t\tlayout.push( [] );\n\t}\n\n\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\n\t\trow = rows[i];\n\t\tcolumn = 0;\n\n\t\t// For every cell in the row..\n\t\tcell = row.firstChild;\n\t\twhile ( cell ) {\n\t\t\tif (\n\t\t\t\tcell.nodeName.toUpperCase() == 'TD' ||\n\t\t\t\tcell.nodeName.toUpperCase() == 'TH'\n\t\t\t) {\n\t\t\t\tvar cols = [];\n\n\t\t\t\t// Get the col and rowspan attributes from the DOM and sanitise them\n\t\t\t\tcolspan = cell.getAttribute('colspan') * 1;\n\t\t\t\trowspan = cell.getAttribute('rowspan') * 1;\n\t\t\t\tcolspan = (!colspan || colspan===0 || colspan===1) ? 1 : colspan;\n\t\t\t\trowspan = (!rowspan || rowspan===0 || rowspan===1) ? 1 : rowspan;\n\n\t\t\t\t// There might be colspan cells already in this row, so shift our target\n\t\t\t\t// accordingly\n\t\t\t\tshifted = shift( layout, i, column );\n\n\t\t\t\t// Cache calculation for unique columns\n\t\t\t\tunique = colspan === 1 ?\n\t\t\t\t\ttrue :\n\t\t\t\t\tfalse;\n\t\t\t\t\n\t\t\t\t// Perform header setup\n\t\t\t\tif ( write ) {\n\t\t\t\t\tif (unique) {\n\t\t\t\t\t\t// Allow column options to be set from HTML attributes\n\t\t\t\t\t\t_fnColumnOptions( settings, shifted, $(cell).data() );\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Get the width for the column. This can be defined from the\n\t\t\t\t\t\t// width attribute, style attribute or `columns.width` option\n\t\t\t\t\t\tvar columnDef = columns[shifted];\n\t\t\t\t\t\tvar width = cell.getAttribute('width') || null;\n\t\t\t\t\t\tvar t = cell.style.width.match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\t\t\t\tif ( t ) {\n\t\t\t\t\t\t\twidth = t[1];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcolumnDef.sWidthOrig = columnDef.sWidth || width;\n\n\t\t\t\t\t\tif (isHeader) {\n\t\t\t\t\t\t\t// Column title handling - can be user set, or read from the DOM\n\t\t\t\t\t\t\t// This happens before the render, so the original is still in place\n\t\t\t\t\t\t\tif ( columnDef.sTitle !== null && ! columnDef.autoTitle ) {\n\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.sTitle;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (! columnDef.sTitle && unique) {\n\t\t\t\t\t\t\t\tcolumnDef.sTitle = cell.innerHTML.replace( /<.*?>/g, \"\" );\n\t\t\t\t\t\t\t\tcolumnDef.autoTitle = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Footer specific operations\n\t\t\t\t\t\t\tif (columnDef.footer) {\n\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.footer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Fall back to the aria-label attribute on the table header if no ariaTitle is\n\t\t\t\t\t\t// provided.\n\t\t\t\t\t\tif (! columnDef.ariaTitle) {\n\t\t\t\t\t\t\tcolumnDef.ariaTitle = $(cell).attr(\"aria-label\") || columnDef.sTitle;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Column specific class names\n\t\t\t\t\t\tif ( columnDef.className ) {\n\t\t\t\t\t\t\t$(cell).addClass( columnDef.className );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wrap the column title so we can write to it in future\n\t\t\t\t\tif ( $('span.dt-column-title', cell).length === 0) {\n\t\t\t\t\t\t$('<span>')\n\t\t\t\t\t\t\t.addClass('dt-column-title')\n\t\t\t\t\t\t\t.append(cell.childNodes)\n\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isHeader && $('span.dt-column-order', cell).length === 0) {\n\t\t\t\t\t\t$('<span>')\n\t\t\t\t\t\t\t.addClass('dt-column-order')\n\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If there is col / rowspan, copy the information into the layout grid\n\t\t\t\tfor ( l=0 ; l<colspan ; l++ ) {\n\t\t\t\t\tfor ( k=0 ; k<rowspan ; k++ ) {\n\t\t\t\t\t\tlayout[i+k][shifted+l] = {\n\t\t\t\t\t\t\tcell: cell,\n\t\t\t\t\t\t\tunique: unique\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlayout[i+k].row = row;\n\t\t\t\t\t}\n\n\t\t\t\t\tcols.push( shifted+l );\n\t\t\t\t}\n\n\t\t\t\t// Assign an attribute so spanning cells can still be identified\n\t\t\t\t// as belonging to a column\n\t\t\t\tcell.setAttribute('data-dt-column', _unique(cols).join(','));\n\t\t\t}\n\n\t\t\tcell = cell.nextSibling;\n\t\t}\n\t}\n\n\treturn layout;\n}\n\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\nfunction _fnStart( oSettings )\n{\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\n\t// Check and see if we have an initial draw position from state saving\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t{\n\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\tiInitDisplayStart :\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t0 :\n\t\t\t\tiInitDisplayStart;\n\n\t\toSettings.iInitDisplayStart = -1;\n\t}\n}\n\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\nfunction _fnBuildAjax( oSettings, data, fn )\n{\n\tvar ajaxData;\n\tvar ajax = oSettings.ajax;\n\tvar instance = oSettings.oInstance;\n\tvar callback = function ( json ) {\n\t\tvar status = oSettings.jqXHR\n\t\t\t? oSettings.jqXHR.status\n\t\t\t: null;\n\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\n\t\t\tjson = {};\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\n\t\t}\n\n\t\tvar error = json.error || json.sError;\n\t\tif ( error ) {\n\t\t\t_fnLog( oSettings, 0, error );\n\t\t}\n\n\t\toSettings.json = json;\n\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR], true );\n\t\tfn( json );\n\t};\n\n\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t{\n\t\tajaxData = ajax.data;\n\n\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\tajaxData;                      // an object object or array to merge\n\n\t\t// If the function returned something, use that alone\n\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\tnewData :\n\t\t\t$.extend( true, data, newData );\n\n\t\t// Remove the data property as we've resolved it already and don't want\n\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\tdelete ajax.data;\n\t}\n\n\tvar baseAjax = {\n\t\t\"url\": typeof ajax === 'string' ?\n\t\t\tajax :\n\t\t\t'',\n\t\t\"data\": data,\n\t\t\"success\": callback,\n\t\t\"dataType\": \"json\",\n\t\t\"cache\": false,\n\t\t\"type\": oSettings.sServerMethod,\n\t\t\"error\": function (xhr, error) {\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR], true );\n\n\t\t\tif ( ret.indexOf(true) === -1 ) {\n\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t}\n\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t};\n\n\t// If `ajax` option is an object, extend and override our default base\n\tif ( $.isPlainObject( ajax ) ) {\n\t\t$.extend( baseAjax, ajax )\n\t}\n\n\t// Store the data submitted for the API\n\toSettings.oAjaxData = data;\n\n\t// Allow plug-ins and external processes to modify the data\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data, baseAjax], true );\n\n\tif ( typeof ajax === 'function' )\n\t{\n\t\t// Is a function - let the caller define what needs to be done\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t}\n\telse if (ajax.url === '') {\n\t\tcallback({});\n\t}\n\telse {\n\t\t// Object to extend the base settings\n\t\toSettings.jqXHR = $.ajax( baseAjax );\n\n\t\t// Restore for next time around\n\t\tif ( ajaxData ) {\n\t\t\tajax.data = ajaxData;\n\t\t}\n\t}\n}\n\n\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdate( settings )\n{\n\tsettings.iDraw++;\n\t_fnProcessingDisplay( settings, true );\n\n\t_fnBuildAjax(\n\t\tsettings,\n\t\t_fnAjaxParameters( settings ),\n\t\tfunction(json) {\n\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t}\n\t);\n}\n\n\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxParameters( settings )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tfeatures = settings.oFeatures,\n\t\tpreSearch = settings.oPreviousSearch,\n\t\tpreColSearch = settings.aoPreSearchCols,\n\t\tcolData = function ( idx, prop ) {\n\t\t\treturn typeof columns[idx][prop] === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\tcolumns[idx][prop];\n\t\t};\n\n\treturn {\n\t\tdraw: settings.iDraw,\n\t\tcolumns: columns.map( function ( column, i ) {\n\t\t\treturn {\n\t\t\t\tdata: colData(i, 'mData'),\n\t\t\t\tname: column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable: column.bSortable,\n\t\t\t\tsearch: {\n\t\t\t\t\tvalue: preColSearch[i].search,\n\t\t\t\t\tregex: preColSearch[i].regex,\n\t\t\t\t\tfixed: Object.keys(column.searchFixed).map( function(name) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\tterm: column.searchFixed[name].toString()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t};\n\t\t} ),\n\t\torder: _fnSortFlatten( settings ).map( function ( val ) {\n\t\t\treturn {\n\t\t\t\tcolumn: val.col,\n\t\t\t\tdir: val.dir,\n\t\t\t\tname: colData(val.col, 'sName')\n\t\t\t};\n\t\t} ),\n\t\tstart: settings._iDisplayStart,\n\t\tlength: features.bPaginate ?\n\t\t\tsettings._iDisplayLength :\n\t\t\t-1,\n\t\tsearch: {\n\t\t\tvalue: preSearch.search,\n\t\t\tregex: preSearch.regex,\n\t\t\tfixed: Object.keys(settings.searchFixed).map( function(name) {\n\t\t\t\treturn {\n\t\t\t\t\tname: name,\n\t\t\t\t\tterm: settings.searchFixed[name].toString()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t};\n}\n\n\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdateDraw ( settings, json )\n{\n\tvar data = _fnAjaxDataSrc(settings, json);\n\tvar draw = _fnAjaxDataSrcParam(settings, 'draw', json);\n\tvar recordsTotal = _fnAjaxDataSrcParam(settings, 'recordsTotal', json);\n\tvar recordsFiltered = _fnAjaxDataSrcParam(settings, 'recordsFiltered', json);\n\n\tif ( draw !== undefined ) {\n\t\t// Protect against out of sequence returns\n\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\treturn;\n\t\t}\n\t\tsettings.iDraw = draw * 1;\n\t}\n\n\t// No data in returned object, so rather than an array, we show an empty table\n\tif ( ! data ) {\n\t\tdata = [];\n\t}\n\n\t_fnClearTable( settings );\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t_fnAddData( settings, data[i] );\n\t}\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t_fnDraw( settings, true );\n\t_fnInitComplete( settings );\n\t_fnProcessingDisplay( settings, false );\n}\n\n\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} settings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\nfunction _fnAjaxDataSrc ( settings, json, write )\n{\n\tvar dataProp = 'data';\n\n\tif ($.isPlainObject( settings.ajax ) && settings.ajax.dataSrc !== undefined) {\n\t\t// Could in inside a `dataSrc` object, or not!\n\t\tvar dataSrc = settings.ajax.dataSrc;\n\n\t\t// string, function and object are valid types\n\t\tif (typeof dataSrc === 'string' || typeof dataSrc === 'function') {\n\t\t\tdataProp = dataSrc;\n\t\t}\n\t\telse if (dataSrc.data !== undefined) {\n\t\t\tdataProp = dataSrc.data;\n\t\t}\n\t}\n\n\tif ( ! write ) {\n\t\tif ( dataProp === 'data' ) {\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t// it if possible\n\t\t\treturn json.aaData || json[dataProp];\n\t\t}\n\n\t\treturn dataProp !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataProp )( json ) :\n\t\t\tjson;\n\t}\n\t\n\t// set\n\t_fnSetObjectDataFn( dataProp )( json, write );\n}\n\n/**\n * Very similar to _fnAjaxDataSrc, but for the other SSP properties\n * @param {*} settings DataTables settings object\n * @param {*} param Target parameter\n * @param {*} json JSON data\n * @returns Resolved value\n */\nfunction _fnAjaxDataSrcParam (settings, param, json) {\n\tvar dataSrc = $.isPlainObject( settings.ajax )\n\t\t? settings.ajax.dataSrc\n\t\t: null;\n\n\tif (dataSrc && dataSrc[param]) {\n\t\t// Get from custom location\n\t\treturn _fnGetObjectDataFn( dataSrc[param] )( json );\n\t}\n\n\t// else - Default behaviour\n\tvar old = '';\n\n\t// Legacy support\n\tif (param === 'draw') {\n\t\told = 'sEcho';\n\t}\n\telse if (param === 'recordsTotal') {\n\t\told = 'iTotalRecords';\n\t}\n\telse if (param === 'recordsFiltered') {\n\t\told = 'iTotalDisplayRecords';\n\t}\n\n\treturn json[old] !== undefined\n\t\t? json[old]\n\t\t: json[param];\n}\n\n\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} settings dataTables settings object\n *  @param {object} input search information\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterComplete ( settings, input )\n{\n\tvar columnsSearch = settings.aoPreSearchCols;\n\n\t// Resolve any column types that are unknown due to addition or invalidation\n\t// @todo As per sort - can this be moved into an event handler?\n\t_fnColumnTypes( settings );\n\n\t// In server-side processing all filtering is done by the server, so no point hanging around here\n\tif ( _fnDataSource( settings ) != 'ssp' )\n\t{\n\t\t// Check if any of the rows were invalidated\n\t\t_fnFilterData( settings );\n\n\t\t// Start from the full data set\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t\t// Global filter first\n\t\t_fnFilter( settings.aiDisplay, settings, input.search, input );\n\n\t\t$.each(settings.searchFixed, function (name, term) {\n\t\t\t_fnFilter(settings.aiDisplay, settings, term, {});\n\t\t});\n\n\t\t// Then individual column filters\n\t\tfor ( var i=0 ; i<columnsSearch.length ; i++ )\n\t\t{\n\t\t\tvar col = columnsSearch[i];\n\n\t\t\t_fnFilter(\n\t\t\t\tsettings.aiDisplay,\n\t\t\t\tsettings,\n\t\t\t\tcol.search,\n\t\t\t\tcol,\n\t\t\t\ti\n\t\t\t);\n\n\t\t\t$.each(settings.aoColumns[i].searchFixed, function (name, term) {\n\t\t\t\t_fnFilter(settings.aiDisplay, settings, term, {}, i);\n\t\t\t});\n\t\t}\n\n\t\t// And finally global filtering\n\t\t_fnFilterCustom( settings );\n\t}\n\n\t// Tell the draw function we have been filtering\n\tsettings.bFiltered = true;\n\n\t_fnCallbackFire( settings, null, 'search', [settings] );\n}\n\n\n/**\n * Apply custom filtering functions\n * \n * This is legacy now that we have named functions, but it is widely used\n * from 1.x, so it is not yet deprecated.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCustom( settings )\n{\n\tvar filters = DataTable.ext.search;\n\tvar displayRows = settings.aiDisplay;\n\tvar row, rowIdx;\n\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\tvar rows = [];\n\n\t\t// Loop over each row and see if it should be included\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\trowIdx = displayRows[ j ];\n\t\t\trow = settings.aoData[ rowIdx ];\n\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\trows.push( rowIdx );\n\t\t\t}\n\t\t}\n\n\t\t// So the array reference doesn't break set the results into the\n\t\t// existing array\n\t\tdisplayRows.length = 0;\n\t\tdisplayRows.push.apply(displayRows, rows);\n\t}\n}\n\n\n/**\n * Filter the data table based on user input and draw the table\n */\nfunction _fnFilter( searchRows, settings, input, options, column )\n{\n\tif ( input === '' ) {\n\t\treturn;\n\t}\n\n\tvar i = 0;\n\n\t// Search term can be a function, regex or string - if a string we apply our\n\t// smart filtering regex (assuming the options require that)\n\tvar searchFunc = typeof input === 'function' ? input : null;\n\tvar rpSearch = input instanceof RegExp\n\t\t? input\n\t\t: searchFunc\n\t\t\t? null\n\t\t\t: _fnFilterCreateSearch( input, options );\n\n\t// Then for each row, does the test pass. If not, lop the row from the array\n\twhile (i < searchRows.length) {\n\t\tvar row = settings.aoData[ searchRows[i] ];\n\t\tvar data = column === undefined\n\t\t\t? row._sFilterRow\n\t\t\t: row._aFilterData[ column ];\n\n\t\tif ( (searchFunc && ! searchFunc(data, row._aData, searchRows[i], column)) || (rpSearch && ! rpSearch.test(data)) ) {\n\t\t\tsearchRows.splice(i, 1);\n\t\t\ti--;\n\t\t}\n\n\t\ti++;\n\t}\n}\n\n\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCreateSearch( search, inOpts )\n{\n\tvar not = [];\n\tvar options = $.extend({}, {\n\t\tboundary: false,\n\t\tcaseInsensitive: true,\n\t\texact: false,\n\t\tregex: false,\n\t\tsmart: true\n\t}, inOpts);\n\n\tif (typeof search !== 'string') {\n\t\tsearch = search.toString();\n\t}\n\n\tif (options.exact) {\n\t\treturn new RegExp(\n\t\t\t'^'+_fnEscapeRegex(search)+'$',\n\t\t\toptions.caseInsensitive ? 'i' : ''\n\t\t);\n\t}\n\n\tsearch = options.regex ?\n\t\tsearch :\n\t\t_fnEscapeRegex( search );\n\t\n\tif ( options.smart ) {\n\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t * order is important - a la google. And a negative look around for\n\t\t * finding rows which don't contain a given string.\n\t\t * \n\t\t * So this is the sort of thing we want to generate:\n\t\t * \n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t */\n\t\tvar parts = search.match( /!?[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g ) || [''];\n\t\tvar a = parts.map( function ( word ) {\n\t\t\tvar negative = false;\n\t\t\tvar m;\n\n\t\t\t// Determine if it is a \"does not include\"\n\t\t\tif ( word.charAt(0) === '!' ) {\n\t\t\t\tnegative = true;\n\t\t\t\tword = word.substring(1);\n\t\t\t}\n\n\t\t\t// Strip the quotes from around matched phrases\n\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\tm = word.match( /^\"(.*)\"$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\t\t\telse if ( word.charAt(0) === '\\u201C' ) {\n\t\t\t\t// Smart quote match (iPhone users)\n\t\t\t\tm = word.match( /^\\u201C(.*)\\u201D$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\n\t\t\t// For our \"not\" case, we need to modify the string that is\n\t\t\t// allowed to match at the end of the expression.\n\t\t\tif (negative) {\n\t\t\t\tif (word.length > 1) {\n\t\t\t\t\tnot.push('(?!'+word+')');\n\t\t\t\t}\n\n\t\t\t\tword = '';\n\t\t\t}\n\n\t\t\treturn word.replace('\"', '');\n\t\t} );\n\n\t\tvar match = not.length\n\t\t\t? not.join('')\n\t\t\t: '';\n\n\t\tvar boundary = options.boundary\n\t\t\t? '\\\\b'\n\t\t\t: '';\n\n\t\tsearch = '^(?=.*?'+boundary+a.join( ')(?=.*?'+boundary )+')('+match+'.)*$';\n\t}\n\n\treturn new RegExp( search, options.caseInsensitive ? 'i' : '' );\n}\n\n\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar column;\n\tvar j, jen, filterData, cellData, row;\n\tvar wasInvalidated = false;\n\n\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\n\t\tif (! data[rowIdx]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\trow = data[rowIdx];\n\n\t\tif ( ! row._aFilterData ) {\n\t\t\tfilterData = [];\n\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\tcolumn = columns[j];\n\n\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\tcellData = _fnGetCellData( settings, rowIdx, j, 'filter' );\n\n\t\t\t\t\t// Search in DataTables is string based\n\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcellData = '';\n\t\t\t\t}\n\n\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t// method used here is much faster https://jsperf.com/html-decode\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t}\n\n\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t}\n\n\t\t\t\tfilterData.push( cellData );\n\t\t\t}\n\n\t\t\trow._aFilterData = filterData;\n\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\twasInvalidated = true;\n\t\t}\n\t}\n\n\treturn wasInvalidated;\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitialise ( settings )\n{\n\tvar i, iAjaxStart=settings.iInitDisplayStart;\n\n\t/* Ensure that the table data is fully initialised */\n\tif ( ! settings.bInitialised ) {\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\treturn;\n\t}\n\n\t/* Build and draw the header / footer for the table */\n\t_fnBuildHead( settings, 'header' );\n\t_fnBuildHead( settings, 'footer' );\n\t_fnDrawHead( settings, settings.aoHeader );\n\t_fnDrawHead( settings, settings.aoFooter );\n\n\t// Enable features\n\t_fnAddOptionsHtml( settings );\n\t_fnSortInit( settings );\n\n\t_colGroup( settings );\n\n\t/* Okay to show that something is going on now */\n\t_fnProcessingDisplay( settings, true );\n\n\t_fnCallbackFire( settings, null, 'preInit', [settings], true );\n\n\t// If there is default sorting required - let's do it. The sort function\n\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t// data (show 'loading' message possibly)\n\t_fnReDraw( settings );\n\n\tvar dataSrc = _fnDataSource( settings );\n\n\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\tif ( dataSrc != 'ssp' ) {\n\t\t// if there is an ajax source load the data\n\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t_fnBuildAjax( settings, {}, function(json) {\n\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\n\t\t\t\t// Got the data - add it to the table\n\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t}\n\n\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t// it appear 'fresh'\n\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\n\t\t\t\t_fnReDraw( settings );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t}, settings );\n\t\t}\n\t\telse {\n\t\t\t_fnInitComplete( settings );\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t}\n\t}\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitComplete ( settings )\n{\n\tif (settings._bInitComplete) {\n\t\treturn;\n\t}\n\n\tvar args = [settings, settings.json];\n\n\tsettings._bInitComplete = true;\n\n\t// Table is fully set up and we have data, so calculate the\n\t// column widths\n\t_fnAdjustColumnSizing( settings );\n\n\t_fnCallbackFire( settings, null, 'plugin-init', args, true );\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', args, true );\n}\n\nfunction _fnLengthChange ( settings, val )\n{\n\tvar len = parseInt( val, 10 );\n\tsettings._iDisplayLength = len;\n\n\t_fnLengthOverflow( settings );\n\n\t// Fire length change event\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n}\n\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\nfunction _fnPageChange ( settings, action, redraw )\n{\n\tvar\n\t\tstart     = settings._iDisplayStart,\n\t\tlen       = settings._iDisplayLength,\n\t\trecords   = settings.fnRecordsDisplay();\n\n\tif ( records === 0 || len === -1 )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( typeof action === \"number\" )\n\t{\n\t\tstart = action * len;\n\n\t\tif ( start > records )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"first\" )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( action == \"previous\" )\n\t{\n\t\tstart = len >= 0 ?\n\t\t\tstart - len :\n\t\t\t0;\n\n\t\tif ( start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"next\" )\n\t{\n\t\tif ( start + len < records )\n\t\t{\n\t\t\tstart += len;\n\t\t}\n\t}\n\telse if ( action == \"last\" )\n\t{\n\t\tstart = Math.floor( (records-1) / len) * len;\n\t}\n\telse if ( action === 'ellipsis' )\n\t{\n\t\treturn;\n\t}\n\telse\n\t{\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t}\n\n\tvar changed = settings._iDisplayStart !== start;\n\tsettings._iDisplayStart = start;\n\n\t_fnCallbackFire( settings, null, changed ? 'page' : 'page-nc', [settings] );\n\n\tif ( changed && redraw ) {\n\t\t_fnDraw( settings );\n\t}\n\n\treturn changed;\n}\n\n\n/**\n * Generate the node required for the processing node\n *  @param {object} settings DataTables settings object\n */\nfunction _processingHtml ( settings )\n{\n\tvar table = settings.nTable;\n\n\tif ( settings.oFeatures.bProcessing ) {\n\t\tvar n = $('<div/>', {\n\t\t\t\t'id': settings.sTableId + '_processing',\n\t\t\t\t'class': settings.oClasses.processing.container,\n\t\t\t\t'role': 'status'\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.append('<div><div></div><div></div><div></div><div></div></div>')\n\t\t\t.insertBefore( table );\n\t\t\n\t\t$(table).on( 'processing.dt.DT', function (e, s, show) {\n\t\t\tn.css( 'display', show ? 'block' : 'none' );\n\t\t} );\n\t}\n}\n\n\n/**\n * Display or hide the processing indicator\n *  @param {object} settings DataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n */\nfunction _fnProcessingDisplay ( settings, show )\n{\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n}\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlTable ( settings )\n{\n\tvar table = $(settings.nTable);\n\n\t// Scrolling from here on in\n\tvar scroll = settings.oScroll;\n\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\treturn settings.nTable;\n\t}\n\n\tvar scrollX = scroll.sX;\n\tvar scrollY = scroll.sY;\n\tvar classes = settings.oClasses.scrolling;\n\tvar caption = settings.captionNode;\n\tvar captionSide = caption ? caption._captionSide : null;\n\tvar headerClone = $( table[0].cloneNode(false) );\n\tvar footerClone = $( table[0].cloneNode(false) );\n\tvar footer = table.children('tfoot');\n\tvar _div = '<div/>';\n\tvar size = function ( s ) {\n\t\treturn !s ? null : _fnStringToCss( s );\n\t};\n\n\tif ( ! footer.length ) {\n\t\tfooter = null;\n\t}\n\n\t/*\n\t * The HTML structure that we want to generate in this function is:\n\t *  div - scroller\n\t *    div - scroll head\n\t *      div - scroll head inner\n\t *        table - scroll head table\n\t *          thead - thead\n\t *    div - scroll body\n\t *      table - table (master table)\n\t *        thead - thead clone for sizing\n\t *        tbody - tbody\n\t *    div - scroll foot\n\t *      div - scroll foot inner\n\t *        table - scroll foot table\n\t *          tfoot - tfoot\n\t */\n\tvar scroller = $( _div, { 'class': classes.container } )\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.header.self } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.header.inner } )\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t)\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.body } )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t} )\n\t\t\t\t.append( table )\n\t\t);\n\n\tif ( footer ) {\n\t\tscroller.append(\n\t\t\t$(_div, { 'class': classes.footer.self } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.footer.inner } )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t);\n\t}\n\n\tvar children = scroller.children();\n\tvar scrollHead = children[0];\n\tvar scrollBody = children[1];\n\tvar scrollFoot = footer ? children[2] : null;\n\n\t// When the body is scrolled, then we also want to scroll the headers\n\t$(scrollBody).on( 'scroll.DT', function () {\n\t\tvar scrollLeft = this.scrollLeft;\n\n\t\tscrollHead.scrollLeft = scrollLeft;\n\n\t\tif ( footer ) {\n\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t}\n\t} );\n\n\t// When focus is put on the header cells, we might need to scroll the body\n\t$('th, td', scrollHead).on('focus', function () {\n\t\tvar scrollLeft = scrollHead.scrollLeft;\n\n\t\tscrollBody.scrollLeft = scrollLeft;\n\n\t\tif ( footer ) {\n\t\t\tscrollBody.scrollLeft = scrollLeft;\n\t\t}\n\t});\n\n\t$(scrollBody).css('max-height', scrollY);\n\tif (! scroll.bCollapse) {\n\t\t$(scrollBody).css('height', scrollY);\n\t}\n\n\tsettings.nScrollHead = scrollHead;\n\tsettings.nScrollBody = scrollBody;\n\tsettings.nScrollFoot = scrollFoot;\n\n\t// On redraw - align columns\n\tsettings.aoDrawCallback.push(_fnScrollDraw);\n\n\treturn scroller[0];\n}\n\n\n\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Correct colgroup > col values if needed\n *   3. Copy colgroup > col over to header and footer\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnScrollDraw ( settings )\n{\n\t// Given that this is such a monster function, a lot of variables are use\n\t// to try and keep the minimised size as small as possible\n\tvar\n\t\tscroll         = settings.oScroll,\n\t\tbarWidth       = scroll.iBarWidth,\n\t\tdivHeader      = $(settings.nScrollHead),\n\t\tdivHeaderInner = divHeader.children('div'),\n\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\tdivBodyEl      = settings.nScrollBody,\n\t\tdivBody        = $(divBodyEl),\n\t\tdivFooter      = $(settings.nScrollFoot),\n\t\tdivFooterInner = divFooter.children('div'),\n\t\tdivFooterTable = divFooterInner.children('table'),\n\t\theader         = $(settings.nTHead),\n\t\ttable          = $(settings.nTable),\n\t\tfooter         = settings.nTFoot && $('th, td', settings.nTFoot).length ? $(settings.nTFoot) : null,\n\t\tbrowser        = settings.oBrowser,\n\t\theaderCopy, footerCopy;\n\n\t// If the scrollbar visibility has changed from the last draw, we need to\n\t// adjust the column sizes as the table width will have changed to account\n\t// for the scrollbar\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t_fnAdjustColumnSizing( settings );\n\t\treturn; // adjust column sizing will call this function again\n\t}\n\telse {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t}\n\n\t// 1. Re-create the table inside the scrolling div\n\t// Remove the old minimised thead and tfoot elements in the inner table\n\ttable.children('thead, tfoot').remove();\n\n\t// Clone the current header and footer elements and then place it into the inner table\n\theaderCopy = header.clone().prependTo( table );\n\theaderCopy.find('th, td').removeAttr('tabindex');\n\theaderCopy.find('[id]').removeAttr('id');\n\n\tif ( footer ) {\n\t\tfooterCopy = footer.clone().prependTo( table );\n\t\tfooterCopy.find('[id]').removeAttr('id');\n\t}\n\n\t// 2. Correct colgroup > col values if needed\n\t// It is possible that the cell sizes are smaller than the content, so we need to\n\t// correct colgroup>col for such cases. This can happen if the auto width detection\n\t// uses a cell which has a longer string, but isn't the widest! For example \n\t// \"Chief Executive Officer (CEO)\" is the longest string in the demo, but\n\t// \"Systems Administrator\" is actually the widest string since it doesn't collapse.\n\tif (settings.aiDisplay.length) {\n\t\t// Get the column sizes from the first row in the table\n\t\tvar colSizes = table.find('tbody tr').eq(0).find('th, td').map(function () {\n\t\t\treturn $(this).outerWidth();\n\t\t});\n\n\t\t// Check against what the colgroup > col is set to and correct if needed\n\t\t$('col', settings.colgroup).each(function (i) {\n\t\t\tvar colWidth = this.style.width.replace('px', '');\n\n\t\t\tif (colWidth !== colSizes[i]) {\n\t\t\t\tthis.style.width = colSizes[i] + 'px';\n\t\t\t}\n\t\t});\n\t}\n\n\t// 3. Copy the colgroup over to the header and footer\n\tdivHeaderTable\n\t\t.find('colgroup')\n\t\t.remove();\n\n\tdivHeaderTable.append(settings.colgroup.clone());\n\n\tif ( footer ) {\n\t\tdivFooterTable\n\t\t\t.find('colgroup')\n\t\t\t.remove();\n\n\t\tdivFooterTable.append(settings.colgroup.clone());\n\t}\n\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t// the content of the cell so that the width applied to the header and body\n\t// both match, but we want to hide it completely.\n\t$('th, td', headerCopy).each(function () {\n\t\t$(this).children().wrapAll('<div class=\"dt-scroll-sizing\">');\n\t});\n\n\tif ( footer ) {\n\t\t$('th, td', footerCopy).each(function () {\n\t\t\t$(this).children().wrapAll('<div class=\"dt-scroll-sizing\">');\n\t\t});\n\t}\n\n\t// 4. Clean up\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\tvar isScrolling = Math.floor(table.height()) > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\tvar paddingSide = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\n\t// Set the width's of the header and footer tables\n\tvar outerWidth = table.outerWidth();\n\n\tdivHeaderTable.css('width', _fnStringToCss( outerWidth ));\n\tdivHeaderInner\n\t\t.css('width', _fnStringToCss( outerWidth ))\n\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\n\n\tif ( footer ) {\n\t\tdivFooterTable.css('width', _fnStringToCss( outerWidth ));\n\t\tdivFooterInner\n\t\t\t.css('width', _fnStringToCss( outerWidth ))\n\t\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\n\t}\n\n\t// Correct DOM ordering for colgroup - comes before the thead\n\ttable.children('colgroup').prependTo(table);\n\n\t// Adjust the position of the header in case we loose the y-scrollbar\n\tdivBody.trigger('scroll');\n\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t// only if we aren't holding the position\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\tdivBodyEl.scrollTop = 0;\n\t}\n}\n\n/**\n * Calculate the width of columns for the table\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnCalculateColumnWidths ( settings )\n{\n\t// Not interested in doing column width calculation if auto-width is disabled\n\tif (! settings.oFeatures.bAutoWidth) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ttable = settings.nTable,\n\t\tcolumns = settings.aoColumns,\n\t\tscroll = settings.oScroll,\n\t\tscrollY = scroll.sY,\n\t\tscrollX = scroll.sX,\n\t\tscrollXInner = scroll.sXInner,\n\t\tvisibleColumns = _fnGetColumns( settings, 'bVisible' ),\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\ttableContainer = table.parentNode,\n\t\ti, column, columnIdx;\n\n\tvar styleWidth = table.style.width;\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\ttableWidthAttr = styleWidth;\n\t}\n\n\t// Let plug-ins know that we are doing a recalc, in case they have changed any of the\n\t// visible columns their own way (e.g. Responsive uses display:none).\n\t_fnCallbackFire(\n\t\tsettings,\n\t\tnull,\n\t\t'column-calc',\n\t\t{visible: visibleColumns},\n\t\tfalse\n\t);\n\n\t// Construct a single row, worst case, table with the widest\n\t// node in the data, assign any user defined widths, then insert it into\n\t// the DOM and allow the browser to do all the hard work of calculating\n\t// table widths\n\tvar tmpTable = $(table.cloneNode())\n\t\t.css( 'visibility', 'hidden' )\n\t\t.removeAttr( 'id' );\n\n\t// Clean up the table body\n\ttmpTable.append('<tbody>')\n\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\n\t// Clone the table header and footer - we can't use the header / footer\n\t// from the cloned table, since if scrolling is active, the table's\n\t// real header and footer are contained in different table tags\n\ttmpTable\n\t\t.append( $(settings.nTHead).clone() )\n\t\t.append( $(settings.nTFoot).clone() );\n\n\t// Remove any assigned widths from the footer (from scrolling)\n\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\n\t// Apply custom sizing to the cloned header\n\ttmpTable.find('thead th, thead td').each( function () {\n\t\t// Get the `width` from the header layout\n\t\tvar width = _fnColumnsSumWidth( settings, this, true, false );\n\n\t\tif ( width ) {\n\t\t\tthis.style.width = width;\n\n\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t// width the column requires, then it will have no effect\n\t\t\tif ( scrollX ) {\n\t\t\t\t$( this ).append( $('<div/>').css( {\n\t\t\t\t\twidth: width,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tborder: 0,\n\t\t\t\t\theight: 1\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.style.width = '';\n\t\t}\n\t} );\n\n\t// Find the widest piece of data for each column and put it into the table\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\tcolumnIdx = visibleColumns[i];\n\t\tcolumn = columns[ columnIdx ];\n\n\t\tvar longest = _fnGetMaxLenString(settings, columnIdx);\n\t\tvar autoClass = _ext.type.className[column.sType];\n\t\tvar text = longest + column.sContentPadding;\n\t\tvar insert = longest.indexOf('<') === -1\n\t\t\t? document.createTextNode(text)\n\t\t\t: text\n\t\t\n\t\t$('<td/>')\n\t\t\t.addClass(autoClass)\n\t\t\t.addClass(column.sClass)\n\t\t\t.append(insert)\n\t\t\t.appendTo(tr);\n\t}\n\n\t// Tidy the temporary table - remove name attributes so there aren't\n\t// duplicated in the dom (radio elements for example)\n\t$('[name]', tmpTable).removeAttr('name');\n\n\t// Table has been built, attach to the document so we can work with it.\n\t// A holding element is used, positioned at the top of the container\n\t// with minimal height, so it has no effect on if the container scrolls\n\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t// needed\n\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t{\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\theight: 1,\n\t\t\t\tright: 0,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} :\n\t\t\t{}\n\t\t)\n\t\t.append( tmpTable )\n\t\t.appendTo( tableContainer );\n\n\t// When scrolling (X or Y) we want to set the width of the table as \n\t// appropriate. However, when not scrolling leave the table width as it\n\t// is. This results in slightly different, but I think correct behaviour\n\tif ( scrollX && scrollXInner ) {\n\t\ttmpTable.width( scrollXInner );\n\t}\n\telse if ( scrollX ) {\n\t\ttmpTable.css( 'width', 'auto' );\n\t\ttmpTable.removeAttr('width');\n\n\t\t// If there is no width attribute or style, then allow the table to\n\t\t// collapse\n\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t}\n\t}\n\telse if ( scrollY ) {\n\t\ttmpTable.width( tableContainer.clientWidth );\n\t}\n\telse if ( tableWidthAttr ) {\n\t\ttmpTable.width( tableWidthAttr );\n\t}\n\n\t// Get the width of each column in the constructed table\n\tvar total = 0;\n\tvar bodyCells = tmpTable.find('tbody tr').eq(0).children();\n\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t// Use getBounding for sub-pixel accuracy, which we then want to round up!\n\t\tvar bounding = bodyCells[i].getBoundingClientRect().width;\n\n\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t// of the table might not equal the total given here\n\t\ttotal += bounding;\n\n\t\t// Width for each column to use\n\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding );\n\t}\n\n\ttable.style.width = _fnStringToCss( total );\n\n\t// Finished with the table - ditch it\n\tholder.remove();\n\n\t// If there is a width attr, we want to attach an event listener which\n\t// allows the table sizing to automatically adjust when the window is\n\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t// CSS is a relative value or absolute - DOM read is always px.\n\tif ( tableWidthAttr ) {\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t}\n\n\tif ( (tableWidthAttr || scrollX) && ! settings._reszEvt ) {\n\t\tvar bindResize = function () {\n\t\t\t$(window).on('resize.DT-'+settings.sInstance, DataTable.util.throttle( function () {\n\t\t\t\tif (! settings.bDestroying) {\n\t\t\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\t\t}\n\t\t\t} ) );\n\t\t};\n\n\t\tbindResize();\n\n\t\tsettings._reszEvt = true;\n\t}\n}\n\n\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} string of the max length\n *  @memberof DataTable#oApi\n */\nfunction _fnGetMaxLenString( settings, colIdx )\n{\n\tvar column = settings.aoColumns[colIdx];\n\n\tif (! column.maxLenString) {\n\t\tvar s, max='', maxLen = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aiDisplayMaster.length ; i<ien ; i++ ) {\n\t\t\tvar rowIdx = settings.aiDisplayMaster[i];\n\t\t\tvar data = _fnGetRowDisplay(settings, rowIdx)[colIdx];\n\n\t\t\tvar cellString = data && typeof data === 'object' && data.nodeType\n\t\t\t\t? data.innerHTML\n\t\t\t\t: data+'';\n\n\t\t\t// Remove id / name attributes from elements so they\n\t\t\t// don't interfere with existing elements\n\t\t\tcellString = cellString\n\t\t\t\t.replace(/id=\".*?\"/g, '')\n\t\t\t\t.replace(/name=\".*?\"/g, '');\n\n\t\t\ts = _stripHtml(cellString)\n\t\t\t\t.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > maxLen ) {\n\t\t\t\t// We want the HTML in the string, but the length that\n\t\t\t\t// is important is the stripped string\n\t\t\t\tmax = cellString;\n\t\t\t\tmaxLen = s.length;\n\t\t\t}\n\t\t}\n\n\t\tcolumn.maxLenString = max;\n\t}\n\n\treturn column.maxLenString;\n}\n\n\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\nfunction _fnStringToCss( s )\n{\n\tif ( s === null ) {\n\t\treturn '0px';\n\t}\n\n\tif ( typeof s == 'number' ) {\n\t\treturn s < 0 ?\n\t\t\t'0px' :\n\t\t\ts+'px';\n\t}\n\n\t// Check it has a unit character already\n\treturn s.match(/\\d$/) ?\n\t\ts+'px' :\n\t\ts;\n}\n\n/**\n * Re-insert the `col` elements for current visibility\n *\n * @param {*} settings DT settings\n */\nfunction _colGroup( settings ) {\n\tvar cols = settings.aoColumns;\n\n\tsettings.colgroup.empty();\n\n\tfor (i=0 ; i<cols.length ; i++) {\n\t\tif (cols[i].bVisible) {\n\t\t\tsettings.colgroup.append(cols[i].colEl);\n\t\t}\n\t}\n}\n\n\nfunction _fnSortInit( settings ) {\n\tvar target = settings.nTHead;\n\tvar headerRows = target.querySelectorAll('tr');\n\tvar legacyTop = settings.bSortCellsTop;\n\tvar notSelector = ':not([data-dt-order=\"disable\"]):not([data-dt-order=\"icon-only\"])';\n\t\n\t// Legacy support for `orderCellsTop`\n\tif (legacyTop === true) {\n\t\ttarget = headerRows[0];\n\t}\n\telse if (legacyTop === false) {\n\t\ttarget = headerRows[ headerRows.length - 1 ];\n\t}\n\n\t_fnSortAttachListener(\n\t\tsettings,\n\t\ttarget,\n\t\ttarget === settings.nTHead\n\t\t\t? 'tr'+notSelector+' th'+notSelector+', tr'+notSelector+' td'+notSelector\n\t\t\t: 'th'+notSelector+', td'+notSelector\n\t);\n\n\t// Need to resolve the user input array into our internal structure\n\tvar order = [];\n\t_fnSortResolve( settings, order, settings.aaSorting );\n\n\tsettings.aaSorting = order;\n}\n\n\nfunction _fnSortAttachListener(settings, node, selector, column, callback) {\n\t_fnBindAction( node, selector, function (e) {\n\t\tvar columns = column === undefined\n\t\t\t? _fnColumnsFromHeader( e.target )\n\t\t\t: [column];\n\n\t\tif ( columns.length ) {\n\t\t\t_fnProcessingDisplay( settings, true );\n\n\t\t\t// Allow the processing display to show\n\t\t\tsetTimeout( function () {\n\t\t\t\tfor ( var i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\t\t\tvar append = e.shiftKey || i > 0;\n\t\t\n\t\t\t\t\t_fnSortAdd( settings, columns[i], append );\n\t\t\t\t}\n\n\t\t\t\t_fnSort( settings );\n\t\t\t\t_fnSortDisplay( settings );\n\t\t\t\t_fnReDraw( settings, false, false );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t} );\n}\n\n/**\n * Sort the display array to match the master's order\n * @param {*} settings\n */\nfunction _fnSortDisplay(settings) {\n\tvar display = settings.aiDisplay;\n\tvar master = settings.aiDisplayMaster;\n\n\tdisplay.sort(function(a, b){  \n\t\treturn master.indexOf(a) - master.indexOf(b);\n\t});\n}\n\n\nfunction _fnSortResolve (settings, nestedSort, sort) {\n\tvar push = function ( a ) {\n\t\tif ($.isPlainObject(a)) {\n\t\t\tif (a.idx !== undefined) {\n\t\t\t\t// Index based ordering\n\t\t\t\tnestedSort.push([a.idx, a.dir]);\n\t\t\t}\n\t\t\telse if (a.name) {\n\t\t\t\t// Name based ordering\n\t\t\t\tvar cols = _pluck( settings.aoColumns, 'sName');\n\t\t\t\tvar idx = cols.indexOf(a.name);\n\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tnestedSort.push([idx, a.dir]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Plain column index and direction pair\n\t\t\tnestedSort.push(a);\n\t\t}\n\t};\n\n\tif ( $.isPlainObject(sort) ) {\n\t\t// Object\n\t\tpush(sort);\n\t}\n\telse if ( sort.length && typeof sort[0] === 'number' ) {\n\t\t// 1D array\n\t\tpush(sort);\n\t}\n\telse if ( sort.length ) {\n\t\t// 2D array\n\t\tfor (var z=0; z<sort.length; z++) {\n\t\t\tpush(sort[z]); // Object or array\n\t\t}\n\t}\n}\n\n\nfunction _fnSortFlatten ( settings )\n{\n\tvar\n\t\ti, k, kLen,\n\t\taSort = [],\n\t\textSort = DataTable.ext.type.order,\n\t\taoColumns = settings.aoColumns,\n\t\taDataSort, iCol, sType, srcCol,\n\t\tfixed = settings.aaSortingFixed,\n\t\tfixedObj = $.isPlainObject( fixed ),\n\t\tnestedSort = [];\n\t\n\tif ( ! settings.oFeatures.bSort ) {\n\t\treturn aSort;\n\t}\n\n\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t// specified\n\tif ( Array.isArray( fixed ) ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed );\n\t}\n\n\tif ( fixedObj && fixed.pre ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed.pre );\n\t}\n\n\t_fnSortResolve( settings, nestedSort, settings.aaSorting );\n\n\tif (fixedObj && fixed.post ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed.post );\n\t}\n\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t{\n\t\tsrcCol = nestedSort[i][0];\n\n\t\tif ( aoColumns[ srcCol ] ) {\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(nestedSort[i][1]);\n\t\t\t\t}\n\n\t\t\t\tif ( nestedSort[i][1] ) {\n\t\t\t\t\taSort.push( {\n\t\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\t\tcol:       iCol,\n\t\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\t\ttype:      sType,\n\t\t\t\t\t\tformatter: extSort[ sType+\"-pre\" ],\n\t\t\t\t\t\tsorter:    extSort[ sType+\"-\"+nestedSort[i][1] ]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn aSort;\n}\n\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSort ( oSettings, col, dir )\n{\n\tvar\n\t\ti, ien, iLen,\n\t\taiOrig = [],\n\t\textSort = DataTable.ext.type.order,\n\t\taoData = oSettings.aoData,\n\t\tsortCol,\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\taSort;\n\n\t// Resolve any column types that are unknown due to addition or invalidation\n\t// @todo Can this be moved into a 'data-ready' handler which is called when\n\t//   data is going to be used in the table?\n\t_fnColumnTypes( oSettings );\n\n\t// Allow a specific column to be sorted, which will _not_ alter the display\n\t// master\n\tif (col !== undefined) {\n\t\tvar srcCol = oSettings.aoColumns[col];\n\t\taSort = [{\n\t\t\tsrc:       col,\n\t\t\tcol:       col,\n\t\t\tdir:       dir,\n\t\t\tindex:     0,\n\t\t\ttype:      srcCol.sType,\n\t\t\tformatter: extSort[ srcCol.sType+\"-pre\" ],\n\t\t\tsorter:    extSort[ srcCol.sType+\"-\"+dir ]\n\t\t}];\n\t\tdisplayMaster = displayMaster.slice();\n\t}\n\telse {\n\t\taSort = _fnSortFlatten( oSettings );\n\t}\n\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\tsortCol = aSort[i];\n\n\t\t// Load the data needed for the sort, for each cell\n\t\t_fnSortData( oSettings, sortCol.col );\n\t}\n\n\t/* No sorting required if server-side or no sorting array */\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t{\n\t\t// Reset the initial positions on each pass so we get a stable sort\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\taiOrig[ i ] = i;\n\t\t}\n\n\t\t// If the first sort is desc, then reverse the array to preserve original\n\t\t// order, just in reverse\n\t\tif (aSort.length && aSort[0].dir === 'desc') {\n\t\t\taiOrig.reverse();\n\t\t}\n\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t *  fnLocalSorting = function(a,b){\n\t\t *    var test;\n\t\t *    test = oSort['string-asc']('data11', 'data12');\n\t\t *      if (test !== 0)\n\t\t *        return test;\n\t\t *    test = oSort['numeric-desc']('data21', 'data22');\n\t\t *    if (test !== 0)\n\t\t *      return test;\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t *  }\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t * positions in the original data array to provide a stable sort.\n\t\t */\n\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\tvar\n\t\t\t\tx, y, k, test, sort,\n\t\t\t\tlen=aSort.length,\n\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\tsort = aSort[k];\n\n\t\t\t\t// Data, which may have already been through a `-pre` function\n\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\tif (sort.sorter) {\n\t\t\t\t\t// If there is a custom sorter (`-asc` or `-desc`) for this\n\t\t\t\t\t// data type, use it\n\t\t\t\t\ttest = sort.sorter(x, y);\n\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn test;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Otherwise, use generic sorting\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = aiOrig[a];\n\t\t\ty = aiOrig[b];\n\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t} );\n\t}\n\telse if ( aSort.length === 0 ) {\n\t\t// Apply index order\n\t\tdisplayMaster.sort(function (x, y) {\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t});\n\t}\n\n\tif (col === undefined) {\n\t\t// Tell the draw function that we have sorted the data\n\t\toSettings.bSorted = true;\n\n\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort] );\n\t}\n\n\treturn displayMaster;\n}\n\n\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {boolean} [append=false] Append the requested sort to the existing\n *    sort if true (i.e. multi-column sort)\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortAdd ( settings, colIdx, append )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\tvar sorting = settings.aaSorting;\n\tvar asSorting = col.asSorting;\n\tvar nextSortIdx;\n\tvar next = function ( a, overflow ) {\n\t\tvar idx = a._idx;\n\t\tif ( idx === undefined ) {\n\t\t\tidx = asSorting.indexOf(a[1]);\n\t\t}\n\n\t\treturn idx+1 < asSorting.length ?\n\t\t\tidx+1 :\n\t\t\toverflow ?\n\t\t\t\tnull :\n\t\t\t\t0;\n\t};\n\n\tif ( ! col.bSortable ) {\n\t\treturn;\n\t}\n\n\t// Convert to 2D array if needed\n\tif ( typeof sorting[0] === 'number' ) {\n\t\tsorting = settings.aaSorting = [ sorting ];\n\t}\n\n\t// If appending the sort then we are multi-column sorting\n\tif ( append && settings.oFeatures.bSortMulti ) {\n\t\t// Are we already doing some kind of sort on this column?\n\t\tvar sortIdx = _pluck(sorting, '0').indexOf(colIdx);\n\n\t\tif ( sortIdx !== -1 ) {\n\t\t\t// Yes, modify the sort\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t}\n\n\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// No sort on this column yet\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t}\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t// Single column - already sorting on this column, modify the sort\n\t\tnextSortIdx = next( sorting[0] );\n\n\t\tsorting.length = 1;\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\tsorting[0]._idx = nextSortIdx;\n\t}\n\telse {\n\t\t// Single column - sort only on this column\n\t\tsorting.length = 0;\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\tsorting[0]._idx = 0;\n\t}\n}\n\n\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSortingClasses( settings )\n{\n\tvar oldSort = settings.aLastSort;\n\tvar sortClass = settings.oClasses.order.position;\n\tvar sort = _fnSortFlatten( settings );\n\tvar features = settings.oFeatures;\n\tvar i, ien, colIdx;\n\n\tif ( features.bSort && features.bSortClasses ) {\n\t\t// Remove old sorting classes\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = oldSort[i].src;\n\n\t\t\t// Remove column sorting\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\n\t\t// Add new column sorting\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = sort[i].src;\n\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\t}\n\n\tsettings.aLastSort = sort;\n}\n\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData( settings, colIdx )\n{\n\t// Custom sorting function - provided by the sort data type\n\tvar column = settings.aoColumns[ colIdx ];\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\tvar customData;\n\n\tif ( customSort ) {\n\t\tcustomData = customSort.call( settings.oInstance, settings, colIdx,\n\t\t\t_fnColumnIndexToVisible( settings, colIdx )\n\t\t);\n\t}\n\n\t// Use / populate cache\n\tvar row, cellData;\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\tvar data = settings.aoData;\n\n\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\n\t\t// Sparse array\n\t\tif (! data[rowIdx]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\trow = data[rowIdx];\n\n\t\tif ( ! row._aSortData ) {\n\t\t\trow._aSortData = [];\n\t\t}\n\n\t\tif ( ! row._aSortData[colIdx] || customSort ) {\n\t\t\tcellData = customSort ?\n\t\t\t\tcustomData[rowIdx] : // If there was a custom sort function, use data from there\n\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'sort' );\n\n\t\t\trow._aSortData[ colIdx ] = formatter ?\n\t\t\t\tformatter( cellData, settings ) :\n\t\t\t\tcellData;\n\t\t}\n\t}\n}\n\n\n/**\n * State information for a table\n *\n * @param {*} settings\n * @returns State object\n */\nfunction _fnSaveState ( settings )\n{\n\tif (settings._bLoadingState) {\n\t\treturn;\n\t}\n\n\t/* Store the interesting variables */\n\tvar state = {\n\t\ttime:    +new Date(),\n\t\tstart:   settings._iDisplayStart,\n\t\tlength:  settings._iDisplayLength,\n\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\tsearch:  $.extend({}, settings.oPreviousSearch),\n\t\tcolumns: settings.aoColumns.map( function ( col, i ) {\n\t\t\treturn {\n\t\t\t\tvisible: col.bVisible,\n\t\t\t\tsearch: $.extend({}, settings.aoPreSearchCols[i])\n\t\t\t};\n\t\t} )\n\t};\n\n\tsettings.oSavedState = state;\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\n\t{\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\t\n}\n\n\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\nfunction _fnLoadState ( settings, init, callback )\n{\n\tif ( ! settings.oFeatures.bStateSave ) {\n\t\tcallback();\n\t\treturn;\n\t}\n\n\tvar loaded = function(state) {\n\t\t_fnImplementState(settings, state, callback);\n\t}\n\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\n\tif ( state !== undefined ) {\n\t\t_fnImplementState( settings, state, callback );\n\t}\n\t// otherwise, wait for the loaded callback to be executed\n\n\treturn true;\n}\n\nfunction _fnImplementState ( settings, s, callback) {\n\tvar i, ien;\n\tvar columns = settings.aoColumns;\n\tsettings._bLoadingState = true;\n\n\t// When StateRestore was introduced the state could now be implemented at any time\n\t// Not just initialisation. To do this an api instance is required in some places\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n\tif ( ! s || ! s.time ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Reject old data\n\tvar duration = settings.iStateDuration;\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t// cancelling of loading by returning false\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\tif ( abStateLoad.indexOf(false) !== -1 ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Number of columns have changed - all bets are off, no restore of settings\n\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Store the saved state so it might be accessed at any time\n\tsettings.oLoadedState = $.extend( true, {}, s );\n\n\t// This is needed for ColReorder, which has to happen first to allow all\n\t// the stored indexes to be usable. It is not publicly documented.\n\t_fnCallbackFire( settings, null, 'stateLoadInit', [settings, s], true );\n\n\t// Page Length\n\tif ( s.length !== undefined ) {\n\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\tif (api) {\n\t\t\tapi.page.len(s.length)\n\t\t}\n\t\telse {\n\t\t\tsettings._iDisplayLength   = s.length;\n\t\t}\n\t}\n\n\t// Restore key features - todo - for 1.11 this needs to be done by\n\t// subscribed events\n\tif ( s.start !== undefined ) {\n\t\tif(api === null) {\n\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t}\n\t\telse {\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\n\t\t}\n\t}\n\n\t// Order\n\tif ( s.order !== undefined ) {\n\t\tsettings.aaSorting = [];\n\t\t$.each( s.order, function ( i, col ) {\n\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t[ 0, col[1] ] :\n\t\t\t\tcol\n\t\t\t);\n\t\t} );\n\t}\n\n\t// Search\n\tif ( s.search !== undefined ) {\n\t\t$.extend( settings.oPreviousSearch, s.search );\n\t}\n\n\t// Columns\n\tif ( s.columns ) {\n\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\tvar col = s.columns[i];\n\n\t\t\t// Visibility\n\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\tif (api) {\n\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Search\n\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], col.search );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\tif (api) {\n\t\t\tapi.columns.adjust();\n\t\t}\n\t}\n\n\tsettings._bLoadingState = false;\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\tcallback();\n}\n\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\nfunction _fnLog( settings, level, msg, tn )\n{\n\tmsg = 'DataTables warning: '+\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\n\tif ( tn ) {\n\t\tmsg += '. For more information about this error, please see '+\n\t\t'https://datatables.net/tn/'+tn;\n\t}\n\n\tif ( ! level  ) {\n\t\t// Backwards compatibility pre 1.10\n\t\tvar ext = DataTable.ext;\n\t\tvar type = ext.sErrMode || ext.errMode;\n\n\t\tif ( settings ) {\n\t\t\t_fnCallbackFire( settings, null, 'dt-error', [ settings, tn, msg ], true );\n\t\t}\n\n\t\tif ( type == 'alert' ) {\n\t\t\talert( msg );\n\t\t}\n\t\telse if ( type == 'throw' ) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\telse if ( typeof type == 'function' ) {\n\t\t\ttype( settings, tn, msg );\n\t\t}\n\t}\n\telse if ( window.console && console.log ) {\n\t\tconsole.log( msg );\n\t}\n}\n\n\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\nfunction _fnMap( ret, src, name, mappedName )\n{\n\tif ( Array.isArray( name ) ) {\n\t\t$.each( name, function (i, val) {\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnMap( ret, src, val );\n\t\t\t}\n\t\t} );\n\n\t\treturn;\n\t}\n\n\tif ( mappedName === undefined ) {\n\t\tmappedName = name;\n\t}\n\n\tif ( src[name] !== undefined ) {\n\t\tret[mappedName] = src[name];\n\t}\n}\n\n\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\nfunction _fnExtend( out, extender, breakRefs )\n{\n\tvar val;\n\n\tfor ( var prop in extender ) {\n\t\tif ( Object.prototype.hasOwnProperty.call(extender, prop) ) {\n\t\t\tval = extender[prop];\n\n\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\tout[prop] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t}\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\tout[prop] = val.slice();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[prop] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object|string} selector Selector (for delegated events) or data object\n *   to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\nfunction _fnBindAction( n, selector, fn )\n{\n\t$(n)\n\t\t.on( 'click.DT', selector, function (e) {\n\t\t\tfn(e);\n\t\t} )\n\t\t.on( 'keypress.DT', selector, function (e){\n\t\t\tif ( e.which === 13 ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tfn(e);\n\t\t\t}\n\t\t} )\n\t\t.on( 'selectstart.DT', selector, function () {\n\t\t\t// Don't want a double click resulting in text selection\n\t\t\treturn false;\n\t\t} );\n}\n\n\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} settings dataTables settings object\n *  @param {string} store Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackReg( settings, store, fn )\n{\n\tif ( fn ) {\n\t\tsettings[store].push(fn);\n\t}\n}\n\n\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @param {boolean} [bubbles] True if the event should bubble\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackFire( settings, callbackArr, eventName, args, bubbles )\n{\n\tvar ret = [];\n\n\tif ( callbackArr ) {\n\t\tret = settings[callbackArr].slice().reverse().map( function (val) {\n\t\t\treturn val.apply( settings.oInstance, args );\n\t\t} );\n\t}\n\n\tif ( eventName !== null) {\n\t\tvar e = $.Event( eventName+'.dt' );\n\t\tvar table = $(settings.nTable);\n\t\t\n\t\t// Expose the DataTables API on the event object for easy access\n\t\te.dt = settings.api;\n\n\t\ttable[bubbles ?  'trigger' : 'triggerHandler']( e, args );\n\n\t\t// If not yet attached to the document, trigger the event\n\t\t// on the body directly to sort of simulate the bubble\n\t\tif (bubbles && table.parents('body').length === 0) {\n\t\t\t$('body').trigger( e, args );\n\t\t}\n\n\t\tret.push( e.result );\n\t}\n\n\treturn ret;\n}\n\n\nfunction _fnLengthOverflow ( settings )\n{\n\tvar\n\t\tstart = settings._iDisplayStart,\n\t\tend = settings.fnDisplayEnd(),\n\t\tlen = settings._iDisplayLength;\n\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\tif ( start >= end )\n\t{\n\t\tstart = end - len;\n\t}\n\n\t// Keep the start record on the current page\n\tstart -= (start % len);\n\n\tif ( len === -1 || start < 0 )\n\t{\n\t\tstart = 0;\n\t}\n\n\tsettings._iDisplayStart = start;\n}\n\n\nfunction _fnRenderer( settings, type )\n{\n\tvar renderer = settings.renderer;\n\tvar host = DataTable.ext.renderer[type];\n\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t// the default.\n\t\treturn host[renderer[type]] || host._;\n\t}\n\telse if ( typeof renderer === 'string' ) {\n\t\t// Common renderer - if there is one available for this type use it,\n\t\t// otherwise use the default\n\t\treturn host[renderer] || host._;\n\t}\n\n\t// Use the default\n\treturn host._;\n}\n\n\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\nfunction _fnDataSource ( settings )\n{\n\tif ( settings.oFeatures.bServerSide ) {\n\t\treturn 'ssp';\n\t}\n\telse if ( settings.ajax ) {\n\t\treturn 'ajax';\n\t}\n\treturn 'dom';\n}\n\n/**\n * Common replacement for language strings\n *\n * @param {*} settings DT settings object\n * @param {*} str String with values to replace\n * @param {*} entries Plural number for _ENTRIES_ - can be undefined\n * @returns String\n */\nfunction _fnMacros ( settings, str, entries )\n{\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is\n\t// used only internally\n\tvar\n\t\tformatter  = settings.fnFormatNumber,\n\t\tstart      = settings._iDisplayStart+1,\n\t\tlen        = settings._iDisplayLength,\n\t\tvis        = settings.fnRecordsDisplay(),\n\t\tmax        = settings.fnRecordsTotal(),\n\t\tall        = len === -1;\n\n\treturn str.\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\treplace(/_MAX_/g,   formatter.call( settings, max ) ).\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) ).\n\t\treplace(/_ENTRIES_/g, settings.api.i18n('entries', '', entries) ).\n\t\treplace(/_ENTRIES-MAX_/g, settings.api.i18n('entries', '', max) ).\n\t\treplace(/_ENTRIES-TOTAL_/g, settings.api.i18n('entries', '', vis) );\n}\n\n\n\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\nvar __apiStruct = [];\n\n\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\nvar __arrayProto = Array.prototype;\n\n\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\nvar _toSettings = function ( mixed )\n{\n\tvar idx, jq;\n\tvar settings = DataTable.settings;\n\tvar tables = _pluck(settings, 'nTable');\n\n\tif ( ! mixed ) {\n\t\treturn [];\n\t}\n\telse if ( mixed.nTable && mixed.oFeatures ) {\n\t\t// DataTables settings object\n\t\treturn [ mixed ];\n\t}\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t// Table node\n\t\tidx = tables.indexOf(mixed);\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t}\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\treturn mixed.settings().toArray();\n\t}\n\telse if ( typeof mixed === 'string' ) {\n\t\t// jQuery selector\n\t\tjq = $(mixed).get();\n\t}\n\telse if ( mixed instanceof $ ) {\n\t\t// jQuery object (also DataTables instance)\n\t\tjq = mixed.get();\n\t}\n\n\tif ( jq ) {\n\t\treturn settings.filter(function (v, idx) {\n\t\t\treturn jq.includes(tables[idx]);\n\t\t});\n\t}\n};\n\n\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new DataTable.Api( 'table.dataTable' );\n */\n_Api = function ( context, data )\n{\n\tif ( ! (this instanceof _Api) ) {\n\t\treturn new _Api( context, data );\n\t}\n\n\tvar settings = [];\n\tvar ctxSettings = function ( o ) {\n\t\tvar a = _toSettings( o );\n\t\tif ( a ) {\n\t\t\tsettings.push.apply( settings, a );\n\t\t}\n\t};\n\n\tif ( Array.isArray( context ) ) {\n\t\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tctxSettings( context[i] );\n\t\t}\n\t}\n\telse {\n\t\tctxSettings( context );\n\t}\n\n\t// Remove duplicates\n\tthis.context = settings.length > 1\n\t\t? _unique( settings )\n\t\t: settings;\n\n\t// Initial data\n\tif ( data ) {\n\t\tthis.push.apply(this, data);\n\t}\n\n\t// selector\n\tthis.selector = {\n\t\trows: null,\n\t\tcols: null,\n\t\topts: null\n\t};\n\n\t_Api.extend( this, this, __apiStruct );\n};\n\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend( _Api.prototype, {\n\tany: function ()\n\t{\n\t\treturn this.count() !== 0;\n\t},\n\n\tcontext: [], // array of table settings objects\n\n\tcount: function ()\n\t{\n\t\treturn this.flatten().length;\n\t},\n\n\teach: function ( fn )\n\t{\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\tfn.call( this, this[i], i, this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\teq: function ( idx )\n\t{\n\t\tvar ctx = this.context;\n\n\t\treturn ctx.length > idx ?\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\tnull;\n\t},\n\n\tfilter: function ( fn )\n\t{\n\t\tvar a = __arrayProto.filter.call( this, fn, this );\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\tflatten: function ()\n\t{\n\t\tvar a = [];\n\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t},\n\n\tget: function ( idx )\n\t{\n\t\treturn this[ idx ];\n\t},\n\n\tjoin:    __arrayProto.join,\n\n\tincludes: function ( find ) {\n\t\treturn this.indexOf( find ) === -1 ? false : true;\n\t},\n\n\tindexOf: __arrayProto.indexOf,\n\n\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\tvar\n\t\t\ta = [], ret,\n\t\t\ti, ien, j, jen,\n\t\t\tcontext = this.context,\n\t\t\trows, items, item,\n\t\t\tselector = this.selector;\n\n\t\t// Argument shifting\n\t\tif ( typeof flatten === 'string' ) {\n\t\t\talwaysNew = fn;\n\t\t\tfn = type;\n\t\t\ttype = flatten;\n\t\t\tflatten = false;\n\t\t}\n\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tvar apiInst = new _Api( context[i] );\n\n\t\t\tif ( type === 'table' ) {\n\t\t\t\tret = fn.call( apiInst, context[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'every' || type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\titems = this[i];\n\n\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t}\n\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\titem = items[j];\n\n\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( a.length || alwaysNew ) {\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\tvar apiSelector = api.selector;\n\t\t\tapiSelector.rows = selector.rows;\n\t\t\tapiSelector.cols = selector.cols;\n\t\t\tapiSelector.opts = selector.opts;\n\t\t\treturn api;\n\t\t}\n\t\treturn this;\n\t},\n\n\tlastIndexOf: __arrayProto.lastIndexOf,\n\n\tlength:  0,\n\n\tmap: function ( fn )\n\t{\n\t\tvar a = __arrayProto.map.call( this, fn, this );\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\tpluck: function ( prop )\n\t{\n\t\tvar fn = DataTable.util.get(prop);\n\n\t\treturn this.map( function ( el ) {\n\t\t\treturn fn(el);\n\t\t} );\n\t},\n\n\tpop:     __arrayProto.pop,\n\n\tpush:    __arrayProto.push,\n\n\treduce: __arrayProto.reduce,\n\n\treduceRight: __arrayProto.reduceRight,\n\n\treverse: __arrayProto.reverse,\n\n\t// Object with rows, columns and opts\n\tselector: null,\n\n\tshift:   __arrayProto.shift,\n\n\tslice: function () {\n\t\treturn new _Api( this.context, this );\n\t},\n\n\tsort:    __arrayProto.sort,\n\n\tsplice:  __arrayProto.splice,\n\n\ttoArray: function ()\n\t{\n\t\treturn __arrayProto.slice.call( this );\n\t},\n\n\tto$: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\ttoJQuery: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\tunique: function ()\n\t{\n\t\treturn new _Api( this.context, _unique(this.toArray()) );\n\t},\n\n\tunshift: __arrayProto.unshift\n} );\n\n\nfunction _api_scope( scope, fn, struc ) {\n\treturn function () {\n\t\tvar ret = fn.apply( scope || this, arguments );\n\n\t\t// Method extension\n\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\treturn ret;\n\t};\n}\n\nfunction _api_find( src, name ) {\n\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\tif ( src[i].name === name ) {\n\t\t\treturn src[i];\n\t\t}\n\t}\n\treturn null;\n}\n\nwindow.__apiStruct = __apiStruct;\n\n_Api.extend = function ( scope, obj, ext )\n{\n\t// Only extend API instances and static properties of the API\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\tstruct;\n\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\tstruct = ext[i];\n\n\t\t// Value\n\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\t_api_scope( scope, struct.val, struct ) :\n\t\t\tstruct.type === 'object' ?\n\t\t\t\t{} :\n\t\t\t\tstruct.val;\n\n\t\tobj[ struct.name ].__dt_wrapper = true;\n\n\t\t// Property extension\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t}\n};\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n\n_Api.register = _api_register = function ( name, val )\n{\n\tif ( Array.isArray( name ) ) {\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t_Api.register( name[j], val );\n\t\t}\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\their = name.split('.'),\n\t\tstruct = __apiStruct,\n\t\tkey, method;\n\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\tkey = method ?\n\t\t\their[i].replace('()', '') :\n\t\t\their[i];\n\n\t\tvar src = _api_find( struct, key );\n\t\tif ( ! src ) {\n\t\t\tsrc = {\n\t\t\t\tname:      key,\n\t\t\t\tval:       {},\n\t\t\t\tmethodExt: [],\n\t\t\t\tpropExt:   [],\n\t\t\t\ttype:      'object'\n\t\t\t};\n\t\t\tstruct.push( src );\n\t\t}\n\n\t\tif ( i === ien-1 ) {\n\t\t\tsrc.val = val;\n\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t'object' :\n\t\t\t\t\t'other';\n\t\t}\n\t\telse {\n\t\t\tstruct = method ?\n\t\t\t\tsrc.methodExt :\n\t\t\t\tsrc.propExt;\n\t\t}\n\t}\n};\n\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t_Api.register( pluralName, val );\n\n\t_Api.register( singularName, function () {\n\t\tvar ret = val.apply( this, arguments );\n\n\t\tif ( ret === this ) {\n\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\treturn this;\n\t\t}\n\t\telse if ( ret instanceof _Api ) {\n\t\t\t// New API instance returned, want the value from the first item\n\t\t\t// in the returned array for the singular result.\n\t\t\treturn ret.length ?\n\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\tret[0] :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Non-API return - just fire it back\n\t\treturn ret;\n\t} );\n};\n\n\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\nvar __table_selector = function ( selector, a )\n{\n\tif ( Array.isArray(selector) ) {\n\t\tvar result = [];\n\n\t\tselector.forEach(function (sel) {\n\t\t\tvar inner = __table_selector(sel, a);\n\n\t\t\tresult.push.apply(result, inner);\n\t\t});\n\n\t\treturn result.filter( function (item) {\n\t\t\treturn item;\n\t\t});\n\t}\n\n\t// Integer is used to pick out a table by index\n\tif ( typeof selector === 'number' ) {\n\t\treturn [ a[ selector ] ];\n\t}\n\n\t// Perform a jQuery selector on the table nodes\n\tvar nodes = a.map( function (el) {\n\t\treturn el.nTable;\n\t} );\n\n\treturn $(nodes)\n\t\t.filter( selector )\n\t\t.map( function () {\n\t\t\t// Need to translate back from the table node to the settings\n\t\t\tvar idx = nodes.indexOf(this);\n\t\t\treturn a[ idx ];\n\t\t} )\n\t\t.toArray();\n};\n\n\n\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n_api_register( 'tables()', function ( selector ) {\n\t// A new instance is created if there was a selector specified\n\treturn selector !== undefined && selector !== null ?\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\tthis;\n} );\n\n\n_api_register( 'table()', function ( selector ) {\n\tvar tables = this.tables( selector );\n\tvar ctx = tables.context;\n\n\t// Truncate to the first matched table\n\treturn ctx.length ?\n\t\tnew _Api( ctx[0] ) :\n\t\ttables;\n} );\n\n// Common methods, combined to reduce size\n[\n\t['nodes', 'node', 'nTable'],\n\t['body', 'body', 'nTBody'],\n\t['header', 'header', 'nTHead'],\n\t['footer', 'footer', 'nTFoot'],\n].forEach(function (item) {\n\t_api_registerPlural(\n\t\t'tables().' + item[0] + '()',\n\t\t'table().' + item[1] + '()' ,\n\t\tfunction () {\n\t\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t\treturn ctx[item[2]];\n\t\t\t}, 1 );\n\t\t}\n\t);\n});\n\n// Structure methods\n[\n\t['header', 'aoHeader'],\n\t['footer', 'aoFooter'],\n].forEach(function (item) {\n\t_api_register( 'table().' + item[0] + '.structure()' , function (selector) {\n\t\tvar indexes = this.columns(selector).indexes().flatten();\n\t\tvar ctx = this.context[0];\n\t\t\n\t\treturn _fnHeaderLayout(ctx, ctx[item[1]], indexes);\n\t} );\n})\n\n\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTableWrapper;\n\t}, 1 );\n} );\n\n_api_register( 'tables().every()', function ( fn ) {\n\tvar that = this;\n\n\treturn this.iterator('table', function (s, i) {\n\t\tfn.call(that.table(i), i);\n\t});\n});\n\n_api_register( 'caption()', function ( value, side ) {\n\tvar context = this.context;\n\n\t// Getter - return existing node's content\n\tif ( value === undefined ) {\n\t\tvar caption = context[0].captionNode;\n\n\t\treturn caption && context.length ?\n\t\t\tcaption.innerHTML : \n\t\t\tnull;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tvar table = $(ctx.nTable);\n\t\tvar caption = $(ctx.captionNode);\n\t\tvar container = $(ctx.nTableWrapper);\n\n\t\t// Create the node if it doesn't exist yet\n\t\tif ( ! caption.length ) {\n\t\t\tcaption = $('<caption/>').html( value );\n\t\t\tctx.captionNode = caption[0];\n\n\t\t\t// If side isn't set, we need to insert into the document to let the\n\t\t\t// CSS decide so we can read it back, otherwise there is no way to\n\t\t\t// know if the CSS would put it top or bottom for scrolling\n\t\t\tif (! side) {\n\t\t\t\ttable.prepend(caption);\n\n\t\t\t\tside = caption.css('caption-side');\n\t\t\t}\n\t\t}\n\n\t\tcaption.html( value );\n\n\t\tif ( side ) {\n\t\t\tcaption.css( 'caption-side', side );\n\t\t\tcaption[0]._captionSide = side;\n\t\t}\n\n\t\tif (container.find('div.dataTables_scroll').length) {\n\t\t\tvar selector = (side === 'top' ? 'Head' : 'Foot');\n\n\t\t\tcontainer.find('div.dataTables_scroll'+ selector +' table').prepend(caption);\n\t\t}\n\t\telse {\n\t\t\ttable.prepend(caption);\n\t\t}\n\t}, 1 );\n} );\n\n_api_register( 'caption.node()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length ? ctx[0].captionNode : null;\n} );\n\n\n/**\n * Redraw the tables in the current context.\n */\n_api_register( 'draw()', function ( paging ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( paging === 'page' ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t\telse {\n\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\tfalse :\n\t\t\t\t\ttrue;\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, paging===false );\n\t\t}\n\t} );\n} );\n\n\n\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n *//**\n * Set the current page.\n *\n * Note that if you attempt to show a page which does not exist, DataTables will\n * not throw an error, but rather reset the paging.\n *\n * @param {integer|string} action The paging action to take. This can be one of:\n *  * `integer` - The page index to jump to\n *  * `string` - An action to take:\n *    * `first` - Jump to first page.\n *    * `next` - Jump to the next page\n *    * `previous` - Jump to previous page\n *    * `last` - Jump to the last page.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.page.info().page; // not an expensive call\n\t}\n\n\t// else, have an action to take on all tables\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnPageChange( settings, action );\n\t} );\n} );\n\n\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n_api_register( 'page.info()', function () {\n\tif ( this.context.length === 0 ) {\n\t\treturn undefined;\n\t}\n\n\tvar\n\t\tsettings   = this.context[0],\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn {\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\"start\":          start,\n\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\"length\":         len,\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\"recordsDisplay\": visRecords,\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t};\n} );\n\n\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n *//**\n * Set the current page length.\n *\n * @param {integer} Page length to set. Use `-1` to show all records.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page.len()', function ( len ) {\n\t// Note that we can't call this function 'length()' because `length`\n\t// is a Javascript property of functions which defines how many arguments\n\t// the function expects.\n\tif ( len === undefined ) {\n\t\treturn this.context.length !== 0 ?\n\t\t\tthis.context[0]._iDisplayLength :\n\t\t\tundefined;\n\t}\n\n\t// else, set the page length\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLengthChange( settings, len );\n\t} );\n} );\n\n\n\nvar __reload = function ( settings, holdPosition, callback ) {\n\t// Use the draw event to trigger a callback\n\tif ( callback ) {\n\t\tvar api = new _Api( settings );\n\n\t\tapi.one( 'draw', function () {\n\t\t\tcallback( api.ajax.json() );\n\t\t} );\n\t}\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t_fnReDraw( settings, holdPosition );\n\t}\n\telse {\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t// Cancel an existing request\n\t\tvar xhr = settings.jqXHR;\n\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\txhr.abort();\n\t\t}\n\n\t\t// Trigger xhr\n\t\t_fnBuildAjax( settings, {}, function( json ) {\n\t\t\t_fnClearTable( settings );\n\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t_fnInitComplete( settings );\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t} );\n\t}\n};\n\n\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n_api_register( 'ajax.json()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].json;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Get the data submitted in the last Ajax request\n */\n_api_register( 'ajax.params()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].oAjaxData;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\treturn this.iterator( 'table', function (settings) {\n\t\t__reload( settings, resetPaging===false, callback );\n\t} );\n} );\n\n\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n *//**\n * Set the Ajax URL. Note that this will set the URL for all tables in the\n * current context.\n *\n * @param {string} url URL to set.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url()', function ( url ) {\n\tvar ctx = this.context;\n\n\tif ( url === undefined ) {\n\t\t// get\n\t\tif ( ctx.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tctx = ctx[0];\n\n\t\treturn $.isPlainObject( ctx.ajax ) ?\n\t\t\tctx.ajax.url :\n\t\t\tctx.ajax;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\tsettings.ajax.url = url;\n\t\t}\n\t\telse {\n\t\t\tsettings.ajax = url;\n\t\t}\n\t} );\n} );\n\n\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t// Same as a reload, but makes sense to present it for easy access after a\n\t// url change\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t__reload( ctx, resetPaging===false, callback );\n\t} );\n} );\n\n\n\n\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\n{\n\tvar\n\t\tout = [], res,\n\t\ta, i, ien, j, jen,\n\t\tselectorType = typeof selector;\n\n\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t// given with their array like look\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\tselector = [ selector ];\n\t}\n\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[[(:]/) ?\n\t\t\tselector[i].split(',') :\n\t\t\t[ selector[i] ];\n\n\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\n\n\t\t\t// Remove empty items\n\t\t\tres = res.filter( function (item) {\n\t\t\t\treturn item !== null && item !== undefined;\n\t\t\t});\n\n\t\t\tif ( res && res.length ) {\n\t\t\t\tout = out.concat( res );\n\t\t\t}\n\t\t}\n\t}\n\n\t// selector extensions\n\tvar ext = _ext.selector[ type ];\n\tif ( ext.length ) {\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tout = ext[i]( settings, opts, out );\n\t\t}\n\t}\n\n\treturn _unique( out );\n};\n\n\nvar _selector_opts = function ( opts )\n{\n\tif ( ! opts ) {\n\t\topts = {};\n\t}\n\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t// than search\n\tif ( opts.filter && opts.search === undefined ) {\n\t\topts.search = opts.filter;\n\t}\n\n\treturn $.extend( {\n\t\tsearch: 'none',\n\t\torder: 'current',\n\t\tpage: 'all'\n\t}, opts );\n};\n\n\n// Reduce the API instance to the first item found\nvar _selector_first = function ( old )\n{\n\tlet inst = new _Api(old.context[0]);\n\n\t// Use a push rather than passing to the constructor, since it will\n\t// merge arrays down automatically, which isn't what is wanted here\n\tif (old.length) {\n\t\tinst.push( old[0] );\n\t}\n\n\tinst.selector = old.selector;\n\n\t// Limit to a single row / column / cell\n\tif (inst.length && inst[0].length > 1) {\n\t\tinst[0].splice(1);\n\t}\n\n\treturn inst;\n};\n\n\nvar _selector_row_indexes = function ( settings, opts )\n{\n\tvar\n\t\ti, ien, tmp, a=[],\n\t\tdisplayFiltered = settings.aiDisplay,\n\t\tdisplayMaster = settings.aiDisplayMaster;\n\n\tvar\n\t\tsearch = opts.search,  // none, applied, removed\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\tpage   = opts.page;    // all, current\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t// In server-side processing mode, most options are irrelevant since\n\t\t// rows not shown don't exist and the index order is the applied order\n\t\t// Removed is a special case - for consistency just return an empty\n\t\t// array\n\t\treturn search === 'removed' ?\n\t\t\t[] :\n\t\t\t_range( 0, displayMaster.length );\n\t}\n\telse if ( page == 'current' ) {\n\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t// are\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\ta.push( displayFiltered[i] );\n\t\t}\n\t}\n\telse if ( order == 'current' || order == 'applied' ) {\n\t\tif ( search == 'none') {\n\t\t\ta = displayMaster.slice();\n\t\t}\n\t\telse if ( search == 'applied' ) {\n\t\t\ta = displayFiltered.slice();\n\t\t}\n\t\telse if ( search == 'removed' ) {\n\t\t\t// O(n+m) solution by creating a hash map\n\t\t\tvar displayFilteredMap = {};\n\n\t\t\tfor ( i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t}\n\n\t\t\tdisplayMaster.forEach(function (item) {\n\t\t\t\tif (! Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {\n\t\t\t\t\ta.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\telse if ( order == 'index' || order == 'original' ) {\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tif (! settings.aoData[i]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( search == 'none' ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t\telse { // applied | removed\n\t\t\t\ttmp = displayFiltered.indexOf(i);\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if ( typeof order === 'number' ) {\n\t\t// Order the rows by the given column\n\t\tvar ordered = _fnSort(settings, order, 'asc');\n\n\t\tif (search === 'none') {\n\t\t\ta = ordered;\n\t\t}\n\t\telse { // applied | removed\n\t\t\tfor (i=0; i<ordered.length; i++) {\n\t\t\t\ttmp = displayFiltered.indexOf(ordered[i]);\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( ordered[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\nvar __row_selector = function ( settings, selector, opts )\n{\n\tvar rows;\n\tvar run = function ( sel ) {\n\t\tvar selInt = _intVal( sel );\n\t\tvar aoData = settings.aoData;\n\n\t\t// Short cut - selector is a number and no options provided (default is\n\t\t// all records, so no need to check if the index is in there, since it\n\t\t// must be - dev error if the index doesn't exist).\n\t\tif ( selInt !== null && ! opts ) {\n\t\t\treturn [ selInt ];\n\t\t}\n\n\t\tif ( ! rows ) {\n\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t}\n\n\t\tif ( selInt !== null && rows.indexOf(selInt) !== -1 ) {\n\t\t\t// Selector - integer\n\t\t\treturn [ selInt ];\n\t\t}\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t// Selector - none\n\t\t\treturn rows;\n\t\t}\n\n\t\t// Selector - function\n\t\tif ( typeof sel === 'function' ) {\n\t\t\treturn rows.map( function (idx) {\n\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// Selector - node\n\t\tif ( sel.nodeName ) {\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\tvar cellIdx = sel._DT_CellIndex;\n\n\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse if ( cellIdx ) {\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\treturn host.length ?\n\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t}\n\n\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t// DataTables simplifies this for row selectors since you can select\n\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t// unescaped.\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t// get row index from id\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\treturn [ rowObj.idx ];\n\t\t\t}\n\n\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t// matches\n\t\t}\n\t\t\n\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\tvar nodes = _removeEmpty(\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t);\n\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t// it also allows arrays, so this will cope with all three options\n\t\treturn $(nodes)\n\t\t\t.filter( sel )\n\t\t\t.map( function () {\n\t\t\t\treturn this._DT_RowIndex;\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\n\tvar matched = _selector_run( 'row', selector, run, settings, opts );\n\n\tif (opts.order === 'current' || opts.order === 'applied') {\n\t\tvar master = settings.aiDisplayMaster;\n\n\t\tmatched.sort(function(a, b) {  \n\t\t\treturn master.indexOf(a) - master.indexOf(b);\n\t\t});\n\t}\n\n\treturn matched;\n};\n\n\n_api_register( 'rows()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __row_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in __row_selector?\n\tinst.selector.rows = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_register( 'rows().nodes()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn settings.aoData[ row ].nTr || undefined;\n\t}, 1 );\n} );\n\n_api_register( 'rows().data()', function () {\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\tvar r = settings.aoData[ row ];\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t_fnInvalidate( settings, row, src );\n\t} );\n} );\n\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn row;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\tvar a = [];\n\tvar context = this.context;\n\n\t// `iterator` will drop undefined values, but in this case we want them\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t}\n\t}\n\n\treturn new _Api( context, a );\n} );\n\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\tthis.iterator( 'row', function ( settings, row ) {\n\t\tvar data = settings.aoData;\n\t\tvar rowData = data[ row ];\n\n\t\t// Delete from the display arrays\n\t\tvar idx = settings.aiDisplayMaster.indexOf(row);\n\t\tif (idx !== -1) {\n\t\t\tsettings.aiDisplayMaster.splice(idx, 1);\n\t\t}\n\n\t\tidx = settings.aiDisplay.indexOf(row);\n\t\tif (idx !== -1) {\n\t\t\tsettings.aiDisplay.splice(idx, 1);\n\t\t}\n\n\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\tsettings._iRecordsDisplay--;\n\t\t}\n\n\t\t// Check for an 'overflow' they case for displaying the table\n\t\t_fnLengthOverflow( settings );\n\n\t\t// Remove the row's ID reference if there is one\n\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\tif ( id !== undefined ) {\n\t\t\tdelete settings.aIds[ id ];\n\t\t}\n\n\t\tdata[row] = null;\n\t} );\n\n\treturn this;\n} );\n\n\n_api_register( 'rows.add()', function ( rows ) {\n\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\tvar row, i, ien;\n\t\t\tvar out = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}, 1 );\n\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\tvar modRows = this.rows( -1 );\n\tmodRows.pop();\n\tmodRows.push.apply(modRows, newRows);\n\n\treturn modRows;\n} );\n\n\n\n\n\n/**\n *\n */\n_api_register( 'row()', function ( selector, opts ) {\n\treturn _selector_first( this.rows( selector, opts ) );\n} );\n\n\n_api_register( 'row().data()', function ( data ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && this.length && this[0].length ?\n\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\tvar row = ctx[0].aoData[ this[0] ];\n\trow._aData = data;\n\n\t// If the DOM has an id, and the data source is an array\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t}\n\n\t// Automatically invalidate\n\t_fnInvalidate( ctx[0], this[0], 'data' );\n\n\treturn this;\n} );\n\n\n_api_register( 'row().node()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length && this.length && this[0].length ?\n\t\tctx[0].aoData[ this[0] ].nTr || null :\n\t\tnull;\n} );\n\n\n_api_register( 'row.add()', function ( row ) {\n\t// Allow a jQuery object to be passed in - only a single row is added from\n\t// it though - the first element in the set\n\tif ( row instanceof $ && row.length ) {\n\t\trow = row[0];\n\t}\n\n\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t}\n\t\treturn _fnAddData( settings, row );\n\t} );\n\n\t// Return an Api.rows() extended instance, with the newly added row selected\n\treturn this.row( rows[0] );\n} );\n\n\n$(document).on('plugin-init.dt', function (e, context) {\n\tvar api = new _Api( context );\n\n\tapi.on( 'stateSaveParams.DT', function ( e, settings, d ) {\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t// internal loop\n\t\tvar idFn = settings.rowIdFn;\n\t\tvar rows = settings.aiDisplayMaster;\n\t\tvar ids = [];\n\n\t\tfor (var i=0 ; i<rows.length ; i++) {\n\t\t\tvar rowIdx = rows[i];\n\t\t\tvar data = settings.aoData[rowIdx];\n\n\t\t\tif (data._detailsShow) {\n\t\t\t\tids.push( '#' + idFn(data._aData) );\n\t\t\t}\n\t\t}\n\n\t\td.childRows = ids;\n\t});\n\n\t// For future state loads (e.g. with StateRestore)\n\tapi.on( 'stateLoaded.DT', function (e, settings, state) {\n\t\t__details_state_load( api, state );\n\t});\n\n\t// And the initial load state\n\t__details_state_load( api, api.state.loaded() );\n});\n\nvar __details_state_load = function (api, state)\n{\n\tif ( state && state.childRows ) {\n\t\tapi\n\t\t\t.rows( state.childRows.map(function (id){\n\t\t\t\treturn id.replace(/:/g, '\\\\:')\n\t\t\t}) )\n\t\t\t.every( function () {\n\t\t\t\t_fnCallbackFire( api.settings()[0], null, 'requestChild', [ this ] )\n\t\t\t});\n\t}\n}\n\nvar __details_add = function ( ctx, row, data, klass )\n{\n\t// Convert to array of TR elements\n\tvar rows = [];\n\tvar addRow = function ( r, k ) {\n\t\t// Recursion to allow for arrays of jQuery objects\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\taddRow( r[i], k );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t// to add the correct number of columns etc\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\tr.setAttribute( 'data-dt-row', row.idx );\n\t\t\trows.push( r );\n\t\t}\n\t\telse {\n\t\t\t// Otherwise create a row with a wrapper\n\t\t\tvar created = $('<tr><td></td></tr>')\n\t\t\t\t.attr( 'data-dt-row', row.idx )\n\t\t\t\t.addClass( k );\n\t\t\t\n\t\t\t$('td', created)\n\t\t\t\t.addClass( k )\n\t\t\t\t.html( r )[0].colSpan = _fnVisbleColumns( ctx );\n\n\t\t\trows.push( created[0] );\n\t\t}\n\t};\n\n\taddRow( data, klass );\n\n\tif ( row._details ) {\n\t\trow._details.detach();\n\t}\n\n\trow._details = $(rows);\n\n\t// If the children were already shown, that state should be retained\n\tif ( row._detailsShow ) {\n\t\trow._details.insertAfter( row.nTr );\n\t}\n};\n\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(\n\tfunction (ctx) {\n\t\t_fnSaveState( ctx[0] )\n\t},\n\t500\n);\n\n\nvar __details_remove = function ( api, idx )\n{\n\tvar ctx = api.context;\n\n\tif ( ctx.length ) {\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\n\t\tif ( row && row._details ) {\n\t\t\trow._details.remove();\n\n\t\t\trow._detailsShow = undefined;\n\t\t\trow._details = undefined;\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_display = function ( api, show ) {\n\tvar ctx = api.context;\n\n\tif ( ctx.length && api.length ) {\n\t\tvar row = ctx[0].aoData[ api[0] ];\n\n\t\tif ( row._details ) {\n\t\t\trow._detailsShow = show;\n\n\t\t\tif ( show ) {\n\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow._details.detach();\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t}\n\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\n\n\t\t\t__details_events( ctx[0] );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_events = function ( settings )\n{\n\tvar api = new _Api( settings );\n\tvar namespace = '.dt.DT_details';\n\tvar drawEvent = 'draw'+namespace;\n\tvar colvisEvent = 'column-sizing'+namespace;\n\tvar destroyEvent = 'destroy'+namespace;\n\tvar data = settings.aoData;\n\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\n\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t// On each draw, insert the required elements into the document\n\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t// Internal data grab\n\t\t\t\tvar row = data[ idx ];\n\n\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Column visibility change - update the colspan\n\t\tapi.on( colvisEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t// a colspan)\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\trow = data[i];\n\n\t\t\t\tif ( row._details ) {\n\t\t\t\t\trow._details.each(function () {\n\t\t\t\t\t\tvar el = $(this).children('td');\n\n\t\t\t\t\t\tif (el.length == 1) {\n\t\t\t\t\t\t\tel.attr('colspan', visible);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Table destroyed - nuke any child rows\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tif ( data[i]._details ) {\n\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp+'row().child';\nvar _child_mth = _child_obj+'()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register( _child_mth, function ( data, klass ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// get\n\t\treturn ctx.length && this.length ?\n\t\t\tctx[0].aoData[ this[0] ]._details :\n\t\t\tundefined;\n\t}\n\telse if ( data === true ) {\n\t\t// show\n\t\tthis.child.show();\n\t}\n\telse if ( data === false ) {\n\t\t// remove\n\t\t__details_remove( this );\n\t}\n\telse if ( ctx.length && this.length ) {\n\t\t// set\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t}\n\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.show()',\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, true );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.hide()',\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, false );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.remove()',\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n], function () {           // it returns an object and this method is not executed)\n\t__details_remove( this );\n\treturn this;\n} );\n\n\n_api_register( _child_obj+'.isShown()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length && this.length ) {\n\t\t// _detailsShown as false or undefined will fall through to return false\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t}\n\treturn false;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+):(name|title|visIdx|visible)$/;\n\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function ( settings, column, r1, r2, rows, type ) {\n\tvar a = [];\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\ta.push( _fnGetCellData( settings, rows[row], column, type ) );\n\t}\n\treturn a;\n};\n\n\nvar __column_selector = function ( settings, selector, opts )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tnames = _pluck( columns, 'sName' ),\n\t\ttitles = _pluck( columns, 'sTitle' ),\n\t\tcells = DataTable.util.get('[].[].cell')(settings.aoHeader),\n\t\tnodes = _unique( _flatten([], cells) );\n\t\n\tvar run = function ( s ) {\n\t\tvar selInt = _intVal( s );\n\n\t\t// Selector - all\n\t\tif ( s === '' ) {\n\t\t\treturn _range( columns.length );\n\t\t}\n\n\t\t// Selector - index\n\t\tif ( selInt !== null ) {\n\t\t\treturn [ selInt >= 0 ?\n\t\t\t\tselInt : // Count from left\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t];\n\t\t}\n\n\t\t// Selector = function\n\t\tif ( typeof s === 'function' ) {\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\n\t\t\treturn columns.map(function (col, idx) {\n\t\t\t\treturn s(\n\t\t\t\t\t\tidx,\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows )\n\t\t\t\t\t) ? idx : null;\n\t\t\t});\n\t\t}\n\n\t\t// jQuery or string selector\n\t\tvar match = typeof s === 'string' ?\n\t\t\ts.match( __re_column_selector ) :\n\t\t\t'';\n\n\t\tif ( match ) {\n\t\t\tswitch( match[2] ) {\n\t\t\t\tcase 'visIdx':\n\t\t\t\tcase 'visible':\n\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\tvar visColumns = columns.map( function (col,i) {\n\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t} );\n\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t}\n\t\t\t\t\t// Counting from the left\n\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\n\t\t\t\tcase 'name':\n\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\treturn names.map( function (name, i) {\n\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tcase 'title':\n\t\t\t\t\t// match by column title\n\t\t\t\t\treturn titles.map( function (title, i) {\n\t\t\t\t\t\treturn title === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// Cell in the table body\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t}\n\n\t\t// jQuery selector on the TH elements for the columns\n\t\tvar jqResult = $( nodes )\n\t\t\t.filter( s )\n\t\t\t.map( function () {\n\t\t\t\treturn _fnColumnsFromHeader( this ); // `nodes` is column index complete and in order\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t// a child or such an element\n\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\treturn host.length ?\n\t\t\t[ host.data('dt-column') ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'column', selector, run, settings, opts );\n};\n\n\nvar __setColumnVis = function ( settings, column, vis ) {\n\tvar\n\t\tcols = settings.aoColumns,\n\t\tcol  = cols[ column ],\n\t\tdata = settings.aoData,\n\t\tcells, i, ien, tr;\n\n\t// Get\n\tif ( vis === undefined ) {\n\t\treturn col.bVisible;\n\t}\n\n\t// Set\n\t// No change\n\tif ( col.bVisible === vis ) {\n\t\treturn false;\n\t}\n\n\tif ( vis ) {\n\t\t// Insert column\n\t\t// Need to decide if we should use appendChild or insertBefore\n\t\tvar insertBefore = _pluck(cols, 'bVisible').indexOf(true, column+1);\n\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\tif (data[i]) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Remove column\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t}\n\n\t// Common actions\n\tcol.bVisible = vis;\n\n\t_colGroup(settings);\n\t\n\treturn true;\n};\n\n\n_api_register( 'columns()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __column_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in _row_selector?\n\tinst.selector.cols = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_registerPlural( 'columns().header()', 'column().header()', function ( row ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar header = settings.aoHeader;\n\t\tvar target = row !== undefined\n\t\t\t? row\n\t\t\t: settings.bSortCellsTop // legacy support\n\t\t\t\t? 0\n\t\t\t\t: header.length - 1;\n\n\t\treturn header[target][column].cell;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( row ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar footer = settings.aoFooter;\n\n\t\tif (! footer.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn settings.aoFooter[row !== undefined ? row : 0][column].cell;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\treturn this.iterator( 'column-rows', __columnData, 1 );\n} );\n\n_api_registerPlural( 'columns().render()', 'column().render()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn __columnData( settings, column, i, j, rows, type );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].mData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t);\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().init()', 'column().init()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column];\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().titles()', 'column().title()', function (title, row) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t// Argument shifting\n\t\tif (typeof title === 'number') {\n\t\t\trow = title;\n\t\t\ttitle = undefined;\n\t\t}\n\n\t\tvar span = $('span.dt-column-title', this.column(column).header(row));\n\n\t\tif (title !== undefined) {\n\t\t\tspan.html(title);\n\t\t\treturn this;\n\t\t}\n\n\t\treturn span.html();\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().types()', 'column().type()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar type = settings.aoColumns[column].sType;\n\n\t\t// If the type was invalidated, then resolve it. This actually does\n\t\t// all columns at the moment. Would only happen once if getting all\n\t\t// column's data types.\n\t\tif (! type) {\n\t\t\t_fnColumnTypes(settings);\n\t\t}\n\n\t\treturn type;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\tvar that = this;\n\tvar changed = [];\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\tif ( vis === undefined ) {\n\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t} // else\n\t\t\n\t\tif (__setColumnVis( settings, column, vis )) {\n\t\t\tchanged.push(column);\n\t\t}\n\t} );\n\n\t// Group the column visibility changes\n\tif ( vis !== undefined ) {\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t// Redraw the header after changes\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t}\n\t\n\t\t\t_fnSaveState( settings );\n\n\t\t\t// Second loop once the first is done for events\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\tif (changed.includes(column)) {\n\t\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( changed.length && (calc === undefined || calc) ) {\n\t\t\t\tthat.columns.adjust();\n\t\t\t}\n\t\t});\n\t}\n\n\treturn ret;\n} );\n\n_api_registerPlural( 'columns().widths()', 'column().width()', function () {\n\t// Injects a fake row into the table for just a moment so the widths can\n\t// be read, regardless of colspan in the header and rows being present in\n\t// the body\n\tvar columns = this.columns(':visible').count();\n\tvar row = $('<tr>').html('<td>' + Array(columns).join('</td><td>') + '</td>');\n\n\t$(this.table().body()).append(row);\n\n\tvar widths = row.children().map(function () {\n\t\treturn $(this).outerWidth();\n\t});\n\n\trow.remove();\n\t\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar visIdx = _fnColumnIndexToVisible( settings, column );\n\n\t\treturn visIdx !== null ? widths[visIdx] : 0;\n\t}, 1);\n} );\n\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn type === 'visible' ?\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\tcolumn;\n\t}, 1 );\n} );\n\n_api_register( 'columns.adjust()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnAdjustColumnSizing( settings );\n\t}, 1 );\n} );\n\n_api_register( 'column.index()', function ( type, idx ) {\n\tif ( this.context.length !== 0 ) {\n\t\tvar ctx = this.context[0];\n\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t}\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t}\n\t}\n} );\n\n_api_register( 'column()', function ( selector, opts ) {\n\treturn _selector_first( this.columns( selector, opts ) );\n} );\n\nvar __cell_selector = function ( settings, selector, opts )\n{\n\tvar data = settings.aoData;\n\tvar rows = _selector_row_indexes( settings, opts );\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\tvar allCells = $(_flatten( [], cells ));\n\tvar row;\n\tvar columns = settings.aoColumns.length;\n\tvar a, i, ien, j, o, host;\n\n\tvar run = function ( s ) {\n\t\tvar fnSelector = typeof s === 'function';\n\n\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t// All cells and function selectors\n\t\t\ta = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\to = {\n\t\t\t\t\t\trow: row,\n\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\thost = data[ row ];\n\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t// Selector - index\n\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\treturn s.column !== undefined && s.row !== undefined && rows.indexOf(s.row) !== -1 ?\n\t\t\t\t[s] :\n\t\t\t\t[];\n\t\t}\n\n\t\t// Selector - jQuery filtered cells\n\t\tvar jqResult = allCells\n\t\t\t.filter( s )\n\t\t\t.map( function (i, el) {\n\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t\t\t\t};\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t// data attributes\n\t\thost = $(s).closest('*[data-dt-row]');\n\t\treturn host.length ?\n\t\t\t[ {\n\t\t\t\trow: host.data('dt-row'),\n\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t} ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'cell', selector, run, settings, opts );\n};\n\n\n\n\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t// Argument shifting\n\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t// Indexes\n\t\tif ( rowSelector.row === undefined ) {\n\t\t\t// Selector options in first parameter\n\t\t\topts = rowSelector;\n\t\t\trowSelector = null;\n\t\t}\n\t\telse {\n\t\t\t// Cell index objects in first parameter\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t}\n\tif ( $.isPlainObject( columnSelector ) ) {\n\t\topts = columnSelector;\n\t\tcolumnSelector = null;\n\t}\n\n\t// Cell selector\n\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t} );\n\t}\n\n\t// The default built in options need to apply to row and columns\n\tvar internalOpts = opts ? {\n\t\tpage: opts.page,\n\t\torder: opts.order,\n\t\tsearch: opts.search\n\t} : {};\n\n\t// Row + column selector\n\tvar columns = this.columns( columnSelector, internalOpts );\n\tvar rows = this.rows( rowSelector, internalOpts );\n\tvar i, ien, j, jen;\n\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\tvar a = [];\n\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\ta.push( {\n\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t}, 1 );\n\n\t// There is currently only one extension which uses a cell selector extension\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t// an extension specific check at the moment\n\tvar cells = opts && opts.selected ?\n\t\tthis.cells( cellsNoOpts, opts ) :\n\t\tcellsNoOpts;\n\n\t$.extend( cells.selector, {\n\t\tcols: columnSelector,\n\t\trows: rowSelector,\n\t\topts: opts\n\t} );\n\n\treturn cells;\n} );\n\n\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\tvar data = settings.aoData[ row ];\n\n\t\treturn data && data.anCells ?\n\t\t\tdata.anCells[ column ] :\n\t\t\tundefined;\n\t}, 1 );\n} );\n\n\n_api_register( 'cells().data()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn settings.aoData[ row ][ type ][ column ];\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column, type );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn {\n\t\t\trow: row,\n\t\t\tcolumn: column,\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t};\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t_fnInvalidate( settings, row, src, column );\n\t} );\n} );\n\n\n\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n} );\n\n\n_api_register( 'cell().data()', function ( data ) {\n\tvar ctx = this.context;\n\tvar cell = this[0];\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && cell.length ?\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\n\treturn this;\n} );\n\n\n\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n *//**\n * Set the ordering for the table.\n *\n * @param {integer} order Column index to sort upon.\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 1D array of sorting information to be applied.\n * @param {array} [...] Optional additional sorting conditions\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 2D array of sorting information to be applied.\n * @returns {DataTables.Api} this\n */\n_api_register( 'order()', function ( order, dir ) {\n\tvar ctx = this.context;\n\tvar args = Array.prototype.slice.call( arguments );\n\n\tif ( order === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].aaSorting :\n\t\t\tundefined;\n\t}\n\n\t// set\n\tif ( typeof order === 'number' ) {\n\t\t// Simple column / direction passed in\n\t\torder = [ [ order, dir ] ];\n\t}\n\telse if ( args.length > 1 ) {\n\t\t// Arguments passed in (list of 1D arrays)\n\t\torder = args;\n\t}\n\t// otherwise a 2D array was passed in\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSorting = Array.isArray(order) ? order.slice() : order;\n\t} );\n} );\n\n\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n_api_register( 'order.listener()', function ( node, column, callback ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSortAttachListener(settings, node, {}, column, callback);\n\t} );\n} );\n\n\n_api_register( 'order.fixed()', function ( set ) {\n\tif ( ! set ) {\n\t\tvar ctx = this.context;\n\t\tvar fixed = ctx.length ?\n\t\t\tctx[0].aaSortingFixed :\n\t\t\tundefined;\n\n\t\treturn Array.isArray( fixed ) ?\n\t\t\t{ pre: fixed } :\n\t\t\tfixed;\n\t}\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t} );\n} );\n\n\n// Order by the selected column(s)\n_api_register( [\n\t'columns().order()',\n\t'column().order()'\n], function ( dir ) {\n\tvar that = this;\n\n\tif ( ! dir ) {\n\t\treturn this.iterator( 'column', function ( settings, idx ) {\n\t\t\tvar sort = _fnSortFlatten( settings );\n\n\t\t\tfor ( var i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tif ( sort[i].col === idx ) {\n\t\t\t\t\treturn sort[i].dir;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}, 1 );\n\t}\n\telse {\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tsettings.aaSorting = that[i].map( function (col) {\n\t\t\t\treturn [ col, dir ];\n\t\t\t} );\n\t\t} );\n\t}\n} );\n\n_api_registerPlural('columns().orderable()', 'column().orderable()', function ( directions ) {\n\treturn this.iterator( 'column', function ( settings, idx ) {\n\t\tvar col = settings.aoColumns[idx];\n\n\t\treturn directions ?\n\t\t\tcol.asSorting :\n\t\t\tcol.bSortable;\n\t}, 1 );\n} );\n\n\n_api_register( 'processing()', function ( show ) {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t_fnProcessingDisplay( ctx, show );\n\t} );\n} );\n\n\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\tvar ctx = this.context;\n\n\tif ( input === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].oPreviousSearch.search :\n\t\t\tundefined;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof regex === 'object') {\n\t\t\t// New style options to pass to the search builder\n\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, regex, {\n\t\t\t\tsearch: input\n\t\t\t} ) );\n\t\t}\n\t\telse {\n\t\t\t// Compat for the old options\n\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, {\n\t\t\t\tsearch: input,\n\t\t\t\tregex:  regex === null ? false : regex,\n\t\t\t\tsmart:  smart === null ? true  : smart,\n\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\n\t\t\t} ) );\n\t\t}\n\t} );\n} );\n\n_api_register( 'search.fixed()', function ( name, search ) {\n\tvar ret = this.iterator( true, 'table', function ( settings ) {\n\t\tvar fixed = settings.searchFixed;\n\n\t\tif (! name) {\n\t\t\treturn Object.keys(fixed)\n\t\t}\n\t\telse if (search === undefined) {\n\t\t\treturn fixed[name];\n\t\t}\n\t\telse if (search === null) {\n\t\t\tdelete fixed[name];\n\t\t}\n\t\telse {\n\t\t\tfixed[name] = search;\n\t\t}\n\n\t\treturn this;\n\t} );\n\n\treturn name !== undefined && search === undefined\n\t\t? ret[0]\n\t\t: ret;\n} );\n\n_api_registerPlural(\n\t'columns().search()',\n\t'column().search()',\n\tfunction ( input, regex, smart, caseInsen ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tvar preSearch = settings.aoPreSearchCols;\n\n\t\t\tif ( input === undefined ) {\n\t\t\t\t// get\n\t\t\t\treturn preSearch[ column ].search;\n\t\t\t}\n\n\t\t\t// set\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof regex === 'object') {\n\t\t\t\t// New style options to pass to the search builder\n\t\t\t\t$.extend( preSearch[ column ], regex, {\n\t\t\t\t\tsearch: input\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Old style (with not all options available)\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\tsearch: input,\n\t\t\t\t\tregex:  regex === null ? false : regex,\n\t\t\t\t\tsmart:  smart === null ? true  : smart,\n\t\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t} );\n\t}\n);\n\n_api_register([\n\t\t'columns().search.fixed()',\n\t\t'column().search.fixed()'\n\t],\n\tfunction ( name, search ) {\n\t\tvar ret = this.iterator( true, 'column', function ( settings, colIdx ) {\n\t\t\tvar fixed = settings.aoColumns[colIdx].searchFixed;\n\n\t\t\tif (! name) {\n\t\t\t\treturn Object.keys(fixed)\n\t\t\t}\n\t\t\telse if (search === undefined) {\n\t\t\t\treturn fixed[name];\n\t\t\t}\n\t\t\telse if (search === null) {\n\t\t\t\tdelete fixed[name];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfixed[name] = search;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} );\n\n\t\treturn name !== undefined && search === undefined\n\t\t\t? ret[0]\n\t\t\t: ret;\n\t}\n);\n/*\n * State API methods\n */\n\n_api_register( 'state()', function ( set, ignoreTime ) {\n\t// getter\n\tif ( ! set ) {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t}\n\n\tvar setMutate = $.extend( true, {}, set );\n\n\t// setter\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ignoreTime !== false ) {\n\t\t\tsetMutate.time = +new Date() + 100;\n\t\t}\n\n\t\t_fnImplementState( settings, setMutate, function(){} );\n\t} );\n} );\n\n\n_api_register( 'state.clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t// Save an empty object\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t} );\n} );\n\n\n_api_register( 'state.loaded()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oLoadedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.save()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSaveState( settings );\n\t} );\n} );\n\n/**\n * Set the jQuery or window object to be used by DataTables\n *\n * @param {*} module Library / container object\n * @param {string} [type] Library or container type `lib`, `win` or `datetime`.\n *   If not provided, automatic detection is attempted.\n */\nDataTable.use = function (module, type) {\n\tif (type === 'lib' || module.fn) {\n\t\t$ = module;\n\t}\n\telse if (type == 'win' || module.document) {\n\t\twindow = module;\n\t\tdocument = module.document;\n\t}\n\telse if (type === 'datetime' || module.type === 'DateTime') {\n\t\tDataTable.DateTime = module;\n\t}\n}\n\n/**\n * CommonJS factory function pass through. This will check if the arguments\n * given are a window object or a jQuery object. If so they are set\n * accordingly.\n * @param {*} root Window\n * @param {*} jq jQUery\n * @returns {boolean} Indicator\n */\nDataTable.factory = function (root, jq) {\n\tvar is = false;\n\n\t// Test if the first parameter is a window object\n\tif (root && root.document) {\n\t\twindow = root;\n\t\tdocument = root.document;\n\t}\n\n\t// Test if the second parameter is a jQuery object\n\tif (jq && jq.fn && jq.fn.jquery) {\n\t\t$ = jq;\n\t\tis = true;\n\t}\n\n\treturn is;\n}\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @param {string} [version2=current DataTables version] As above, but optional.\n *   If not given the current DataTables version will be used.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\nDataTable.versionCheck = function( version, version2 )\n{\n\tvar aThis = version2 ?\n\t\tversion2.split('.') :\n\t\tDataTable.version.split('.');\n\tvar aThat = version.split('.');\n\tvar iThis, iThat;\n\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\n\t\t// Parts are the same, keep comparing\n\t\tif (iThis === iThat) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Parts are different, return immediately\n\t\treturn iThis > iThat;\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\nDataTable.isDataTable = function ( table )\n{\n\tvar t = $(table).get(0);\n\tvar is = false;\n\n\tif ( table instanceof DataTable.Api ) {\n\t\treturn true;\n\t}\n\n\t$.each( DataTable.settings, function (i, o) {\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\tis = true;\n\t\t}\n\t} );\n\n\treturn is;\n};\n\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\nDataTable.tables = function ( visible )\n{\n\tvar api = false;\n\n\tif ( $.isPlainObject( visible ) ) {\n\t\tapi = visible.api;\n\t\tvisible = visible.visible;\n\t}\n\n\tvar a = DataTable.settings\n\t\t.filter( function (o) {\n\t\t\treturn !visible || (visible && $(o.nTable).is(':visible')) \n\t\t\t\t? true\n\t\t\t\t: false;\n\t\t} )\n\t\t.map( function (o) {\n\t\t\treturn o.nTable;\n\t\t});\n\n\treturn api ?\n\t\tnew _Api( a ) :\n\t\ta;\n};\n\n\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n\n/**\n *\n */\n_api_register( '$()', function ( selector, opts ) {\n\tvar\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\tjqRows = $(rows);\n\n\treturn $( [].concat(\n\t\tjqRows.filter( selector ).toArray(),\n\t\tjqRows.find( selector ).toArray()\n\t) );\n} );\n\n\n// jQuery functions to operate on the tables\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\targs[0] = args[0].split( /\\s/ ).map( function ( e ) {\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\te+'.dt' :\n\t\t\t\te;\n\t\t\t} ).join( ' ' );\n\n\t\tvar inst = $( this.tables().nodes() );\n\t\tinst[key].apply( inst, args );\n\t\treturn this;\n\t} );\n} );\n\n\n_api_register( 'clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnClearTable( settings );\n\t} );\n} );\n\n\n_api_register( 'error()', function (msg) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLog( settings, 0, msg );\n\t} );\n} );\n\n\n_api_register( 'settings()', function () {\n\treturn new _Api( this.context, this.context );\n} );\n\n\n_api_register( 'init()', function () {\n\tvar ctx = this.context;\n\treturn ctx.length ? ctx[0].oInit : null;\n} );\n\n\n_api_register( 'data()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t} ).flatten();\n} );\n\n\n_api_register( 'trigger()', function ( name, args, bubbles ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _fnCallbackFire( settings, null, name, args, bubbles );\n\t} ).flatten();\n} );\n\n\n_api_register( 'ready()', function ( fn ) {\n\tvar ctx = this.context;\n\n\t// Get status of first table\n\tif (! fn) {\n\t\treturn ctx.length\n\t\t\t? (ctx[0]._bInitComplete || false)\n\t\t\t: null;\n\t}\n\n\t// Function to run either once the table becomes ready or\n\t// immediately if it is already ready.\n\treturn this.tables().every(function () {\n\t\tif (this.context[0]._bInitComplete) {\n\t\t\tfn.call(this);\n\t\t}\n\t\telse {\n\t\t\tthis.on('init', function () {\n\t\t\t\tfn.call(this);\n\t\t\t});\n\t\t}\n\t} );\n} );\n\n\n_api_register( 'destroy()', function ( remove ) {\n\tremove = remove || false;\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tvar classes   = settings.oClasses;\n\t\tvar table     = settings.nTable;\n\t\tvar tbody     = settings.nTBody;\n\t\tvar thead     = settings.nTHead;\n\t\tvar tfoot     = settings.nTFoot;\n\t\tvar jqTable   = $(table);\n\t\tvar jqTbody   = $(tbody);\n\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\tvar rows      = settings.aoData.map( function (r) { return r ? r.nTr : null; } );\n\t\tvar orderClasses = classes.order;\n\n\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t// should be taken\n\t\tsettings.bDestroying = true;\n\n\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings], true );\n\n\t\t// If not being removed from the document, make all columns visible\n\t\tif ( ! remove ) {\n\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t}\n\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t// for removing them\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t$(window).off('.DT-'+settings.sInstance);\n\n\t\t// When scrolling we had to break the table up - restore it\n\t\tif ( table != thead.parentNode ) {\n\t\t\tjqTable.children('thead').detach();\n\t\t\tjqTable.append( thead );\n\t\t}\n\n\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\tjqTable.children('tfoot').detach();\n\t\t\tjqTable.append( tfoot );\n\t\t}\n\n\t\tsettings.aaSorting = [];\n\t\tsettings.aaSortingFixed = [];\n\t\t_fnSortingClasses( settings );\n\n\t\t$('th, td', thead)\n\t\t\t.removeClass(\n\t\t\t\torderClasses.canAsc + ' ' +\n\t\t\t\torderClasses.canDesc + ' ' +\n\t\t\t\torderClasses.isAsc + ' ' +\n\t\t\t\torderClasses.isDesc\n\t\t\t)\n\t\t\t.css('width', '');\n\n\t\t// Add the TR elements back into the table in their original order\n\t\tjqTbody.children().detach();\n\t\tjqTbody.append( rows );\n\n\t\tvar orig = settings.nTableWrapper.parentNode;\n\t\tvar insertBefore = settings.nTableWrapper.nextSibling;\n\n\t\t// Remove the DataTables generated nodes, events and classes\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\tjqTable[ removedMethod ]();\n\t\tjqWrapper[ removedMethod ]();\n\n\t\t// If we need to reattach the table to the document\n\t\tif ( ! remove && orig ) {\n\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\torig.insertBefore( table, insertBefore );\n\n\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t// so we can restore directly to that\n\t\t\tjqTable\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t.removeClass( classes.table );\n\t\t}\n\n\t\t/* Remove the settings object from the settings array */\n\t\tvar idx = DataTable.settings.indexOf(settings);\n\t\tif ( idx !== -1 ) {\n\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t}\n\t} );\n} );\n\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t_api_register( type+'s().every()', function ( fn ) {\n\t\tvar opts = this.selector.opts;\n\t\tvar api = this;\n\t\tvar inst;\n\t\tvar counter = 0;\n\n\t\treturn this.iterator( 'every', function ( settings, selectedIdx, tableIdx ) {\n\t\t\tinst = api[ type ](selectedIdx, opts);\n\n\t\t\tif (type === 'cell') {\n\t\t\t\tfn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfn.call(inst, selectedIdx, tableIdx, counter);\n\t\t\t}\n\n\t\t\tcounter++;\n\t\t} );\n\t} );\n} );\n\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register( 'i18n()', function ( token, def, plural ) {\n\tvar ctx = this.context[0];\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\n\tif ( resolved === undefined ) {\n\t\tresolved = def;\n\t}\n\n\tif ( $.isPlainObject( resolved ) ) {\n\t\tresolved = plural !== undefined && resolved[ plural ] !== undefined ?\n\t\t\tresolved[ plural ] :\n\t\t\tresolved._;\n\t}\n\n\treturn typeof resolved === 'string'\n\t\t? resolved.replace( '%d', plural ) // nb: plural might be undefined,\n\t\t: resolved;\n} );\n\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See https://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"2.0.0\";\n\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n\t/**\n\t * Flag to indicate if the filtering should be case insensitive or not\n\t */\n\t\"caseInsensitive\": true,\n\n\t/**\n\t * Applied search term\n\t */\n\t\"search\": \"\",\n\n\t/**\n\t * Flag to indicate if the search term should be interpreted as a\n\t * regular expression (true) or not (false) and therefore and special\n\t * regex characters escaped.\n\t */\n\t\"regex\": false,\n\n\t/**\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t */\n\t\"smart\": true,\n\n\t/**\n\t * Flag to indicate if DataTables should only trigger a search when\n\t * the return key is pressed.\n\t */\n\t\"return\": false\n};\n\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n\t/**\n\t * TR element for the row\n\t */\n\t\"nTr\": null,\n\n\t/**\n\t * Array of TD elements for each row. This is null until the row has been\n\t * created.\n\t */\n\t\"anCells\": null,\n\n\t/**\n\t * Data object from the original data source for the row. This is either\n\t * an array if using the traditional form of DataTables, or an object if\n\t * using mData options. The exact type will depend on the passed in\n\t * data from the data source, or will be an array if using DOM a data\n\t * source.\n\t */\n\t\"_aData\": [],\n\n\t/**\n\t * Sorting data cache - this array is ostensibly the same length as the\n\t * number of columns (although each index is generated only as it is\n\t * needed), and holds the data that is used for sorting each column in the\n\t * row. We do this cache generation at the start of the sort in order that\n\t * the formatting of the sort data need be done only once for each cell\n\t * per sort. This array should not be read from or written to by anything\n\t * other than the master sorting methods.\n\t */\n\t\"_aSortData\": null,\n\n\t/**\n\t * Per cell filtering data cache. As per the sort data cache, used to\n\t * increase the performance of the filtering in DataTables\n\t */\n\t\"_aFilterData\": null,\n\n\t/**\n\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t * in this case a string rather than an array. This is easily computed with\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t * needed on every search (memory traded for performance)\n\t */\n\t\"_sFilterRow\": null,\n\n\t/**\n\t * Denote if the original data source was from the DOM, or the data source\n\t * object. This is used for invalidating data, so DataTables can\n\t * automatically read data from the original source, unless uninstructed\n\t * otherwise.\n\t */\n\t\"src\": null,\n\n\t/**\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t * object, but want to know the index\n\t */\n\t\"idx\": -1,\n\n\t/**\n\t * Cached display value\n\t */\n\tdisplayData: null\n};\n\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n\t/**\n\t * Column index.\n\t */\n\t\"idx\": null,\n\n\t/**\n\t * A list of the columns that sorting should occur on when this column\n\t * is sorted. That this property is an array allows multi-column sorting\n\t * to be defined for a column (for example first name / last name columns\n\t * would benefit from this). The values are integers pointing to the\n\t * columns to be sorted on (typically it will be a single integer pointing\n\t * at itself, but that doesn't need to be the case).\n\t */\n\t\"aDataSort\": null,\n\n\t/**\n\t * Define the sorting directions that are applied to the column, in sequence\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t * as the sorting direction when the column if first sorted (clicked on).\n\t * Sort it again (click again) and it will move on to the next index.\n\t * Repeat until loop.\n\t */\n\t\"asSorting\": null,\n\n\t/**\n\t * Flag to indicate if the column is searchable, and thus should be included\n\t * in the filtering or not.\n\t */\n\t\"bSearchable\": null,\n\n\t/**\n\t * Flag to indicate if the column is sortable or not.\n\t */\n\t\"bSortable\": null,\n\n\t/**\n\t * Flag to indicate if the column is currently visible in the table or not\n\t */\n\t\"bVisible\": null,\n\n\t/**\n\t * Store for manual type assignment using the `column.type` option. This\n\t * is held in store so we can manipulate the column's `sType` property.\n\t */\n\t\"_sManualType\": null,\n\n\t/**\n\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t * source for filtering or sorting. True is either are.\n\t */\n\t\"_bAttrSrc\": false,\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t */\n\t\"fnCreatedCell\": null,\n\n\t/**\n\t * Function to get data from a cell in a column. You should <b>never</b>\n\t * access data directly through _aData internally in DataTables - always use\n\t * the method attached to this property. It allows mData to function as\n\t * required. This function is automatically assigned by the column\n\t * initialisation method\n\t */\n\t\"fnGetData\": null,\n\n\t/**\n\t * Function to set data for a cell in the column. You should <b>never</b>\n\t * set the data directly to _aData internally in DataTables - always use\n\t * this method. It allows mData to function as required. This function\n\t * is automatically assigned by the column initialisation method\n\t */\n\t\"fnSetData\": null,\n\n\t/**\n\t * Property to read the value for the cells in the column from the data\n\t * source array / object. If null, then the default content is used, if a\n\t * function is given then the return from the function is used.\n\t */\n\t\"mData\": null,\n\n\t/**\n\t * Partner property to mData which is used (only when defined) to get\n\t * the data - i.e. it is basically the same as mData, but without the\n\t * 'set' option, and also the data fed to it is the result from mData.\n\t * This is the rendering method to match the data method of mData.\n\t */\n\t\"mRender\": null,\n\n\t/**\n\t * The class to apply to all TD elements in the table's TBODY for the column\n\t */\n\t\"sClass\": null,\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t */\n\t\"sContentPadding\": null,\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because mData\n\t * is set to null, or because the data source itself is null).\n\t */\n\t\"sDefaultContent\": null,\n\n\t/**\n\t * Name for the column, allowing reference to the column by name as well as\n\t * by index (needs a lookup to work by name).\n\t */\n\t\"sName\": null,\n\n\t/**\n\t * Custom sorting data type - defines which of the available plug-ins in\n\t * afnSortData the custom sorting will use - if any is defined.\n\t */\n\t\"sSortDataType\": 'std',\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column\n\t */\n\t\"sSortingClass\": null,\n\n\t/**\n\t * Title of the column - what is seen in the TH element (nTh).\n\t */\n\t\"sTitle\": null,\n\n\t/**\n\t * Column sorting and filtering type\n\t */\n\t\"sType\": null,\n\n\t/**\n\t * Width of the column\n\t */\n\t\"sWidth\": null,\n\n\t/**\n\t * Width of the column when it was first \"encountered\"\n\t */\n\t\"sWidthOrig\": null,\n\n\t/** Cached string which is the longest in the column */\n\tmaxLenString: null,\n\n\t/**\n\t * Store for named searches\n\t */\n\tsearchFixed: null\n};\n\n\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\nDataTable.defaults = {\n\t/**\n\t * An array of data to use for the table, passed in at initialisation which\n\t * will be used in preference to any data which is already in the DOM. This is\n\t * particularly useful for constructing tables purely in Javascript, for\n\t * example with a custom Ajax call.\n\t */\n\t\"aaData\": null,\n\n\n\t/**\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t * initialisation. You can define which column(s) the sort is performed\n\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t * should contain an array for each column to be sorted initially containing\n\t * the column's index and a direction string ('asc' or 'desc').\n\t */\n\t\"aaSorting\": [[0,'asc']],\n\n\n\t/**\n\t * This parameter is basically identical to the `sorting` parameter, but\n\t * cannot be overridden by user interaction with the table. What this means\n\t * is that you could have a column (visible or hidden) which the sorting\n\t * will always be forced on first - any sorting after that (from the user)\n\t * will then be performed as required. This can be useful for grouping rows\n\t * together.\n\t */\n\t\"aaSortingFixed\": [],\n\n\n\t/**\n\t * DataTables can be instructed to load data to display in the table from a\n\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t *\n\t * The `ajax` property has three different modes of operation, depending on\n\t * how it is defined. These are:\n\t *\n\t * * `string` - Set the URL from where the data should be loaded from.\n\t * * `object` - Define properties for `jQuery.ajax`.\n\t * * `function` - Custom data get function\n\t *\n\t * `string`\n\t * --------\n\t *\n\t * As a string, the `ajax` property simply defines the URL from which\n\t * DataTables will load data.\n\t *\n\t * `object`\n\t * --------\n\t *\n\t * As an object, the parameters in the object are passed to\n\t * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n\t * of the Ajax request. DataTables has a number of default parameters which\n\t * you can override using this option. Please refer to the jQuery\n\t * documentation for a full description of the options available, although\n\t * the following parameters provide additional options in DataTables or\n\t * require special consideration:\n\t *\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t *   can also be used as a function to manipulate the data DataTables sends\n\t *   to the server. The function takes a single parameter, an object of\n\t *   parameters with the values that DataTables has readied for sending. An\n\t *   object may be returned which will be merged into the DataTables\n\t *   defaults, or you can add the items to the object that was passed in and\n\t *   not return anything from the function. This supersedes `fnServerParams`\n\t *   from DataTables 1.9-.\n\t *\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t *   from an Ajax source or for server-side processing - this parameter\n\t *   allows that property to be changed. You can use Javascript dotted\n\t *   object notation to get a data source for multiple levels of nesting, or\n\t *   it my be used as a function. As a function it takes a single parameter,\n\t *   the JSON returned from the server, which can be manipulated as\n\t *   required, with the returned value being that used by DataTables as the\n\t *   data source for the table.\n\t *\n\t * * `success` - Should not be overridden it is used internally in\n\t *   DataTables. To manipulate / transform the data returned by the server\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t *\n\t * `function`\n\t * ----------\n\t *\n\t * As a function, making the Ajax call is left up to yourself allowing\n\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t * than Ajax could be used to obtain the required data, such as Web storage\n\t * or an AIR database.\n\t *\n\t * The function is given four parameters and no return is required. The\n\t * parameters are:\n\t *\n\t * 1. _object_ - Data to send to the server\n\t * 2. _function_ - Callback function that must be executed when the required\n\t *    data has been obtained. That data should be passed into the callback\n\t *    as the only parameter\n\t * 3. _object_ - DataTables settings object for the table\n\t */\n\t\"ajax\": null,\n\n\n\t/**\n\t * This parameter allows you to readily specify the entries in the length drop\n\t * down menu that DataTables shows when pagination is enabled. It can be\n\t * either a 1D array of options which will be used for both the displayed\n\t * option and the value, or a 2D array which will use the array in the first\n\t * position as the value, and the array in the second position as the\n\t * displayed options (useful for language strings such as 'All').\n\t *\n\t * Note that the `pageLength` property will be automatically set to the\n\t * first value given in this array, unless `pageLength` is also provided.\n\t */\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\n\n\t/**\n\t * The `columns` option in the initialisation parameter allows you to define\n\t * details about the way individual columns behave. For a full list of\n\t * column options that can be set, please see\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t * define your columns, you must have an entry in the array for every single\n\t * column that you have in your table (these can be null if you don't which\n\t * to specify any options).\n\t */\n\t\"aoColumns\": null,\n\n\t/**\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t * column, multiple columns, or all columns, using the `targets` property of\n\t * each object in the array. This allows great flexibility when creating\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t * columns you specifically want. `columnDefs` may use any of the column\n\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t * have `targets` defined in each object in the array. Values in the `targets`\n\t * array may be:\n\t *   <ul>\n\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t *     <li>a negative integer - column index counting from the right</li>\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t *   </ul>\n\t */\n\t\"aoColumnDefs\": null,\n\n\n\t/**\n\t * Basically the same as `search`, this parameter defines the individual column\n\t * filtering state at initialisation time. The array must be of the same size\n\t * as the number of columns, and each element be an object with the parameters\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t * accepted and the default will be used.\n\t */\n\t\"aoSearchCols\": [],\n\n\n\t/**\n\t * Enable or disable automatic column width calculation. This can be disabled\n\t * as an optimisation (it takes some time to calculate the widths) if the\n\t * tables widths are passed in using `columns`.\n\t */\n\t\"bAutoWidth\": true,\n\n\n\t/**\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t * are using an Ajax or JS data source for the table. This option, when set to\n\t * true, will cause DataTables to defer the creation of the table elements for\n\t * each row until they are needed for a draw - saving a significant amount of\n\t * time.\n\t */\n\t\"bDeferRender\": true,\n\n\n\t/**\n\t * Replace a DataTable which matches the given selector and replace it with\n\t * one which has the properties of the new initialisation object passed. If no\n\t * table matches the selector, then the new DataTable will be constructed as\n\t * per normal.\n\t */\n\t\"bDestroy\": false,\n\n\n\t/**\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t * that it allows the end user to input multiple words (space separated) and\n\t * will match a row containing those words, even if not in the order that was\n\t * specified (this allow matching across multiple columns). Note that if you\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t * default filtering input box and retain filtering abilities, please use\n\t * {@link DataTable.defaults.dom}.\n\t */\n\t\"bFilter\": true,\n\n\t/**\n\t * Used only for compatiblity with DT1\n\t * @deprecated\n\t */\n\t\"bInfo\": true,\n\n\t/**\n\t * Used only for compatiblity with DT1\n\t * @deprecated\n\t */\n\t\"bLengthChange\": true,\n\n\t/**\n\t * Enable or disable pagination.\n\t */\n\t\"bPaginate\": true,\n\n\n\t/**\n\t * Enable or disable the display of a 'processing' indicator when the table is\n\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t * large amounts of data where it can take a noticeable amount of time to sort\n\t * the entries.\n\t */\n\t\"bProcessing\": false,\n\n\n\t/**\n\t * Retrieve the DataTables object for the given selector. Note that if the\n\t * table has already been initialised, this parameter will cause DataTables\n\t * to simply return the object that has already been set up - it will not take\n\t * account of any changes you might have made to the initialisation object\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t * you need.\n\t */\n\t\"bRetrieve\": false,\n\n\n\t/**\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t * the table's viewport to the given height at all times (useful for layout).\n\t * However, this can look odd when filtering data down to a small data set,\n\t * and the footer is left \"floating\" further down. This parameter (when\n\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t * the result set will fit within the given Y height.\n\t */\n\t\"bScrollCollapse\": false,\n\n\n\t/**\n\t * Configure DataTables to use server-side processing. Note that the\n\t * `ajax` parameter must also be given in order to give DataTables a\n\t * source to obtain the required data for each draw.\n\t */\n\t\"bServerSide\": false,\n\n\n\t/**\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t * disabled by the `sortable` option for each column.\n\t */\n\t\"bSort\": true,\n\n\n\t/**\n\t * Enable or display DataTables' ability to sort multiple columns at the\n\t * same time (activated by shift-click by the user).\n\t */\n\t\"bSortMulti\": true,\n\n\n\t/**\n\t * Allows control over whether DataTables should use the top (true) unique\n\t * cell that is found for a single column, or the bottom (false - default).\n\t * This is useful when using complex headers.\n\t */\n\t\"bSortCellsTop\": null,\n\n\n\t/**\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t * presented as a feature switch as it can increase processing time (while\n\t * classes are removed and added) so for large data sets you might want to\n\t * turn this off.\n\t */\n\t\"bSortClasses\": true,\n\n\n\t/**\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t * used to save table display information such as pagination information,\n\t * display length, filtering and sorting. As such when the end user reloads\n\t * the page the display display will match what thy had previously set up.\n\t */\n\t\"bStateSave\": false,\n\n\n\t/**\n\t * This function is called when a TR element is created (and all TD child\n\t * elements have been inserted), or registered if using a DOM source, allowing\n\t * manipulation of the TR element (adding classes etc).\n\t */\n\t\"fnCreatedRow\": null,\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify any aspect you want about the created DOM.\n\t */\n\t\"fnDrawCallback\": null,\n\n\n\t/**\n\t * Identical to fnHeaderCallback() but for the table footer this function\n\t * allows you to modify the table footer on every 'draw' event.\n\t */\n\t\"fnFooterCallback\": null,\n\n\n\t/**\n\t * When rendering large numbers in the information element for the table\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t * function will override the default method DataTables uses.\n\t */\n\t\"fnFormatNumber\": function ( toFormat ) {\n\t\treturn toFormat.toString().replace(\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\tthis.oLanguage.sThousands\n\t\t);\n\t},\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify the header row. This can be used to calculate and\n\t * display useful information about the table.\n\t */\n\t\"fnHeaderCallback\": null,\n\n\n\t/**\n\t * The information element can be used to convey information about the current\n\t * state of the table. Although the internationalisation options presented by\n\t * DataTables are quite capable of dealing with most customisations, there may\n\t * be times where you wish to customise the string further. This callback\n\t * allows you to do exactly that.\n\t */\n\t\"fnInfoCallback\": null,\n\n\n\t/**\n\t * Called when the table has been initialised. Normally DataTables will\n\t * initialise sequentially and there will be no need for this function,\n\t * however, this does not hold true when using external language information\n\t * since that is obtained using an async XHR call.\n\t */\n\t\"fnInitComplete\": null,\n\n\n\t/**\n\t * Called at the very start of each table draw and can be used to cancel the\n\t * draw by returning false, any other return (including undefined) results in\n\t * the full draw occurring).\n\t */\n\t\"fnPreDrawCallback\": null,\n\n\n\t/**\n\t * This function allows you to 'post process' each row after it have been\n\t * generated for each table draw, but before it is rendered on screen. This\n\t * function might be used for setting the row class name etc.\n\t */\n\t\"fnRowCallback\": null,\n\n\n\t/**\n\t * Load the table state. With this function you can define from where, and how, the\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t */\n\t\"fnStateLoadCallback\": function ( settings ) {\n\t\ttry {\n\t\t\treturn JSON.parse(\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn {};\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the saved state prior to loading that state.\n\t * This callback is called when the table is loading state from the stored data, but\n\t * prior to the settings object being modified by the saved state. Note that for\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t * a plug-in.\n\t */\n\t\"fnStateLoadParams\": null,\n\n\n\t/**\n\t * Callback that is called when the state has been loaded from the state saving method\n\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t */\n\t\"fnStateLoaded\": null,\n\n\n\t/**\n\t * Save the table state. This function allows you to define where and how the state\n\t * information for the table is stored By default DataTables will use `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t */\n\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\ttry {\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\tJSON.stringify( data )\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t// noop\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the state to be saved. Called when the table\n\t * has changed state a new state save is required. This method allows modification of\n\t * the state saving object prior to actually doing the save, including addition or\n\t * other state properties or modification. Note that for plug-in authors, you should\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t */\n\t\"fnStateSaveParams\": null,\n\n\n\t/**\n\t * Duration for which the saved state information is considered valid. After this period\n\t * has elapsed the state will be returned to the default.\n\t * Value is given in seconds.\n\t */\n\t\"iStateDuration\": 7200,\n\n\n\t/**\n\t * Number of rows to display on a single page when using pagination. If\n\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t * this to a custom setting using a pop-up menu.\n\t */\n\t\"iDisplayLength\": 10,\n\n\n\t/**\n\t * Define the starting point for data display when using DataTables with\n\t * pagination. Note that this parameter is the number of records, rather than\n\t * the page number, so if you have 10 records per page and want to start on\n\t * the third page, it should be \"20\".\n\t */\n\t\"iDisplayStart\": 0,\n\n\n\t/**\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t * allows you to tab through the controls and press the enter key to activate them.\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t * disable built-in keyboard navigation.\n\t */\n\t\"iTabIndex\": 0,\n\n\n\t/**\n\t * Classes that DataTables assigns to the various components and features\n\t * that it adds to the HTML table. This allows classes to be configured\n\t * during initialisation in addition to through the static\n\t * {@link DataTable.ext.oStdClasses} object).\n\t */\n\t\"oClasses\": {},\n\n\n\t/**\n\t * All strings that DataTables uses in the user interface that it creates\n\t * are defined in this object, allowing you to modified them individually or\n\t * completely replace them all as required.\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t * must be internationalised as well).\n\t\t */\n\t\t\"oAria\": {\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be sorted\n\t\t\t */\n\t\t\t\"orderable\": \": Activate to sort\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column is currently being sorted\n\t\t\t */\n\t\t\t\"orderableReverse\": \": Activate to invert sorting\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column is currently being \n\t\t\t * sorted and next step is to remove sorting\n\t\t\t */\n\t\t\t\"orderableRemove\": \": Activate to remove sorting\",\n\n\t\t\tpaginate: {\n\t\t\t\tfirst: 'First',\n\t\t\t\tlast: 'Last',\n\t\t\t\tnext: 'Next',\n\t\t\t\tprevious: 'Previous'\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t * control types.\n\t\t */\n\t\t\"oPaginate\": {\n\t\t\t/**\n\t\t\t * Label and character for first page button\n\t\t\t */\n\t\t\t\"sFirst\": \"«\",\n\n\t\t\t/**\n\t\t\t * Last page button\n\t\t\t */\n\t\t\t\"sLast\": \"»\",\n\n\t\t\t/**\n\t\t\t * Next page button\n\t\t\t */\n\t\t\t\"sNext\": \"›\",\n\n\t\t\t/**\n\t\t\t * Previous page button\n\t\t\t */\n\t\t\t\"sPrevious\": \"‹\",\n\t\t},\n\n\t\t/**\n\t\t * Plural object for the data type the table is showing\n\t\t */\n\t\tentries: {\n\t\t\t_: \"entries\",\n\t\t\t1: \"entry\"\n\t\t},\n\n\t\t/**\n\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t * instead (either the default or given value).\n\t\t */\n\t\t\"sEmptyTable\": \"No data available in table\",\n\n\n\t\t/**\n\t\t * This string gives information to the end user about the information\n\t\t * that is current on display on the page. The following tokens can be\n\t\t * used in the string and will be dynamically replaced as the table\n\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t * removed as needed by the language requires:\n\t\t *\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t * * `\\_PAGE\\_` - Current page number\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t */\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_\",\n\n\n\t\t/**\n\t\t * Display information string for when the table is empty. Typically the\n\t\t * format of this string should match `info`.\n\t\t */\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 _ENTRIES-TOTAL_\",\n\n\n\t\t/**\n\t\t * When a user filters the information in a table, this string is appended\n\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t */\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total _ENTRIES-MAX_)\",\n\n\n\t\t/**\n\t\t * If can be useful to append extra information to the info string at times,\n\t\t * and this variable does exactly that. This information will be appended to\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t * being used) at all times.\n\t\t */\n\t\t\"sInfoPostFix\": \"\",\n\n\n\t\t/**\n\t\t * This decimal place operator is a little different from the other\n\t\t * language options since DataTables doesn't output floating point\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t * what this parameter does is modify the sort methods of the table so\n\t\t * that numbers which are in a format which has a character other than\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t *\n\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t * the same table and still be sortable, the table must be consistent.\n\t\t * However, multiple different tables on the page can use different\n\t\t * decimal place characters.\n\t\t */\n\t\t\"sDecimal\": \"\",\n\n\n\t\t/**\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t * used to format large numbers that are used in the table information.\n\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t * character you wish with this parameter.\n\t\t */\n\t\t\"sThousands\": \",\",\n\n\n\t\t/**\n\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t * with a custom select box if required.\n\t\t */\n\t\t\"sLengthMenu\": \"_MENU_ _ENTRIES_ per page\",\n\n\n\t\t/**\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t * parameter is not used when loading data by server-side processing, just\n\t\t * Ajax sourced data with client-side processing.\n\t\t */\n\t\t\"sLoadingRecords\": \"Loading...\",\n\n\n\t\t/**\n\t\t * Text which is displayed when the table is processing a user action\n\t\t * (usually a sort command or similar).\n\t\t */\n\t\t\"sProcessing\": \"\",\n\n\n\t\t/**\n\t\t * Details the actions that will be taken when the user types into the\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t * then the input box is appended to the string automatically.\n\t\t */\n\t\t\"sSearch\": \"Search:\",\n\n\n\t\t/**\n\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t */\n\t\t\"sSearchPlaceholder\": \"\",\n\n\n\t\t/**\n\t\t * All of the language information can be stored in a file on the\n\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t * and the object has the same properties as the oLanguage object in the\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t * the example language files to see how this works in action.\n\t\t */\n\t\t\"sUrl\": \"\",\n\n\n\t\t/**\n\t\t * Text shown inside the table records when the is no information to be\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t * information in the table at all (regardless of filtering).\n\t\t */\n\t\t\"sZeroRecords\": \"No matching records found\"\n\t},\n\n\n\t/**\n\t * This parameter allows you to have define the global filtering state at\n\t * initialisation time. As an object the `search` parameter must be\n\t * defined, but all other parameters are optional. When `regex` is true,\n\t * the search string will be treated as a regular expression, when false\n\t * (default) it will be treated as a straight string. When `smart`\n\t * DataTables will use it's smart filtering methods (to word match at\n\t * any point in the data), when false this will not be done.\n\t */\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\n\n\t/**\n\t * Table and control layout. This replaces the legacy `dom` option.\n\t */\n\tlayout: {\n\t\ttopStart: 'pageLength',\n\t\ttopEnd: 'search',\n\t\tbottomStart: 'info',\n\t\tbottomEnd: 'paging'\n\t},\n\n\n\t/**\n\t * Legacy DOM layout option\n\t */\n\t\"sDom\": null,\n\n\n\t/**\n\t * Search delay option. This will throttle full table searches that use the\n\t * DataTables provided search input element (it does not effect calls to\n\t * `dt-api search()`, providing a delay before the search is made.\n\t */\n\t\"searchDelay\": null,\n\n\n\t/**\n\t * DataTables features six different built-in options for the buttons to\n\t * display for pagination control:\n\t *\n\t * * `numbers` - Page number buttons only\n\t * * `simple` - 'Previous' and 'Next' buttons only\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t */\n\t\"sPaginationType\": \"full_numbers\",\n\n\n\t/**\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t * certain layout, or you have a large number of columns in the table, you\n\t * can enable x-scrolling to show the table in a viewport, which can be\n\t * scrolled. This property can be `true` which will allow the table to\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t * is recommended.\n\t */\n\t\"sScrollX\": \"\",\n\n\n\t/**\n\t * This property can be used to force a DataTable to use more width than it\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t * table which requires to be well spaced, this parameter is useful for\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t * measurement).\n\t */\n\t\"sScrollXInner\": \"\",\n\n\n\t/**\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t * to the given height, and enable scrolling for any data which overflows the\n\t * current viewport. This can be used as an alternative to paging to display\n\t * a lot of data in a small area (although paging and scrolling can both be\n\t * enabled at the same time). This property can be any CSS unit, or a number\n\t * (in which case it will be treated as a pixel measurement).\n\t */\n\t\"sScrollY\": \"\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t * processing or Ajax sourced data.\n\t */\n\t\"sServerMethod\": \"GET\",\n\n\n\t/**\n\t * DataTables makes use of renderers when displaying HTML elements for\n\t * a table. These renderers can be added or modified by plug-ins to\n\t * generate suitable mark-up for a site. For example the Bootstrap\n\t * integration plug-in for DataTables uses a paging button renderer to\n\t * display pagination buttons in the mark-up required by Bootstrap.\n\t *\n\t * For further information about the renderers available see\n\t * DataTable.ext.renderer\n\t */\n\t\"renderer\": null,\n\n\n\t/**\n\t * Set the data property name that DataTables should use to get a row's id\n\t * to set as the `id` property in the node.\n\t */\n\t\"rowId\": \"DT_RowId\",\n\n\n\t/**\n\t * Caption value\n\t */\n\t\"caption\": null\n};\n\n_fnHungarianMap( DataTable.defaults );\n\n\n\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.column = {\n\t/**\n\t * Define which column(s) an order will occur on for this column. This\n\t * allows a column's ordering to take multiple columns into account when\n\t * doing a sort or use the data from a different column. For example first\n\t * name / last name columns make sense to do a multi-column sort over the\n\t * two columns.\n\t */\n\t\"aDataSort\": null,\n\t\"iDataSort\": -1,\n\n\tariaTitle: '',\n\n\n\t/**\n\t * You can control the default ordering direction, and even alter the\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t * using this parameter.\n\t */\n\t\"asSorting\": [ 'asc', 'desc', '' ],\n\n\n\t/**\n\t * Enable or disable filtering on the data in this column.\n\t */\n\t\"bSearchable\": true,\n\n\n\t/**\n\t * Enable or disable ordering on this column.\n\t */\n\t\"bSortable\": true,\n\n\n\t/**\n\t * Enable or disable the display of this column.\n\t */\n\t\"bVisible\": true,\n\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t */\n\t\"fnCreatedCell\": null,\n\n\n\t/**\n\t * This property can be used to read data from any data source property,\n\t * including deeply nested objects / properties. `data` can be given in a\n\t * number of different ways which effect its behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object. Note that\n\t *      function notation is recommended for use in `render` rather than\n\t *      `data` as it is much simpler to use as a renderer.\n\t * * `null` - use the original data source for the row rather than plucking\n\t *   data directly from it. This action has effects on two other\n\t *   initialisation options:\n\t *    * `defaultContent` - When null is given as the `data` option and\n\t *      `defaultContent` is specified for the column, the value defined by\n\t *      `defaultContent` will be used for the cell.\n\t *    * `render` - When null is used for the `data` option and the `render`\n\t *      option is specified for the column, the whole data source for the\n\t *      row is used for the renderer.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * `{array|object}` The data source for the row\n\t *      * `{string}` The type call data requested - this will be 'set' when\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t *        when gathering data. Note that when `undefined` is given for the\n\t *        type DataTables expects to get the raw data for the object back<\n\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t *    * Return:\n\t *      * The return value from the function is not required when 'set' is\n\t *        the type of call, but otherwise the return is what will be used\n\t *        for the data requested.\n\t *\n\t * Note that `data` is a getter and setter option. If you just require\n\t * formatting of data for output, you will likely want to use `render` which\n\t * is simply a getter and thus simpler to use.\n\t *\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t * name change reflects the flexibility of this property and is consistent\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t * be used by DataTables, as it automatically maps the old name to the new\n\t * if required.\n\t */\n\t\"mData\": null,\n\n\n\t/**\n\t * This property is the rendering partner to `data` and it is suggested that\n\t * when you want to manipulate data for display (including filtering,\n\t * sorting etc) without altering the underlying data for the table, use this\n\t * property. `render` can be considered to be the the read only companion to\n\t * `data` which is read / write (then as such more complex). Like `data`\n\t * this option can be given in a number of different ways to effect its\n\t * behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object.\n\t * * `object` - use different data for the different data types requested by\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t *   of the object is the data type the property refers to and the value can\n\t *   defined using an integer, string or function using the same rules as\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t *   This is the default value to use if you haven't specified a value for\n\t *   the data type requested by DataTables.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * {array|object} The data source for the row (based on `data`)\n\t *      * {string} The type call data requested - this will be 'filter',\n\t *        'display', 'type' or 'sort'.\n\t *      * {array|object} The full data source for the row (not based on\n\t *        `data`)\n\t *    * Return:\n\t *      * The return value from the function is what will be used for the\n\t *        data requested.\n\t */\n\t\"mRender\": null,\n\n\n\t/**\n\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t */\n\t\"sCellType\": \"td\",\n\n\n\t/**\n\t * Class to give to each cell in this column.\n\t */\n\t\"sClass\": \"\",\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t * Generally you shouldn't need this!\n\t */\n\t\"sContentPadding\": \"\",\n\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because `data`\n\t * is set to null, or because the data source itself is null).\n\t */\n\t\"sDefaultContent\": null,\n\n\n\t/**\n\t * This parameter is only used in DataTables' server-side processing. It can\n\t * be exceptionally useful to know what columns are being displayed on the\n\t * client side, and to map these to database fields. When defined, the names\n\t * also allow DataTables to reorder information from the server if it comes\n\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t * client-side, your server-side code does not also need updating).\n\t */\n\t\"sName\": \"\",\n\n\n\t/**\n\t * Defines a data source type for the ordering which can be used to read\n\t * real-time information from the table (updating the internally cached\n\t * version) prior to ordering. This allows ordering to occur on user\n\t * editable elements such as form inputs.\n\t */\n\t\"sSortDataType\": \"std\",\n\n\n\t/**\n\t * The title of this column.\n\t */\n\t\"sTitle\": null,\n\n\n\t/**\n\t * The type allows you to specify how the data for this column will be\n\t * ordered. Four types (string, numeric, date and html (which will strip\n\t * HTML tags before ordering)) are currently available. Note that only date\n\t * formats understood by Javascript's Date() object will be accepted as type\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t * through plug-ins.\n\t */\n\t\"sType\": null,\n\n\n\t/**\n\t * Defining the width of the column, this parameter may take any CSS value\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t * been given a specific width through this interface ensuring that the table\n\t * remains readable.\n\t */\n\t\"sWidth\": null\n};\n\n_fnHungarianMap( DataTable.defaults.column );\n\n\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n */\nDataTable.models.oSettings = {\n\t/**\n\t * Primary features of DataTables and their enablement state.\n\t */\n\t\"oFeatures\": {\n\n\t\t/**\n\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t * optimum table and columns widths (true) or not (false).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bAutoWidth\": null,\n\n\t\t/**\n\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t * needed by a driven page draw. This can give a significant speed\n\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t * difference at all for DOM and server-side processing tables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bDeferRender\": null,\n\n\t\t/**\n\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bFilter\": null,\n\n\t\t/**\n\t\t * Used only for compatiblity with DT1\n\t\t * @deprecated\n\t\t */\n\t\t\"bInfo\": true,\n\n\t\t/**\n\t\t * Used only for compatiblity with DT1\n\t\t * @deprecated\n\t\t */\n\t\t\"bLengthChange\": true,\n\n\t\t/**\n\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t * changing must also be disabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bPaginate\": null,\n\n\t\t/**\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t * user request - typically an Ajax request for server-side processing.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bProcessing\": null,\n\n\t\t/**\n\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t * get all data from the server for every draw - there is no filtering,\n\t\t * sorting or paging done on the client-side.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bServerSide\": null,\n\n\t\t/**\n\t\t * Sorting enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSort\": null,\n\n\t\t/**\n\t\t * Multi-column sorting\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSortMulti\": null,\n\n\t\t/**\n\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t * there is a lot of DOM interaction.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSortClasses\": null,\n\n\t\t/**\n\t\t * State saving enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bStateSave\": null\n\t},\n\n\n\t/**\n\t * Scrolling settings for a table.\n\t */\n\t\"oScroll\": {\n\t\t/**\n\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t * table container down to the height of the table (when true).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bCollapse\": null,\n\n\t\t/**\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t * during table initialisation.\n\t\t */\n\t\t\"iBarWidth\": 0,\n\n\t\t/**\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t * disabled if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sX\": null,\n\n\t\t/**\n\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t * should not need to use this.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @deprecated\n\t\t */\n\t\t\"sXInner\": null,\n\n\t\t/**\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t * if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sY\": null\n\t},\n\n\t/**\n\t * Language information for the table.\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Information callback function. See\n\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t */\n\t\t\"fnInfoCallback\": null\n\t},\n\n\t/**\n\t * Browser support parameters\n\t */\n\t\"oBrowser\": {\n\t\t/**\n\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t * scrolling container - needed for rtl language layout, although not\n\t\t * all browsers move the scrollbar (Safari).\n\t\t */\n\t\t\"bScrollbarLeft\": false,\n\n\t\t/**\n\t\t * Browser scrollbar width\n\t\t */\n\t\t\"barWidth\": 0\n\t},\n\n\n\t\"ajax\": null,\n\n\n\t/**\n\t * Array referencing the nodes which are used for the features. The\n\t * parameters of this object match what is allowed by sDom - i.e.\n\t *   <ul>\n\t *     <li>'l' - Length changing</li>\n\t *     <li>'f' - Filtering input</li>\n\t *     <li>'t' - The table!</li>\n\t *     <li>'i' - Information</li>\n\t *     <li>'p' - Pagination</li>\n\t *     <li>'r' - pRocessing</li>\n\t *   </ul>\n\t */\n\t\"aanFeatures\": [],\n\n\t/**\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t * information.\n\t */\n\t\"aoData\": [],\n\n\t/**\n\t * Array of indexes which are in the current display (after filtering etc)\n\t */\n\t\"aiDisplay\": [],\n\n\t/**\n\t * Array of indexes for display - no filtering\n\t */\n\t\"aiDisplayMaster\": [],\n\n\t/**\n\t * Map of row ids to data indexes\n\t */\n\t\"aIds\": {},\n\n\t/**\n\t * Store information about each column that is in use\n\t */\n\t\"aoColumns\": [],\n\n\t/**\n\t * Store information about the table's header\n\t */\n\t\"aoHeader\": [],\n\n\t/**\n\t * Store information about the table's footer\n\t */\n\t\"aoFooter\": [],\n\n\t/**\n\t * Store the applied global search information in case we want to force a\n\t * research or compare the old search to a new one.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"oPreviousSearch\": {},\n\n\t/**\n\t * Store for named searches\n\t */\n\tsearchFixed: {},\n\n\t/**\n\t * Store the applied search for each column - see\n\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t * filtering information for each column.\n\t */\n\t\"aoPreSearchCols\": [],\n\n\t/**\n\t * Sorting that is applied to the table. Note that the inner arrays are\n\t * used in the following manner:\n\t * <ul>\n\t *   <li>Index 0 - column number</li>\n\t *   <li>Index 1 - current sorting direction</li>\n\t * </ul>\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aaSorting\": null,\n\n\t/**\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t * aaSorting).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aaSortingFixed\": [],\n\n\t/**\n\t * If restoring a table - we should restore its width\n\t */\n\t\"sDestroyWidth\": 0,\n\n\t/**\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t */\n\t\"aoRowCallback\": [],\n\n\t/**\n\t * Callback functions for the header on each draw.\n\t */\n\t\"aoHeaderCallback\": [],\n\n\t/**\n\t * Callback function for the footer on each draw.\n\t */\n\t\"aoFooterCallback\": [],\n\n\t/**\n\t * Array of callback functions for draw callback functions\n\t */\n\t\"aoDrawCallback\": [],\n\n\t/**\n\t * Array of callback functions for row created function\n\t */\n\t\"aoRowCreatedCallback\": [],\n\n\t/**\n\t * Callback functions for just before the table is redrawn. A return of\n\t * false will be used to cancel the draw.\n\t */\n\t\"aoPreDrawCallback\": [],\n\n\t/**\n\t * Callback functions for when the table has been initialised.\n\t */\n\t\"aoInitComplete\": [],\n\n\n\t/**\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t * saving state.\n\t */\n\t\"aoStateSaveParams\": [],\n\n\t/**\n\t * Callbacks for modifying the settings that have been stored for state saving\n\t * prior to using the stored values to restore the state.\n\t */\n\t\"aoStateLoadParams\": [],\n\n\t/**\n\t * Callbacks for operating on the settings object once the saved state has been\n\t * loaded\n\t */\n\t\"aoStateLoaded\": [],\n\n\t/**\n\t * Cache the table ID for quick access\n\t */\n\t\"sTableId\": \"\",\n\n\t/**\n\t * The TABLE node for the main table\n\t */\n\t\"nTable\": null,\n\n\t/**\n\t * Permanent ref to the thead element\n\t */\n\t\"nTHead\": null,\n\n\t/**\n\t * Permanent ref to the tfoot element - if it exists\n\t */\n\t\"nTFoot\": null,\n\n\t/**\n\t * Permanent ref to the tbody element\n\t */\n\t\"nTBody\": null,\n\n\t/**\n\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t */\n\t\"nTableWrapper\": null,\n\n\t/**\n\t * Indicate if all required information has been read in\n\t */\n\t\"bInitialised\": false,\n\n\t/**\n\t * Information about open rows. Each object in the array has the parameters\n\t * 'nTr' and 'nParent'\n\t */\n\t\"aoOpenRows\": [],\n\n\t/**\n\t * Dictate the positioning of DataTables' control elements - see\n\t * {@link DataTable.model.oInit.sDom}.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sDom\": null,\n\n\t/**\n\t * Search delay (in mS)\n\t */\n\t\"searchDelay\": null,\n\n\t/**\n\t * Which type of pagination should be used.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sPaginationType\": \"two_button\",\n\n\t/**\n\t * Number of paging controls on the page. Only used for backwards compatibility\n\t */\n\tpagingControls: 0,\n\n\t/**\n\t * The state duration (for `stateSave`) in seconds.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"iStateDuration\": 0,\n\n\t/**\n\t * Array of callback functions for state saving. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the JSON string to save that has been thus far created. Returns\n\t *       a JSON string to be inserted into a json object\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t */\n\t\"aoStateSave\": [],\n\n\t/**\n\t * Array of callback functions for state loading. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the object stored. May return false to cancel state loading</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t */\n\t\"aoStateLoad\": [],\n\n\t/**\n\t * State that was saved. Useful for back reference\n\t */\n\t\"oSavedState\": null,\n\n\t/**\n\t * State that was loaded. Useful for back reference\n\t */\n\t\"oLoadedState\": null,\n\n\t/**\n\t * Note if draw should be blocked while getting data\n\t */\n\t\"bAjaxDataGet\": true,\n\n\t/**\n\t * The last jQuery XHR object that was used for server-side data gathering.\n\t * This can be used for working with the XHR information in one of the\n\t * callbacks\n\t */\n\t\"jqXHR\": null,\n\n\t/**\n\t * JSON returned from the server in the last Ajax request\n\t */\n\t\"json\": undefined,\n\n\t/**\n\t * Data submitted as part of the last Ajax request\n\t */\n\t\"oAjaxData\": undefined,\n\n\t/**\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t * required).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sServerMethod\": null,\n\n\t/**\n\t * Format numbers for display.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"fnFormatNumber\": null,\n\n\t/**\n\t * List of options that can be used for the user selectable length menu.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aLengthMenu\": null,\n\n\t/**\n\t * Counter for the draws that the table does. Also used as a tracker for\n\t * server-side processing\n\t */\n\t\"iDraw\": 0,\n\n\t/**\n\t * Indicate if a redraw is being done - useful for Ajax\n\t */\n\t\"bDrawing\": false,\n\n\t/**\n\t * Draw index (iDraw) of the last error when parsing the returned data\n\t */\n\t\"iDrawError\": -1,\n\n\t/**\n\t * Paging display length\n\t */\n\t\"_iDisplayLength\": 10,\n\n\t/**\n\t * Paging start point - aiDisplay index\n\t */\n\t\"_iDisplayStart\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the result set\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t */\n\t\"_iRecordsTotal\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the current display set\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t */\n\t\"_iRecordsDisplay\": 0,\n\n\t/**\n\t * The classes to use for the table\n\t */\n\t\"oClasses\": {},\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @deprecated\n\t */\n\t\"bFiltered\": false,\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @deprecated\n\t */\n\t\"bSorted\": false,\n\n\t/**\n\t * Indicate that if multiple rows are in the header and there is more than\n\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t * should be used for sorting / title by DataTables.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"bSortCellsTop\": null,\n\n\t/**\n\t * Initialisation object that is used for the table\n\t */\n\t\"oInit\": null,\n\n\t/**\n\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t * destroy so they can clean up markup and events.\n\t */\n\t\"aoDestroyCallback\": [],\n\n\n\t/**\n\t * Get the number of records in the current record set, before filtering\n\t */\n\t\"fnRecordsTotal\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsTotal * 1 :\n\t\t\tthis.aiDisplayMaster.length;\n\t},\n\n\t/**\n\t * Get the number of records in the current record set, after filtering\n\t */\n\t\"fnRecordsDisplay\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\tthis.aiDisplay.length;\n\t},\n\n\t/**\n\t * Get the display end point - aiDisplay index\n\t */\n\t\"fnDisplayEnd\": function ()\n\t{\n\t\tvar\n\t\t\tlen      = this._iDisplayLength,\n\t\t\tstart    = this._iDisplayStart,\n\t\t\tcalc     = start + len,\n\t\t\trecords  = this.aiDisplay.length,\n\t\t\tfeatures = this.oFeatures,\n\t\t\tpaginate = features.bPaginate;\n\n\t\tif ( features.bServerSide ) {\n\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\tstart + records :\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t}\n\t\telse {\n\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\trecords :\n\t\t\t\tcalc;\n\t\t}\n\t},\n\n\t/**\n\t * The DataTables object for this table\n\t */\n\t\"oInstance\": null,\n\n\t/**\n\t * Unique identifier for each instance of the DataTables object. If there\n\t * is an ID on the table node, then it takes that value, otherwise an\n\t * incrementing internal counter is used.\n\t */\n\t\"sInstance\": null,\n\n\t/**\n\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t * keyboard navigation of the table and its controls.\n\t */\n\t\"iTabIndex\": 0,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollHead\": null,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollFoot\": null,\n\n\t/**\n\t * Last applied sort\n\t */\n\t\"aLastSort\": [],\n\n\t/**\n\t * Stored plug-in instances\n\t */\n\t\"oPlugins\": {},\n\n\t/**\n\t * Function used to get a row's id from the row's data\n\t */\n\t\"rowIdFn\": null,\n\n\t/**\n\t * Data location where to store a row's id\n\t */\n\t\"rowId\": null,\n\n\tcaption: '',\n\n\tcaptionNode: null,\n\n\tcolgroup: null\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n\t/**\n\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t * defined here so other extensions can define buttons regardless of load\n\t * order. It is _not_ used by DataTables core.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tbuttons: {},\n\n\n\t/**\n\t * Element class names\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tclasses: {},\n\n\n\t/**\n\t * DataTables build type (expanded by the download builder)\n\t *\n\t *  @type string\n\t */\n\tbuilder: \"-source-\",\n\n\n\t/**\n\t * Error reporting.\n\t * \n\t * How should DataTables report an error. Can take the value 'alert',\n\t * 'throw', 'none' or a function.\n\t *\n\t *  @type string|function\n\t *  @default alert\n\t */\n\terrMode: \"alert\",\n\n\n\t/**\n\t * Legacy so v1 plug-ins don't throw js errors on load\n\t */\n\tfeature: [],\n\n\t/**\n\t * Feature plug-ins.\n\t * \n\t * This is an object of callbacks which provide the features for DataTables\n\t * to be initialised via the `layout` option.\n\t */\n\tfeatures: {},\n\n\n\t/**\n\t * Row searching.\n\t * \n\t * This method of searching is complimentary to the default type based\n\t * searching, and a lot more comprehensive as it allows you complete control\n\t * over the searching logic. Each element in this array is a function\n\t * (parameters described below) that is called for every row in the table,\n\t * and your logic decides if it should be included in the searching data set\n\t * or not.\n\t *\n\t * Searching functions have the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t *    original format that was passed in as the data source, or an array\n\t *    from a DOM data source\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t *\n\t * And the following return is expected:\n\t *\n\t * * {boolean} Include the row in the searched result set (true) or not\n\t *   (false)\n\t *\n\t * Note that as with the main search ability in DataTables, technically this\n\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t * naming we call it searching here.\n\t *\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @example\n\t *    // The following example shows custom search being applied to the\n\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t *    // from the end-user, matching the data in a certain range.\n\t *    $.fn.dataTable.ext.search.push(\n\t *      function( settings, data, dataIndex ) {\n\t *        var min = document.getElementById('min').value * 1;\n\t *        var max = document.getElementById('max').value * 1;\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t *\n\t *        if ( min == \"\" && max == \"\" ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min == \"\" && version < max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && \"\" == max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && version < max ) {\n\t *          return true;\n\t *        }\n\t *        return false;\n\t *      }\n\t *    );\n\t */\n\tsearch: [],\n\n\n\t/**\n\t * Selector extensions\n\t *\n\t * The `selector` option can be used to extend the options available for the\n\t * selector modifier options (`selector-modifier` object data type) that\n\t * each of the three built in selector types offer (row, column and cell +\n\t * their plural counterparts). For example the Select extension uses this\n\t * mechanism to provide an option to select only rows, columns and cells\n\t * that have been marked as selected by the end user (`{selected: true}`),\n\t * which can be used in conjunction with the existing built in selector\n\t * options.\n\t *\n\t * Each property is an array to which functions can be pushed. The functions\n\t * take three attributes:\n\t *\n\t * * Settings object for the host table\n\t * * Options object (`selector-modifier` object type)\n\t * * Array of selected item indexes\n\t *\n\t * The return is an array of the resulting item indexes after the custom\n\t * selector has been applied.\n\t *\n\t *  @type object\n\t */\n\tselector: {\n\t\tcell: [],\n\t\tcolumn: [],\n\t\trow: []\n\t},\n\n\n\t/**\n\t * Legacy configuration options. Enable and disable legacy options that\n\t * are available in DataTables.\n\t *\n\t *  @type object\n\t */\n\tlegacy: {\n\t\t/**\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t * requests\n\t\t *\n\t\t *  @type boolean\n\t\t *  @default null\n\t\t */\n\t\tajax: null\n\t},\n\n\n\t/**\n\t * Pagination plug-in methods.\n\t * \n\t * Each entry in this object is a function and defines which buttons should\n\t * be shown by the pagination rendering method that is used for the table:\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t * buttons are displayed in the document, while the functions here tell it\n\t * what buttons to display. This is done by returning an array of button\n\t * descriptions (what each button will do).\n\t *\n\t * Pagination types (the four built in options and any additional plug-in\n\t * options defined here) can be used through the `paginationType`\n\t * initialisation parameter.\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{int} page` The current page index\n\t * 2. `{int} pages` The number of pages in the table\n\t *\n\t * Each function is expected to return an array where each element of the\n\t * array can be one of:\n\t *\n\t * * `first` - Jump to first page when activated\n\t * * `last` - Jump to last page when activated\n\t * * `previous` - Show previous page when activated\n\t * * `next` - Show next page when activated\n\t * * `{int}` - Show page of the index given\n\t * * `{array}` - A nested array containing the above elements to add a\n\t *   containing 'DIV' element (might be useful for styling).\n\t *\n\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t * an object with two functions would be defined for each plug-in. That\n\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t * compatibility, but this option of use is now decremented and no longer\n\t * documented in DataTables 1.10+.\n\t *\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    // Show previous, next and current page buttons only\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t *      return [ 'previous', page, 'next' ];\n\t *    };\n\t */\n\tpager: {},\n\n\n\trenderer: {\n\t\tpageButton: {},\n\t\theader: {}\n\t},\n\n\n\t/**\n\t * Ordering plug-ins - custom data source\n\t * \n\t * The extension options for ordering of data available here is complimentary\n\t * to the default type based ordering that DataTables typically uses. It\n\t * allows much greater control over the the data that is being used to\n\t * order a column, but is necessarily therefore more complex.\n\t * \n\t * This type of ordering is useful if you want to do ordering based on data\n\t * live from the DOM (for example the contents of an 'input' element) rather\n\t * than just the static string that DataTables knows of.\n\t * \n\t * The way these plug-ins work is that you create an array of the values you\n\t * wish to be ordering for the column in question and then return that\n\t * array. The data in the array much be in the index order of the rows in\n\t * the table (not the currently ordering order!). Which order data gathering\n\t * function is run here depends on the `dt-init columns.orderDataType`\n\t * parameter that is used for the column (if any).\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{int}` Target column index\n\t *\n\t * Each function is expected to return an array:\n\t *\n\t * * `{array}` Data for the column to be ordering upon\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    // Ordering using `input` node values\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t *    {\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t *        return $('input', td).val();\n\t *      } );\n\t *    }\n\t */\n\torder: {},\n\n\n\t/**\n\t * Type based plug-ins.\n\t *\n\t * Each column in DataTables has a type assigned to it, either by automatic\n\t * detection or by direct assignment using the `type` option for the column.\n\t * The type of a column will effect how it is ordering and search (plug-ins\n\t * can also make use of the column type if required).\n\t *\n\t * @namespace\n\t */\n\ttype: {\n\t\t/**\n\t\t * Automatic column class assignment\n\t\t */\n\t\tclassName: {},\n\n\t\t/**\n\t\t * Type detection functions.\n\t\t *\n\t\t * The functions defined in this object are used to automatically detect\n\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t * when complex data is in the table.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be analysed\n\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t     *     perform context specific type detection - for example detection\n\t     *     based on language settings such as using a comma for a decimal\n\t     *     place. Generally speaking the options from the settings will not\n\t     *     be required\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t *   pass it on to the other type detection functions.\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Currency type detection plug-in:\n\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t *      function ( data, settings ) {\n\t\t *        // Check the numeric part\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t *          return null;\n\t\t *        }\n\t\t *\n\t\t *        // Check prefixed by currency\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t *          return 'currency';\n\t\t *        }\n\t\t *        return null;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tdetect: [],\n\n\t\t/**\n\t\t * Automatic renderer assignment\n\t\t */\n\t\trender: {},\n\n\n\t\t/**\n\t\t * Type based search formatting.\n\t\t *\n\t\t * The type based searching functions can be used to pre-format the\n\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t *\n\t\t * Note that is a search is not defined for a column of a given type,\n\t\t * no search formatting will be performed.\n\t\t * \n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t * or a type detection plug-in), you will typically be using this for\n\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t * the format that should be searched upon. This is done by adding\n\t\t * functions this object with a parameter name which matches the sType\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t * for searching data.\n\t\t *\n\t\t * The functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t *    }\n\t\t */\n\t\tsearch: {},\n\n\n\t\t/**\n\t\t * Type based ordering.\n\t\t *\n\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t * is defined by the functions available in this object.\n\t\t *\n\t\t * Each ordering option can be described by three properties added to\n\t\t * this object:\n\t\t *\n\t\t * * `{type}-pre` - Pre-formatting function\n\t\t * * `{type}-asc` - Ascending order function\n\t\t * * `{type}-desc` - Descending order function\n\t\t *\n\t\t * All three can be used together, only `{type}-pre` or only\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t * implementation in terms of speed, although the others are provided\n\t\t * for compatibility with existing Javascript sort functions.\n\t\t *\n\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t *\n\t\t * And return:\n\t\t *\n\t\t * * `{*}` Data to be sorted upon\n\t\t *\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t * functions, taking two parameters:\n\t\t *\n\t     *  1. `{*}` Data to compare to the second parameter\n\t     *  2. `{*}` Data to compare to the first parameter\n\t\t *\n\t\t * And returning:\n\t\t *\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t *   parameter.\n\t\t * \n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t *      \"string-pre\": function(x) {\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t *        return parseFloat( a );\n\t\t *      }\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t *      \"string-case-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-case-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\torder: {}\n\t},\n\n\t/**\n\t * Unique DataTables instance counter\n\t *\n\t * @type int\n\t * @private\n\t */\n\t_unique: 0,\n\n\n\t//\n\t// Depreciated\n\t// The following properties are retained for backwards compatibility only.\n\t// The should not be used in new projects and will be removed in a future\n\t// version\n\t//\n\n\t/**\n\t * Version check function.\n\t *  @type function\n\t *  @depreciated Since 1.10\n\t */\n\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t/**\n\t * Index for what 'this' index API functions should use\n\t *  @type int\n\t *  @deprecated Since v1.10\n\t */\n\tiApiIndex: 0,\n\n\n\t/**\n\t * Software version\n\t *  @type string\n\t *  @deprecated Since v1.10\n\t */\n\tsVersion: DataTable.version\n};\n\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend( _ext, {\n\tafnFiltering: _ext.search,\n\taTypes:       _ext.type.detect,\n\tofnSearch:    _ext.type.search,\n\toSort:        _ext.type.order,\n\tafnSortData:  _ext.order,\n\taoFeatures:   _ext.feature,\n\toStdClasses:  _ext.classes,\n\toPagination:  _ext.pager\n} );\n\n\n$.extend( DataTable.ext.classes, {\n\tcontainer: 'dt-container',\n\tempty: {\n\t\trow: 'dt-empty'\n\t},\n\tinfo: {\n\t\tcontainer: 'dt-info'\n\t},\n\tlength: {\n\t\tcontainer: 'dt-length',\n\t\tselect: 'dt-input'\n\t},\n\torder: {\n\t\tcanAsc: 'dt-orderable-asc',\n\t\tcanDesc: 'dt-orderable-desc',\n\t\tisAsc: 'dt-ordering-asc',\n\t\tisDesc: 'dt-ordering-desc',\n\t\tnone: 'dt-orderable-none',\n\t\tposition: 'sorting_'\n\t},\n\tprocessing: {\n\t\tcontainer: 'dt-processing'\n\t},\n\tscrolling: {\n\t\tbody: 'dt-scroll-body',\n\t\tcontainer: 'dt-scroll',\n\t\tfooter: {\n\t\t\tself: 'dt-scroll-foot',\n\t\t\tinner: 'dt-scroll-footInner'\n\t\t},\n\t\theader: {\n\t\t\tself: 'dt-scroll-head',\n\t\t\tinner: 'dt-scroll-headInner'\n\t\t}\n\t},\n\tsearch: {\n\t\tcontainer: 'dt-search',\n\t\tinput: 'dt-input'\n\t},\n\ttable: 'dataTable',\t\n\ttbody: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tthead: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\ttfoot: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tpaging: {\n\t\tactive: 'current',\n\t\tbutton: 'dt-paging-button',\n\t\tcontainer: 'dt-paging',\n\t\tdisabled: 'disabled'\n\t}\n} );\n\n\nvar extPagination = DataTable.ext.pager;\n\n// Paging buttons configuration\n$.extend( extPagination, {\n\tsimple: function () {\n\t\treturn [ 'previous', 'next' ];\n\t},\n\n\tfull: function () {\n\t\treturn [  'first', 'previous', 'next', 'last' ];\n\t},\n\n\tnumbers: function () {\n\t\treturn [ 'numbers' ];\n\t},\n\n\tsimple_numbers: function () {\n\t\treturn [ 'previous', 'numbers', 'next' ];\n\t},\n\n\tfull_numbers: function () {\n\t\treturn [ 'first', 'previous', 'numbers', 'next', 'last' ];\n\t},\n\t\n\tfirst_last: function () {\n\t\treturn ['first', 'last'];\n\t},\n\t\n\tfirst_last_numbers: function () {\n\t\treturn ['first', 'numbers', 'last'];\n\t},\n\n\t// For testing and plug-ins to use\n\t_numbers: _pagingNumbers,\n\n\t// Number of number buttons - legacy, use `numbers` option for paging feature\n\tnumbers_length: 7\n} );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tpagingButton: {\n\t\t_: function (settings, buttonType, content, active, disabled) {\n\t\t\tvar classes = settings.oClasses.paging;\n\t\t\tvar btnClasses = [classes.button];\n\t\t\tvar btn;\n\n\t\t\tif (active) {\n\t\t\t\tbtnClasses.push(classes.active);\n\t\t\t}\n\n\t\t\tif (disabled) {\n\t\t\t\tbtnClasses.push(classes.disabled)\n\t\t\t}\n\n\t\t\tif (buttonType === 'ellipsis') {\n\t\t\t\tbtn = $('<span class=\"ellipsis\"></span>').html(content)[0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtn = $('<button>', {\n\t\t\t\t\tclass: btnClasses.join(' '),\n\t\t\t\t\trole: 'link',\n\t\t\t\t\ttype: 'button'\n\t\t\t\t}).html(content);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdisplay: btn,\n\t\t\t\tclicker: btn\n\t\t\t}\n\t\t}\n\t},\n\n\tpagingContainer: {\n\t\t_: function (settings, buttons) {\n\t\t\t// No wrapping element - just append directly to the host\n\t\t\treturn buttons;\n\t\t}\n\t}\n} );\n\n// Common function to remove new lines, strip HTML and diacritic control\nvar _filterString = function (stripHtml, diacritics) {\n\treturn function (str) {\n\t\tif (_empty(str) || typeof str !== 'string') {\n\t\t\treturn str;\n\t\t}\n\n\t\tstr = str.replace( _re_new_lines, \" \" );\n\n\t\tif (stripHtml) {\n\t\t\tstr = _stripHtml(str);\n\t\t}\n\n\t\tif (diacritics) {\n\t\t\tstr = _normalize(str, true);\n\t\t}\n\n\t\treturn str;\n\t};\n}\n\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\nfunction __mldFnName(name) {\n\treturn name.replace(/[\\W]/g, '_')\n}\n\n// Common logic for moment, luxon or a date action\nfunction __mld( dt, momentFn, luxonFn, dateFn, arg1 ) {\n\tif (window.moment) {\n\t\treturn dt[momentFn]( arg1 );\n\t}\n\telse if (window.luxon) {\n\t\treturn dt[luxonFn]( arg1 );\n\t}\n\t\n\treturn dateFn ? dt[dateFn]( arg1 ) : dt;\n}\n\n\nvar __mlWarning = false;\nfunction __mldObj (d, format, locale) {\n\tvar dt;\n\n\tif (window.moment) {\n\t\tdt = window.moment.utc( d, format, locale, true );\n\n\t\tif (! dt.isValid()) {\n\t\t\treturn null;\n\t\t}\n\t}\n\telse if (window.luxon) {\n\t\tdt = format && typeof d === 'string'\n\t\t\t? window.luxon.DateTime.fromFormat( d, format )\n\t\t\t: window.luxon.DateTime.fromISO( d );\n\n\t\tif (! dt.isValid) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdt.setLocale(locale);\n\t}\n\telse if (! format) {\n\t\t// No format given, must be ISO\n\t\tdt = new Date(d);\n\t}\n\telse {\n\t\tif (! __mlWarning) {\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t}\n\n\t\t__mlWarning = true;\n\t}\n\n\treturn dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper (localeString) {\n\treturn function ( from, to, locale, def ) {\n\t\t// Luxon and Moment support\n\t\t// Argument shifting\n\t\tif ( arguments.length === 0 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = null; // means toLocaleString\n\t\t\tfrom = null; // means iso8601\n\t\t}\n\t\telse if ( arguments.length === 1 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\t\telse if ( arguments.length === 2 ) {\n\t\t\tlocale = to;\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\n\t\tvar typeName = 'datetime' + (to ? '-' + __mldFnName(to) : '');\n\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\tif (! DataTable.ext.type.order[typeName]) {\n\t\t\tDataTable.type(typeName, {\n\t\t\t\tdetect: function (d) {\n\t\t\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t\t},\n\t\t\t\torder: {\n\t\t\t\t\tpre: function (d) {\n\t\t\t\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\t\t\t\treturn d.valueOf();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tclassName: 'dt-right'\n\t\t\t});\n\t\t}\n\t\n\t\treturn function ( d, type ) {\n\t\t\t// Allow for a default value\n\t\t\tif (d === null || d === undefined) {\n\t\t\t\tif (def === '--now') {\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t// UTC\n\t\t\t\t\tvar local = new Date();\n\t\t\t\t\td = new Date( Date.UTC(\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type === 'type') {\n\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\treturn typeName;\n\t\t\t}\n\n\t\t\tif (d === '') {\n\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t? ''\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t}\n\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tvar dt = __mldObj(d, from, locale);\n\n\t\t\tif (dt === null) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tif (type === 'sort') {\n\t\t\t\treturn dt;\n\t\t\t}\n\t\t\t\n\t\t\tvar formatted = to === null\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n\t\t\t// XSS protection\n\t\t\treturn type === 'display' ?\n\t\t\t\t_escapeHtml( formatted ) :\n\t\t\t\tformatted;\n\t\t};\n\t}\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\n\nif (window.Intl !== undefined) {\n\ttry {\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\t\n\t\tfor (var i=0 ; i<num.length ; i++) {\n\t\t\tif (num[i].type === 'group') {\n\t\t\t\t__thousands = num[i].value;\n\t\t\t}\n\t\t\telse if (num[i].type === 'decimal') {\n\t\t\t\t__decimal = num[i].value;\n\t\t\t}\n\t\t}\n\t}\n\tcatch (e) {\n\t\t// noop\n\t}\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function ( format, locale ) {\n\tvar typeName = 'datetime-detect-' + __mldFnName(format);\n\n\tif (! locale) {\n\t\tlocale = 'en';\n\t}\n\n\tif (! DataTable.ext.type.order[typeName]) {\n\t\tDataTable.type(typeName, {\n\t\t\tdetect: function (d) {\n\t\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\t\treturn d === '' || dt ? typeName : false;\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tpre: function (d) {\n\t\t\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t\t\t}\n\t\t\t},\n\t\t\tclassName: 'dt-right'\n\t\t});\n\t}\n}\n\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `moment` - Uses the MomentJS library to convert from a given format into another.\n * This renderer has three overloads:\n *   * 1 parameter:\n *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)\n *   * 2 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to. Assumes `en` locale\n *   * 3 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to\n *     * `string` - Locale\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\nDataTable.render = {\n\tdate: __mlHelper('toLocaleDateString'),\n\tdatetime: __mlHelper('toLocaleString'),\n\ttime: __mlHelper('toLocaleTimeString'),\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t// Auto locale detection\n\t\tif (thousands === null || thousands === undefined) {\n\t\t\tthousands = __thousands;\n\t\t}\n\n\t\tif (decimal === null || decimal === undefined) {\n\t\t\tdecimal = __decimal;\n\t\t}\n\n\t\treturn {\n\t\t\tdisplay: function ( d ) {\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\tvar flo = parseFloat( d );\n\t\t\t\tvar abs = Math.abs(flo);\n\n\t\t\t\t// Scientific notation for large and small numbers\n\t\t\t\tif (abs >= 100000000000 || (abs < 0.0001 && abs !== 0) ) {\n\t\t\t\t\tvar exp = flo.toExponential(precision).split(/e\\+?/);\n\t\t\t\t\treturn exp[0] + ' x 10<sup>' + exp[1] + '</sup>';\n\t\t\t\t}\n\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t// be a number after all)\n\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\treturn _escapeHtml( d );\n\t\t\t\t}\n\n\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\td = Math.abs( flo );\n\n\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t'';\n\n\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\tnegative = '';\n\t\t\t\t}\n\n\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t) +\n\t\t\t\t\tfloatPart +\n\t\t\t\t\t(postfix||'');\n\t\t\t}\n\t\t};\n\t},\n\n\ttext: function () {\n\t\treturn {\n\t\t\tdisplay: _escapeHtml,\n\t\t\tfilter: _escapeHtml\n\t\t};\n\t}\n};\n\n\nvar _extTypes = DataTable.ext.type;\n\n// Get / set type\nDataTable.type = function (name, prop, val) {\n\tif (! prop) {\n\t\treturn {\n\t\t\tclassName: _extTypes.className[name],\n\t\t\tdetect: _extTypes.detect.find(function (fn) {\n\t\t\t\treturn fn.name === name;\n\t\t\t}),\n\t\t\torder: {\n\t\t\t\tpre: _extTypes.order[name + '-pre'],\n\t\t\t\tasc: _extTypes.order[name + '-asc'],\n\t\t\t\tdesc: _extTypes.order[name + '-desc']\n\t\t\t},\n\t\t\trender: _extTypes.render[name],\n\t\t\tsearch: _extTypes.search[name]\n\t\t};\n\t}\n\n\tvar setProp = function(prop, propVal) {\n\t\t_extTypes[prop][name] = propVal;\n\t};\n\tvar setDetect = function (fn) {\n\t\t// Wrap to allow the function to return `true` rather than\n\t\t// specifying the type name.\n\t\tvar cb = function (d, s) {\n\t\t\tvar ret = fn(d, s);\n\n\t\t\treturn ret === true\n\t\t\t\t? name\n\t\t\t\t: ret;\n\t\t};\n\t\tObject.defineProperty(cb, \"name\", {value: name});\n\n\t\tvar idx = _extTypes.detect.findIndex(function (fn) {\n\t\t\treturn fn.name === name;\n\t\t});\n\n\t\tif (idx === -1) {\n\t\t\t_extTypes.detect.unshift(cb);\n\t\t}\n\t\telse {\n\t\t\t_extTypes.detect.splice(idx, 1, cb);\n\t\t}\n\t};\n\tvar setOrder = function (obj) {\n\t\t_extTypes.order[name + '-pre'] = obj.pre; // can be undefined\n\t\t_extTypes.order[name + '-asc'] = obj.asc; // can be undefined\n\t\t_extTypes.order[name + '-desc'] = obj.desc; // can be undefined\n\t};\n\n\t// prop is optional\n\tif (! val) {\n\t\tval = prop;\n\t\tprop = null;\n\t}\n\n\tif (prop === 'className') {\n\t\tsetProp('className', val);\n\t}\n\telse if (prop === 'detect') {\n\t\tsetDetect(val);\n\t}\n\telse if (prop === 'order') {\n\t\tsetOrder(val);\n\t}\n\telse if (prop === 'render') {\n\t\tsetProp('render', val);\n\t}\n\telse if (prop === 'search') {\n\t\tsetProp('search', val);\n\t}\n\telse if (! prop) {\n\t\tif (val.className) {\n\t\t\tsetProp('className', val.className);\n\t\t}\n\n\t\tif (val.detect !== undefined) {\n\t\t\tsetDetect(val.detect);\n\t\t}\n\n\t\tif (val.order) {\n\t\t\tsetOrder(val.order);\n\t\t}\n\n\t\tif (val.render !== undefined) {\n\t\t\tsetProp('render', val.render);\n\t\t}\n\n\t\tif (val.search !== undefined) {\n\t\t\tsetProp('search', val.search);\n\t\t}\n\t}\n}\n\n// Get a list of types\nDataTable.types = function () {\n\treturn _extTypes.detect.map(function (fn) {\n\t\treturn fn.name;\n\t});\n};\n\n//\n// Built in data types\n//\n\nDataTable.type('string', {\n\tdetect: function () {\n\t\treturn 'string';\n\t},\n\torder: {\n\t\tpre: function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t}\n\t},\n\tsearch: _filterString(false, true)\n});\n\n\nDataTable.type('html', {\n\tdetect: function ( d ) {\n\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?\n\t\t\t'html' : null;\n\t},\n\torder: {\n\t\tpre: function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\t_stripHtml(a).trim().toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('date', {\n\tclassName: 'dt-type-date',\n\tdetect: function ( d )\n\t{\n\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t// plug-in for anything other than ISO8601 style strings\n\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\treturn null;\n\t\t}\n\t\tvar parsed = Date.parse(d);\n\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;\n\t},\n\torder: {\n\t\tpre: function ( d ) {\n\t\t\tvar ts = Date.parse( d );\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t}\n\t}\n});\n\n\nDataTable.type('html-num-fmt', {\n\tclassName: 'dt-type-numeric',\n\tdetect: function ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _htmlNumeric( d, decimal, true ) ? 'html-num-fmt' : null;\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_html, _re_formatted_numeric );\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('html-num', {\n\tclassName: 'dt-type-numeric',\n\tdetect: function ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _htmlNumeric( d, decimal ) ? 'html-num' : null;\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_html );\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('num-fmt', {\n\tclassName: 'dt-type-numeric',\n\tdetect: function ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _isNumber( d, decimal, true ) ? 'num-fmt' : null;\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_formatted_numeric );\n\t\t}\n\t}\n});\n\n\nDataTable.type('num', {\n\tclassName: 'dt-type-numeric',\n\tdetect: function ( d, settings )\n\t{\n\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\treturn _isNumber( d, decimal ) ? 'num' : null;\n\t},\n\torder: {\n\t\tpre: function (d, s) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp );\n\t\t}\n\t}\n});\n\n\n\n\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\tif ( d !== 0 && (!d || d === '-') ) {\n\t\treturn -Infinity;\n\t}\n\t\n\tvar type = typeof d;\n\n\tif (type === 'number' || type === 'bigint') {\n\t\treturn d;\n\t}\n\n\t// If a decimal place other than `.` is used, it needs to be given to the\n\t// function so we can detect it and replace with a `.` which is the only\n\t// decimal place Javascript recognises - it is not locale aware.\n\tif ( decimalPlace ) {\n\t\td = _numToDecimal( d, decimalPlace );\n\t}\n\n\tif ( d.replace ) {\n\t\tif ( re1 ) {\n\t\t\td = d.replace( re1, '' );\n\t\t}\n\n\t\tif ( re2 ) {\n\t\t\td = d.replace( re2, '' );\n\t\t}\n\t}\n\n\treturn d * 1;\n};\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tfooter: {\n\t\t_: function ( settings, cell, classes ) {\n\t\t\tcell.addClass(classes.tfoot.cell);\n\t\t}\n\t},\n\n\theader: {\n\t\t_: function ( settings, cell, classes ) {\n\t\t\tcell.addClass(classes.thead.cell);\n\n\t\t\tif (! settings.oFeatures.bSort) {\n\t\t\t\tcell.addClass(classes.order.none);\n\t\t\t}\n\n\t\t\tvar legacyTop = settings.bSortCellsTop;\n\t\t\tvar headerRows = cell.closest('thead').find('tr');\n\t\t\tvar rowIdx = cell.parent().index();\n\n\t\t\t// Conditions to not apply the ordering icons\n\t\t\tif (\n\t\t\t\t// Cells and rows which have the attribute to disable the icons\n\t\t\t\tcell.attr('data-dt-order') === 'disable' ||\n\t\t\t\tcell.parent().attr('data-dt-order') === 'disable' ||\n\n\t\t\t\t// Legacy support for `orderCellsTop`. If it is set, then cells\n\t\t\t\t// which are not in the top or bottom row of the header (depending\n\t\t\t\t// on the value) do not get the sorting classes applied to them\n\t\t\t\t(legacyTop === true && rowIdx !== 0) ||\n\t\t\t\t(legacyTop === false && rowIdx !== headerRows.length - 1)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// No additional mark-up required\n\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t// listening for\n\t\t\t$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting ) {\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t}\n\n\t\t\t\tvar orderClasses = classes.order;\n\t\t\t\tvar columns = ctx.api.columns( cell );\n\t\t\t\tvar col = settings.aoColumns[columns.flatten()[0]];\n\t\t\t\tvar orderable = columns.orderable().includes(true);\n\t\t\t\tvar ariaType = '';\n\t\t\t\tvar indexes = columns.indexes();\n\t\t\t\tvar sortDirs = columns.orderable(true).flatten();\n\t\t\t\tvar orderedColumns = sorting.map( function (val) {\n\t\t\t\t\treturn val.col;\n\t\t\t\t} ).join(',');\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\torderClasses.isAsc +' '+\n\t\t\t\t\t\torderClasses.isDesc\n\t\t\t\t\t)\n\t\t\t\t\t.toggleClass( orderClasses.none, ! orderable )\n\t\t\t\t\t.toggleClass( orderClasses.canAsc, orderable && sortDirs.includes('asc') )\n\t\t\t\t\t.toggleClass( orderClasses.canDesc, orderable && sortDirs.includes('desc') );\n\t\t\t\t\n\t\t\t\tvar sortIdx = orderedColumns.indexOf( indexes.toArray().join(',') );\n\n\t\t\t\tif ( sortIdx !== -1 ) {\n\t\t\t\t\t// Get the ordering direction for the columns under this cell\n\t\t\t\t\t// Note that it is possible for a cell to be asc and desc sorting\n\t\t\t\t\t// (column spanning cells)\n\t\t\t\t\tvar orderDirs = columns.order();\n\n\t\t\t\t\tcell.addClass(\n\t\t\t\t\t\torderDirs.includes('asc') ? orderClasses.isAsc : '' +\n\t\t\t\t\t\torderDirs.includes('desc') ? orderClasses.isDesc : ''\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// The ARIA spec says that only one column should be marked with aria-sort\n\t\t\t\tif ( sortIdx === 0 && orderedColumns.length === indexes.count() ) {\n\t\t\t\t\tvar firstSort = sorting[0];\n\t\t\t\t\tvar sortOrder = col.asSorting;\n\n\t\t\t\t\tcell.attr('aria-sort', firstSort.dir === 'asc' ? 'ascending' : 'descending');\n\n\t\t\t\t\t// Determine if the next click will remove sorting or change the sort\n\t\t\t\t\tariaType = ! sortOrder[firstSort.index + 1] ? 'Remove' : 'Reverse';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcell.removeAttr('aria-sort');\n\t\t\t\t}\n\n\t\t\t\tcell.attr('aria-label', orderable\n\t\t\t\t\t? col.ariaTitle + ctx.api.i18n('oAria.orderable' + ariaType)\n\t\t\t\t\t: col.ariaTitle\n\t\t\t\t);\n\n\t\t\t\tif (orderable) {\n\t\t\t\t\tcell.find('.dt-column-title').attr('role', 'button');\n\t\t\t\t\tcell.attr('tabindex', 0)\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t},\n\n\tlayout: {\n\t\t_: function ( settings, container, items ) {\n\t\t\tvar row = $('<div/>')\n\t\t\t\t.addClass('dt-layout-row')\n\t\t\t\t.appendTo( container );\n\n\t\t\t$.each( items, function (key, val) {\n\t\t\t\tvar klass = ! val.table ?\n\t\t\t\t\t'dt-'+key+' ' :\n\t\t\t\t\t'';\n\n\t\t\t\tif (val.table) {\n\t\t\t\t\trow.addClass('dt-layout-table');\n\t\t\t\t}\n\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.attr({\n\t\t\t\t\t\tid: val.id || null,\n\t\t\t\t\t\t\"class\": 'dt-layout-cell '+klass+(val.className || '')\n\t\t\t\t\t})\n\t\t\t\t\t.append( val.contents )\n\t\t\t\t\t.appendTo( row );\n\t\t\t} );\n\t\t}\n\t}\n} );\n\n\nDataTable.feature = {};\n\n// Third parameter is internal only!\nDataTable.feature.register = function ( name, cb, legacy ) {\n\tDataTable.ext.features[ name ] = cb;\n\n\tif (legacy) {\n\t\t_ext.feature.push({\n\t\t\tcFeature: legacy,\n\t\t\tfnInit: cb\n\t\t});\n\t}\n};\n\nDataTable.feature.register( 'info', function ( settings, opts ) {\n\t// For compatibility with the legacy `info` top level option\n\tif (! settings.oFeatures.bInfo) {\n\t\treturn null;\n\t}\n\n\tvar\n\t\tlang  = settings.oLanguage,\n\t\ttid = settings.sTableId,\n\t\tn = $('<div/>', {\n\t\t\t'class': settings.oClasses.info.container,\n\t\t} );\n\n\topts = $.extend({\n\t\tcallback: lang.fnInfoCallback,\n\t\tempty: lang.sInfoEmpty,\n\t\tpostfix: lang.sInfoPostFix,\n\t\tsearch: lang.sInfoFiltered,\n\t\ttext: lang.sInfo,\n\t}, opts);\n\n\n\t// Update display on each draw\n\tsettings.aoDrawCallback.push(function (s) {\n\t\t_fnUpdateInfo(s, opts, n);\n\t});\n\n\t// For the first info display in the table, we add a callback and aria information.\n\tif (! $('#' + tid+'_info', settings.nWrapper).length) {\n\t\tn.attr({\n\t\t\t'aria-live': 'polite',\n\t\t\tid: tid+'_info',\n\t\t\trole: 'status'\n\t\t});\n\n\t\t// Table is described by our info div\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\t}\n\n\treturn n;\n}, 'i' );\n\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnUpdateInfo ( settings, opts, node )\n{\n\tvar\n\t\tstart = settings._iDisplayStart+1,\n\t\tend   = settings.fnDisplayEnd(),\n\t\tmax   = settings.fnRecordsTotal(),\n\t\ttotal = settings.fnRecordsDisplay(),\n\t\tout   = total\n\t\t\t? opts.text\n\t\t\t: opts.empty;\n\n\tif ( total !== max ) {\n\t\t// Record set after filtering\n\t\tout += ' ' + opts.search;\n\t}\n\n\t// Convert the macros\n\tout += opts.postfix;\n\tout = _fnMacros( settings, out );\n\n\tif ( opts.callback ) {\n\t\tout = opts.callback.call( settings.oInstance,\n\t\t\tsettings, start, end, max, total, out\n\t\t);\n\t}\n\n\tnode.html( out );\n\n\t_fnCallbackFire(settings, null, 'info', [settings, node[0], out]);\n}\n\nvar __searchCounter = 0;\n\n// opts\n// - text\n// - placeholder\nDataTable.feature.register( 'search', function ( settings, opts ) {\n\t// Don't show the input if filtering isn't available on the table\n\tif (! settings.oFeatures.bFilter) {\n\t\treturn null;\n\t}\n\n\tvar classes = settings.oClasses.search;\n\tvar tableId = settings.sTableId;\n\tvar language = settings.oLanguage;\n\tvar previousSearch = settings.oPreviousSearch;\n\tvar input = '<input type=\"search\" class=\"'+classes.input+'\"/>';\n\n\topts = $.extend({\n\t\tplaceholder: language.sSearchPlaceholder,\n\t\ttext: language.sSearch\n\t}, opts);\n\n\t// The _INPUT_ is optional - is appended if not present\n\tif (opts.text.indexOf('_INPUT_') === -1) {\n\t\topts.text += '_INPUT_';\n\t}\n\n\topts.text = _fnMacros(settings, opts.text);\n\n\t// We can put the <input> outside of the label if it is at the start or end\n\t// which helps improve accessability (not all screen readers like implicit\n\t// for elements).\n\tvar end = opts.text.match(/_INPUT_$/);\n\tvar start = opts.text.match(/^_INPUT_/);\n\tvar removed = opts.text.replace(/_INPUT_/, '');\n\tvar str = '<label>' + opts.text + '</label>';\n\n\tif (start) {\n\t\tstr = '_INPUT_<label>' + removed + '</label>';\n\t}\n\telse if (end) {\n\t\tstr = '<label>' + removed + '</label>_INPUT_';\n\t}\n\n\tvar filter = $('<div>')\n\t\t.addClass(classes.container)\n\t\t.append(str.replace(/_INPUT_/, input));\n\n\t// add for and id to label and input\n\tfilter.find('label').attr('for', 'dt-search-' + __searchCounter);\n\tfilter.find('input').attr('id', 'dt-search-' + __searchCounter);\n\t__searchCounter++;\n\n\tvar searchFn = function(event) {\n\t\tvar val = this.value;\n\n\t\tif(previousSearch.return && event.key !== \"Enter\") {\n\t\t\treturn;\n\t\t}\n\n\t\t/* Now do the filter */\n\t\tif ( val != previousSearch.search ) {\n\t\t\tpreviousSearch.search = val;\n\n\t\t\t_fnFilterComplete( settings, previousSearch );\n\n\t\t\t// Need to redraw, without resorting\n\t\t\tsettings._iDisplayStart = 0;\n\t\t\t_fnDraw( settings );\n\t\t}\n\t};\n\n\tvar searchDelay = settings.searchDelay !== null ?\n\t\tsettings.searchDelay :\n\t\t0;\n\n\tvar jqFilter = $('input', filter)\n\t\t.val( previousSearch.search )\n\t\t.attr( 'placeholder', opts.placeholder )\n\t\t.on(\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\tsearchDelay ?\n\t\t\t\tDataTable.util.debounce( searchFn, searchDelay ) :\n\t\t\t\tsearchFn\n\t\t)\n\t\t.on( 'mouseup.DT', function(e) {\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\tsetTimeout( function () {\n\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t}, 10);\n\t\t} )\n\t\t.on( 'keypress.DT', function(e) {\n\t\t\t/* Prevent form submission */\n\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} )\n\t\t.attr('aria-controls', tableId);\n\n\t// Update the input elements whenever the table is filtered\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\tif ( settings === s && jqFilter[0] !== document.activeElement ) {\n\t\t\tjqFilter.val( typeof previousSearch.search !== 'function'\n\t\t\t\t? previousSearch.search\n\t\t\t\t: ''\n\t\t\t);\n\t\t}\n\t} );\n\n\treturn filter;\n}, 'f' );\n\n// opts\n// - type - button configuration\n// - numbers - number of buttons to show - must be odd\nDataTable.feature.register( 'paging', function ( settings, opts ) {\n\t// Don't show the paging input if the table doesn't have paging enabled\n\tif (! settings.oFeatures.bPaginate) {\n\t\treturn null;\n\t}\n\n\topts = $.extend({\n\t\tnumbers: DataTable.ext.pager.numbers_length,\n\t\ttype: settings.sPaginationType\n\t}, opts)\n\n\tvar host = $('<div/>').addClass( settings.oClasses.paging.container + ' paging_' + opts.type );\n\tvar draw = function () {\n\t\t_pagingDraw(settings, host, opts);\n\t};\n\n\tsettings.aoDrawCallback.push(draw);\n\n\t// Responsive redraw of paging control\n\t$(settings.nTable).on('column-sizing.dt.DT', draw);\n\n\treturn host;\n}, 'p' );\n\nfunction _pagingDraw(settings, host, opts) {\n\tif (! settings._bInitComplete) {\n\t\treturn;\n\t}\n\n\tvar\n\t\tplugin = DataTable.ext.pager[ opts.type ],\n\t\taria = settings.oLanguage.oAria.paginate || {},\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings._iDisplayLength,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1,\n\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\tbuttons = plugin()\n\t\t\t.map(function (val) {\n\t\t\t\treturn val === 'numbers'\n\t\t\t\t\t? _pagingNumbers(page, pages, opts.numbers)\n\t\t\t\t\t: val;\n\t\t\t})\n\t\t\t.flat();\n\n\tvar buttonEls = [];\n\n\tfor (var i=0 ; i<buttons.length ; i++) {\n\t\tvar button = buttons[i];\n\n\t\tvar btnInfo = _pagingButtonInfo(settings, button, page, pages);\n\t\tvar btn = _fnRenderer( settings, 'pagingButton' )(\n\t\t\tsettings,\n\t\t\tbutton,\n\t\t\tbtnInfo.display,\n\t\t\tbtnInfo.active,\n\t\t\tbtnInfo.disabled\n\t\t);\n\n\t\t// Common attributes\n\t\t$(btn.clicker).attr({\n\t\t\t'aria-controls': settings.sTableId,\n\t\t\t'aria-disabled': btnInfo.disabled ? 'true' : null,\n\t\t\t'aria-current': btnInfo.active ? 'page' : null,\n\t\t\t'aria-label': aria[ button ],\n\t\t\t'data-dt-idx': button,\n\t\t\t'tabIndex': btnInfo.disabled ? -1 : settings.iTabIndex,\n\t\t});\n\n\t\tif (typeof button !== 'number') {\n\t\t\t$(btn.clicker).addClass(button);\n\t\t}\n\n\t\t_fnBindAction(\n\t\t\tbtn.clicker, {action: button}, function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t}\n\t\t);\n\n\t\tbuttonEls.push(btn.display);\n\t}\n\n\tvar wrapped = _fnRenderer(settings, 'pagingContainer')(\n\t\tsettings, buttonEls\n\t);\n\n\tvar activeEl = host.find(document.activeElement).data('dt-idx');\n\n\thost.empty().append(wrapped);\n\n\tif ( activeEl !== undefined ) {\n\t\thost.find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t}\n\n\t// Responsive - check if the buttons are over two lines based on the\n\t// height of the buttons and the container.\n\tif (\n\t\tbuttonEls.length && // any buttons\n\t\topts.numbers > 1 && // prevent infinite\n\t\t$(host).outerHeight() >= ($(buttonEls[0]).outerHeight() * 2) - 10\n\t) {\n\t\t_pagingDraw(settings, host, $.extend({}, opts, { numbers: opts.numbers - 2 }));\n\t}\n}\n\n/**\n * Get properties for a button based on the current paging state of the table\n *\n * @param {*} settings DT settings object\n * @param {*} button The button type in question\n * @param {*} page Table's current page\n * @param {*} pages Number of pages\n * @returns Info object\n */\nfunction _pagingButtonInfo(settings, button, page, pages) {\n\tvar lang = settings.oLanguage.oPaginate;\n\tvar o = {\n\t\tdisplay: '',\n\t\tactive: false,\n\t\tdisabled: false\n\t};\n\n\tswitch ( button ) {\n\t\tcase 'ellipsis':\n\t\t\to.display = '&#x2026;';\n\t\t\to.disabled = true;\n\t\t\tbreak;\n\n\t\tcase 'first':\n\t\t\to.display = lang.sFirst;\n\n\t\t\tif (page === 0) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'previous':\n\t\t\to.display = lang.sPrevious;\n\n\t\t\tif ( page === 0 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'next':\n\t\t\to.display = lang.sNext;\n\n\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'last':\n\t\t\to.display = lang.sLast;\n\n\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tif ( typeof button === 'number' ) {\n\t\t\t\to.display = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\n\t\t\t\tif (page === button) {\n\t\t\t\t\to.active = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\treturn o;\n}\n\n/**\n * Compute what number buttons to show in the paging control\n *\n * @param {*} page Current page\n * @param {*} pages Total number of pages\n * @param {*} buttons Target number of number buttons\n * @returns Buttons to show\n */\nfunction _pagingNumbers ( page, pages, buttons ) {\n\tvar\n\t\tnumbers = [],\n\t\thalf = Math.floor(buttons / 2);\n\n\tif ( pages <= buttons ) {\n\t\tnumbers = _range(0, pages);\n\t}\n\telse if (buttons === 1) {\n\t\t// Single button - current page only\n\t\tnumbers = [page];\n\t}\n\telse if (buttons === 3) {\n\t\t// Special logic for just three buttons\n\t\tif (page <= 1) {\n\t\t\tnumbers = [0, 1, 'ellipsis'];\n\t\t}\n\t\telse if (page >= pages - 2) {\n\t\t\tnumbers = _range(pages-2, pages);\n\t\t\tnumbers.unshift('ellipsis');\n\t\t}\n\t\telse {\n\t\t\tnumbers = ['ellipsis', page, 'ellipsis'];\n\t\t}\n\t}\n\telse if ( page <= half ) {\n\t\tnumbers = _range(0, buttons-2);\n\t\tnumbers.push('ellipsis', pages-1);\n\t}\n\telse if ( page >= pages - 1 - half ) {\n\t\tnumbers = _range(pages-(buttons-2), pages);\n\t\tnumbers.unshift(0, 'ellipsis');\n\t}\n\telse {\n\t\tnumbers = _range(page-half+2, page+half-1);\n\t\tnumbers.push('ellipsis', pages-1);\n\t\tnumbers.unshift(0, 'ellipsis');\n\t}\n\n\treturn numbers;\n}\n\nvar __lengthCounter = 0;\n\n// opts\n// - menu\n// - text\nDataTable.feature.register( 'pageLength', function ( settings, opts ) {\n\tvar features = settings.oFeatures;\n\n\t// For compatibility with the legacy `pageLength` top level option\n\tif (! features.bPaginate || ! features.bLengthChange) {\n\t\treturn null;\n\t}\n\n\topts = $.extend({\n\t\tmenu: settings.aLengthMenu,\n\t\ttext: settings.oLanguage.sLengthMenu\n\t}, opts);\n\n\tvar\n\t\tclasses  = settings.oClasses.length,\n\t\ttableId  = settings.sTableId,\n\t\tmenu     = opts.menu,\n\t\tlengths  = [],\n\t\tlanguage = [],\n\t\ti;\n\n\t// Options can be given in a number of ways\n\tif (Array.isArray( menu[0] )) {\n\t\t// Old 1.x style - 2D array\n\t\tlengths = menu[0];\n\t\tlanguage = menu[1];\n\t}\n\telse {\n\t\tfor ( i=0 ; i<menu.length ; i++ ) {\n\t\t\t// An object with different label and value\n\t\t\tif ($.isPlainObject(menu[i])) {\n\t\t\t\tlengths.push(menu[i].value);\n\t\t\t\tlanguage.push(menu[i].label);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Or just a number to display and use\n\t\t\t\tlengths.push(menu[i]);\n\t\t\t\tlanguage.push(menu[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// We can put the <select> outside of the label if it is at the start or\n\t// end which helps improve accessability (not all screen readers like\n\t// implicit for elements).\n\tvar end = opts.text.match(/_MENU_$/);\n\tvar start = opts.text.match(/^_MENU_/);\n\tvar removed = opts.text.replace(/_MENU_/, '');\n\tvar str = '<label>' + opts.text + '</label>';\n\n\tif (start) {\n\t\tstr = '_MENU_<label>' + removed + '</label>';\n\t}\n\telse if (end) {\n\t\tstr = '<label>' + removed + '</label>_MENU_';\n\t}\n\n\t// Wrapper element - use a span as a holder for where the select will go\n\tvar div = $('<div/>')\n\t\t.addClass( classes.container )\n\t\t.append(\n\t\t\tstr.replace( '_MENU_', '<span></span>' )\n\t\t);\n\n\t// Save text node content for macro updating\n\tvar textNodes = [];\n\tdiv.find('label')[0].childNodes.forEach(function (el) {\n\t\tif (el.nodeType === Node.TEXT_NODE) {\n\t\t\ttextNodes.push({\n\t\t\t\tel: el,\n\t\t\t\ttext: el.textContent\n\t\t\t});\n\t\t}\n\t})\n\n\t// Update the label text in case it has an entries value\n\tvar updateEntries = function (len) {\n\t\ttextNodes.forEach(function (node) {\n\t\t\tnode.el.textContent = _fnMacros(settings, node.text, len);\n\t\t});\n\t}\n\n\t// Next, the select itself, along with the options\n\tvar select = $('<select/>', {\n\t\t'name':          tableId+'_length',\n\t\t'aria-controls': tableId,\n\t\t'class':         classes.select\n\t} );\n\n\tfor ( i=0 ; i<lengths.length ; i++ ) {\n\t\tselect[0][ i ] = new Option(\n\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\tlanguage[i],\n\t\t\tlengths[i]\n\t\t);\n\t}\n\n\t// add for and id to label and input\n\tdiv.find('label').attr('for', 'dt-length-' + __lengthCounter);\n\tselect.attr('id', 'dt-length-' + __lengthCounter);\n\t__lengthCounter++;\n\n\t// Swap in the select list\n\tdiv.find('span').replaceWith(select);\n\n\t// Can't use `select` variable as user might provide their own and the\n\t// reference is broken by the use of outerHTML\n\t$('select', div)\n\t\t.val( settings._iDisplayLength )\n\t\t.on( 'change.DT', function() {\n\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t_fnDraw( settings );\n\t\t} );\n\n\t// Update node value whenever anything changes the table's length\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\tif ( settings === s ) {\n\t\t\t$('select', div).val( len );\n\n\t\t\t// Resolve plurals in the text for the new length\n\t\t\tupdateEntries(len);\n\t\t}\n\t} );\n\n\tupdateEntries(settings._iDisplayLength);\n\n\treturn div;\n}, 'l' );\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function ( opts ) {\n\treturn $(this).dataTable( opts ).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each( DataTable, function ( prop, val ) {\n\t$.fn.DataTable[ prop ] = val;\n} );\n\nexport default DataTable;\n","/*! Buttons for DataTables 3.0.0\n * © SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\n\n\n// Used for namespacing events added to the document by each instance, so they\n// can be removed on destroy\nvar _instCounter = 0;\n\n// Button namespacing counter for namespacing events on individual buttons\nvar _buttonCounter = 0;\n\nvar _dtButtons = DataTable.ext.buttons;\n\n// Custom entity decoder for data export\nvar _entityDecoder = null;\n\n// Allow for jQuery slim\nfunction _fadeIn(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel.stop().fadeIn(duration, fn);\n\t}\n\telse {\n\t\tel.css('display', 'block');\n\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\nfunction _fadeOut(el, duration, fn) {\n\tif ($.fn.animate) {\n\t\tel.stop().fadeOut(duration, fn);\n\t}\n\telse {\n\t\tel.css('display', 'none');\n\n\t\tif (fn) {\n\t\t\tfn.call(el);\n\t\t}\n\t}\n}\n\n/**\n * [Buttons description]\n * @param {[type]}\n * @param {[type]}\n */\nvar Buttons = function (dt, config) {\n\tif (!DataTable.versionCheck('2')) {\n\t\tthrow 'Warning: Buttons requires DataTables 2 or newer';\n\t}\n\n\t// If not created with a `new` keyword then we return a wrapper function that\n\t// will take the settings object for a DT. This allows easy use of new instances\n\t// with the `layout` option - e.g. `topLeft: $.fn.dataTable.Buttons( ... )`.\n\tif (!(this instanceof Buttons)) {\n\t\treturn function (settings) {\n\t\t\treturn new Buttons(settings, dt).container();\n\t\t};\n\t}\n\n\t// If there is no config set it to an empty object\n\tif (typeof config === 'undefined') {\n\t\tconfig = {};\n\t}\n\n\t// Allow a boolean true for defaults\n\tif (config === true) {\n\t\tconfig = {};\n\t}\n\n\t// For easy configuration of buttons an array can be given\n\tif (Array.isArray(config)) {\n\t\tconfig = { buttons: config };\n\t}\n\n\tthis.c = $.extend(true, {}, Buttons.defaults, config);\n\n\t// Don't want a deep copy for the buttons\n\tif (config.buttons) {\n\t\tthis.c.buttons = config.buttons;\n\t}\n\n\tthis.s = {\n\t\tdt: new DataTable.Api(dt),\n\t\tbuttons: [],\n\t\tlistenKeys: '',\n\t\tnamespace: 'dtb' + _instCounter++\n\t};\n\n\tthis.dom = {\n\t\tcontainer: $('<' + this.c.dom.container.tag + '/>').addClass(\n\t\t\tthis.c.dom.container.className\n\t\t)\n\t};\n\n\tthis._constructor();\n};\n\n$.extend(Buttons.prototype, {\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Public methods\n\t */\n\n\t/**\n\t * Get the action of a button\n\t * @param  {int|string} Button index\n\t * @return {function}\n\t */ /**\n\t * Set the action of a button\n\t * @param  {node} node Button element\n\t * @param  {function} action Function to set\n\t * @return {Buttons} Self for chaining\n\t */\n\taction: function (node, action) {\n\t\tvar button = this._nodeToButton(node);\n\n\t\tif (action === undefined) {\n\t\t\treturn button.conf.action;\n\t\t}\n\n\t\tbutton.conf.action = action;\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add an active class to the button to make to look active or get current\n\t * active state.\n\t * @param  {node} node Button element\n\t * @param  {boolean} [flag] Enable / disable flag\n\t * @return {Buttons} Self for chaining or boolean for getter\n\t */\n\tactive: function (node, flag) {\n\t\tvar button = this._nodeToButton(node);\n\t\tvar klass = this.c.dom.button.active;\n\t\tvar jqNode = $(button.node);\n\n\t\tif (\n\t\t\tbutton.inCollection &&\n\t\t\tthis.c.dom.collection.button &&\n\t\t\tthis.c.dom.collection.button.active !== undefined\n\t\t) {\n\t\t\tklass = this.c.dom.collection.button.active;\n\t\t}\n\n\t\tif (flag === undefined) {\n\t\t\treturn jqNode.hasClass(klass);\n\t\t}\n\n\t\tjqNode.toggleClass(klass, flag === undefined ? true : flag);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Add a new button\n\t * @param {object} config Button configuration object, base string name or function\n\t * @param {int|string} [idx] Button index for where to insert the button\n\t * @param {boolean} [draw=true] Trigger a draw. Set a false when adding\n\t *   lots of buttons, until the last button.\n\t * @return {Buttons} Self for chaining\n\t */\n\tadd: function (config, idx, draw) {\n\t\tvar buttons = this.s.buttons;\n\n\t\tif (typeof idx === 'string') {\n\t\t\tvar split = idx.split('-');\n\t\t\tvar base = this.s;\n\n\t\t\tfor (var i = 0, ien = split.length - 1; i < ien; i++) {\n\t\t\t\tbase = base.buttons[split[i] * 1];\n\t\t\t}\n\n\t\t\tbuttons = base.buttons;\n\t\t\tidx = split[split.length - 1] * 1;\n\t\t}\n\n\t\tthis._expandButton(\n\t\t\tbuttons,\n\t\t\tconfig,\n\t\t\tconfig !== undefined ? config.split : undefined,\n\t\t\t(config === undefined ||\n\t\t\t\tconfig.split === undefined ||\n\t\t\t\tconfig.split.length === 0) &&\n\t\t\t\tbase !== undefined,\n\t\t\tfalse,\n\t\t\tidx\n\t\t);\n\n\t\tif (draw === undefined || draw === true) {\n\t\t\tthis._draw();\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Clear buttons from a collection and then insert new buttons\n\t */\n\tcollectionRebuild: function (node, newButtons) {\n\t\tvar button = this._nodeToButton(node);\n\n\t\tif (newButtons !== undefined) {\n\t\t\tvar i;\n\t\t\t// Need to reverse the array\n\t\t\tfor (i = button.buttons.length - 1; i >= 0; i--) {\n\t\t\t\tthis.remove(button.buttons[i].node);\n\t\t\t}\n\n\t\t\t// If the collection has prefix and / or postfix buttons we need to add them in\n\t\t\tif (button.conf.prefixButtons) {\n\t\t\t\tnewButtons.unshift.apply(newButtons, button.conf.prefixButtons);\n\t\t\t}\n\n\t\t\tif (button.conf.postfixButtons) {\n\t\t\t\tnewButtons.push.apply(newButtons, button.conf.postfixButtons);\n\t\t\t}\n\n\t\t\tfor (i = 0; i < newButtons.length; i++) {\n\t\t\t\tvar newBtn = newButtons[i];\n\n\t\t\t\tthis._expandButton(\n\t\t\t\t\tbutton.buttons,\n\t\t\t\t\tnewBtn,\n\t\t\t\t\tnewBtn !== undefined &&\n\t\t\t\t\t\tnewBtn.config !== undefined &&\n\t\t\t\t\t\tnewBtn.config.split !== undefined,\n\t\t\t\t\ttrue,\n\t\t\t\t\tnewBtn.parentConf !== undefined &&\n\t\t\t\t\t\tnewBtn.parentConf.split !== undefined,\n\t\t\t\t\tnull,\n\t\t\t\t\tnewBtn.parentConf\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tthis._draw(button.collection, button.buttons);\n\t},\n\n\t/**\n\t * Get the container node for the buttons\n\t * @return {jQuery} Buttons node\n\t */\n\tcontainer: function () {\n\t\treturn this.dom.container;\n\t},\n\n\t/**\n\t * Disable a button\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tdisable: function (node) {\n\t\tvar button = this._nodeToButton(node);\n\n\t\t$(button.node)\n\t\t\t.addClass(this.c.dom.button.disabled)\n\t\t\t.prop('disabled', true);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Destroy the instance, cleaning up event handlers and removing DOM\n\t * elements\n\t * @return {Buttons} Self for chaining\n\t */\n\tdestroy: function () {\n\t\t// Key event listener\n\t\t$('body').off('keyup.' + this.s.namespace);\n\n\t\t// Individual button destroy (so they can remove their own events if\n\t\t// needed). Take a copy as the array is modified by `remove`\n\t\tvar buttons = this.s.buttons.slice();\n\t\tvar i, ien;\n\n\t\tfor (i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tthis.remove(buttons[i].node);\n\t\t}\n\n\t\t// Container\n\t\tthis.dom.container.remove();\n\n\t\t// Remove from the settings object collection\n\t\tvar buttonInsts = this.s.dt.settings()[0];\n\n\t\tfor (i = 0, ien = buttonInsts.length; i < ien; i++) {\n\t\t\tif (buttonInsts.inst === this) {\n\t\t\t\tbuttonInsts.splice(i, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Enable / disable a button\n\t * @param  {node} node Button node\n\t * @param  {boolean} [flag=true] Enable / disable flag\n\t * @return {Buttons} Self for chaining\n\t */\n\tenable: function (node, flag) {\n\t\tif (flag === false) {\n\t\t\treturn this.disable(node);\n\t\t}\n\n\t\tvar button = this._nodeToButton(node);\n\t\t$(button.node)\n\t\t\t.removeClass(this.c.dom.button.disabled)\n\t\t\t.prop('disabled', false);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get a button's index\n\t *\n\t * This is internally recursive\n\t * @param {element} node Button to get the index of\n\t * @return {string} Button index\n\t */\n\tindex: function (node, nested, buttons) {\n\t\tif (!nested) {\n\t\t\tnested = '';\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tvar inner = buttons[i].buttons;\n\n\t\t\tif (buttons[i].node === node) {\n\t\t\t\treturn nested + i;\n\t\t\t}\n\n\t\t\tif (inner && inner.length) {\n\t\t\t\tvar match = this.index(node, i + '-', inner);\n\n\t\t\t\tif (match !== null) {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Get the instance name for the button set selector\n\t * @return {string} Instance name\n\t */\n\tname: function () {\n\t\treturn this.c.name;\n\t},\n\n\t/**\n\t * Get a button's node of the buttons container if no button is given\n\t * @param  {node} [node] Button node\n\t * @return {jQuery} Button element, or container\n\t */\n\tnode: function (node) {\n\t\tif (!node) {\n\t\t\treturn this.dom.container;\n\t\t}\n\n\t\tvar button = this._nodeToButton(node);\n\t\treturn $(button.node);\n\t},\n\n\t/**\n\t * Set / get a processing class on the selected button\n\t * @param {element} node Triggering button node\n\t * @param  {boolean} flag true to add, false to remove, undefined to get\n\t * @return {boolean|Buttons} Getter value or this if a setter.\n\t */\n\tprocessing: function (node, flag) {\n\t\tvar dt = this.s.dt;\n\t\tvar button = this._nodeToButton(node);\n\n\t\tif (flag === undefined) {\n\t\t\treturn $(button.node).hasClass('processing');\n\t\t}\n\n\t\t$(button.node).toggleClass('processing', flag);\n\n\t\t$(dt.table().node()).triggerHandler('buttons-processing.dt', [\n\t\t\tflag,\n\t\t\tdt.button(node),\n\t\t\tdt,\n\t\t\t$(node),\n\t\t\tbutton.conf\n\t\t]);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Remove a button.\n\t * @param  {node} node Button node\n\t * @return {Buttons} Self for chaining\n\t */\n\tremove: function (node) {\n\t\tvar button = this._nodeToButton(node);\n\t\tvar host = this._nodeToHost(node);\n\t\tvar dt = this.s.dt;\n\n\t\t// Remove any child buttons first\n\t\tif (button.buttons.length) {\n\t\t\tfor (var i = button.buttons.length - 1; i >= 0; i--) {\n\t\t\t\tthis.remove(button.buttons[i].node);\n\t\t\t}\n\t\t}\n\n\t\tbutton.conf.destroying = true;\n\n\t\t// Allow the button to remove event handlers, etc\n\t\tif (button.conf.destroy) {\n\t\t\tbutton.conf.destroy.call(dt.button(node), dt, $(node), button.conf);\n\t\t}\n\n\t\tthis._removeKey(button.conf);\n\n\t\t$(button.node).remove();\n\n\t\tvar idx = $.inArray(button, host);\n\t\thost.splice(idx, 1);\n\n\t\treturn this;\n\t},\n\n\t/**\n\t * Get the text for a button\n\t * @param  {int|string} node Button index\n\t * @return {string} Button text\n\t */ /**\n\t * Set the text for a button\n\t * @param  {int|string|function} node Button index\n\t * @param  {string} label Text\n\t * @return {Buttons} Self for chaining\n\t */\n\ttext: function (node, label) {\n\t\tvar button = this._nodeToButton(node);\n\t\tvar textNode = button.textNode;\n\t\tvar dt = this.s.dt;\n\t\tvar jqNode = $(button.node);\n\t\tvar text = function (opt) {\n\t\t\treturn typeof opt === 'function'\n\t\t\t\t? opt(dt, jqNode, button.conf)\n\t\t\t\t: opt;\n\t\t};\n\n\t\tif (label === undefined) {\n\t\t\treturn text(button.conf.text);\n\t\t}\n\n\t\tbutton.conf.text = label;\n\t\ttextNode.html(text(label));\n\n\t\treturn this;\n\t},\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Constructor\n\t */\n\n\t/**\n\t * Buttons constructor\n\t * @private\n\t */\n\t_constructor: function () {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar dtSettings = dt.settings()[0];\n\t\tvar buttons = this.c.buttons;\n\n\t\tif (!dtSettings._buttons) {\n\t\t\tdtSettings._buttons = [];\n\t\t}\n\n\t\tdtSettings._buttons.push({\n\t\t\tinst: this,\n\t\t\tname: this.c.name\n\t\t});\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tthis.add(buttons[i]);\n\t\t}\n\n\t\tdt.on('destroy', function (e, settings) {\n\t\t\tif (settings === dtSettings) {\n\t\t\t\tthat.destroy();\n\t\t\t}\n\t\t});\n\n\t\t// Global key event binding to listen for button keys\n\t\t$('body').on('keyup.' + this.s.namespace, function (e) {\n\t\t\tif (\n\t\t\t\t!document.activeElement ||\n\t\t\t\tdocument.activeElement === document.body\n\t\t\t) {\n\t\t\t\t// SUse a string of characters for fast lookup of if we need to\n\t\t\t\t// handle this\n\t\t\t\tvar character = String.fromCharCode(e.keyCode).toLowerCase();\n\n\t\t\t\tif (that.s.listenKeys.toLowerCase().indexOf(character) !== -1) {\n\t\t\t\t\tthat._keypress(character, e);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\t/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * Private methods\n\t */\n\n\t/**\n\t * Add a new button to the key press listener\n\t * @param {object} conf Resolved button configuration object\n\t * @private\n\t */\n\t_addKey: function (conf) {\n\t\tif (conf.key) {\n\t\t\tthis.s.listenKeys += $.isPlainObject(conf.key)\n\t\t\t\t? conf.key.key\n\t\t\t\t: conf.key;\n\t\t}\n\t},\n\n\t/**\n\t * Insert the buttons into the container. Call without parameters!\n\t * @param  {node} [container] Recursive only - Insert point\n\t * @param  {array} [buttons] Recursive only - Buttons array\n\t * @private\n\t */\n\t_draw: function (container, buttons) {\n\t\tif (!container) {\n\t\t\tcontainer = this.dom.container;\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tcontainer.children().detach();\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tcontainer.append(buttons[i].inserter);\n\t\t\tcontainer.append(' ');\n\n\t\t\tif (buttons[i].buttons && buttons[i].buttons.length) {\n\t\t\t\tthis._draw(buttons[i].collection, buttons[i].buttons);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Create buttons from an array of buttons\n\t * @param  {array} attachTo Buttons array to attach to\n\t * @param  {object} button Button definition\n\t * @param  {boolean} inCollection true if the button is in a collection\n\t * @private\n\t */\n\t_expandButton: function (\n\t\tattachTo,\n\t\tbutton,\n\t\tsplit,\n\t\tinCollection,\n\t\tinSplit,\n\t\tattachPoint,\n\t\tparentConf\n\t) {\n\t\tvar dt = this.s.dt;\n\t\tvar isSplit = false;\n\t\tvar domCollection = this.c.dom.collection;\n\t\tvar buttons = !Array.isArray(button) ? [button] : button;\n\n\t\tif (button === undefined) {\n\t\t\tbuttons = !Array.isArray(split) ? [split] : split;\n\t\t}\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tvar conf = this._resolveExtends(buttons[i]);\n\n\t\t\tif (!conf) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tisSplit = conf.config && conf.config.split ? true : false;\n\n\t\t\t// If the configuration is an array, then expand the buttons at this\n\t\t\t// point\n\t\t\tif (Array.isArray(conf)) {\n\t\t\t\tthis._expandButton(\n\t\t\t\t\tattachTo,\n\t\t\t\t\tconf,\n\t\t\t\t\tbuilt !== undefined && built.conf !== undefined\n\t\t\t\t\t\t? built.conf.split\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\tinCollection,\n\t\t\t\t\tparentConf !== undefined && parentConf.split !== undefined,\n\t\t\t\t\tattachPoint,\n\t\t\t\t\tparentConf\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar built = this._buildButton(\n\t\t\t\tconf,\n\t\t\t\tinCollection,\n\t\t\t\tconf.split !== undefined ||\n\t\t\t\t\t(conf.config !== undefined &&\n\t\t\t\t\t\tconf.config.split !== undefined),\n\t\t\t\tinSplit\n\t\t\t);\n\t\t\tif (!built) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (attachPoint !== undefined && attachPoint !== null) {\n\t\t\t\tattachTo.splice(attachPoint, 0, built);\n\t\t\t\tattachPoint++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tattachTo.push(built);\n\t\t\t}\n\n\t\t\t// Create the dropdown for a collection\n\t\t\tif (built.conf.buttons) {\n\t\t\t\tbuilt.collection = $(\n\t\t\t\t\t'<' + domCollection.container.content.tag + '/>'\n\t\t\t\t);\n\t\t\t\tbuilt.conf._collection = built.collection;\n\n\t\t\t\t$(built.node).append(domCollection.action.dropHtml);\n\n\t\t\t\tthis._expandButton(\n\t\t\t\t\tbuilt.buttons,\n\t\t\t\t\tbuilt.conf.buttons,\n\t\t\t\t\tbuilt.conf.split,\n\t\t\t\t\t!isSplit,\n\t\t\t\t\tisSplit,\n\t\t\t\t\tattachPoint,\n\t\t\t\t\tbuilt.conf\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// And the split collection\n\t\t\tif (built.conf.split) {\n\t\t\t\tbuilt.collection = $('<' + domCollection.container.tag + '/>');\n\t\t\t\tbuilt.conf._collection = built.collection;\n\n\t\t\t\tfor (var j = 0; j < built.conf.split.length; j++) {\n\t\t\t\t\tvar item = built.conf.split[j];\n\n\t\t\t\t\tif (typeof item === 'object') {\n\t\t\t\t\t\titem.parent = parentConf;\n\n\t\t\t\t\t\tif (item.collectionLayout === undefined) {\n\t\t\t\t\t\t\titem.collectionLayout = built.conf.collectionLayout;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (item.dropup === undefined) {\n\t\t\t\t\t\t\titem.dropup = built.conf.dropup;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (item.fade === undefined) {\n\t\t\t\t\t\t\titem.fade = built.conf.fade;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._expandButton(\n\t\t\t\t\tbuilt.buttons,\n\t\t\t\t\tbuilt.conf.buttons,\n\t\t\t\t\tbuilt.conf.split,\n\t\t\t\t\t!isSplit,\n\t\t\t\t\tisSplit,\n\t\t\t\t\tattachPoint,\n\t\t\t\t\tbuilt.conf\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tbuilt.conf.parent = parentConf;\n\n\t\t\t// init call is made here, rather than buildButton as it needs to\n\t\t\t// be selectable, and for that it needs to be in the buttons array\n\t\t\tif (conf.init) {\n\t\t\t\tconf.init.call(dt.button(built.node), dt, $(built.node), conf);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Create an individual button\n\t * @param  {object} config            Resolved button configuration\n\t * @param  {boolean} inCollection `true` if a collection button\n\t * @return {object} Completed button description object\n\t * @private\n\t */\n\t_buildButton: function (config, inCollection, isSplit, inSplit) {\n\t\tvar that = this;\n\t\tvar configDom = this.c.dom;\n\t\tvar textNode;\n\t\tvar dt = this.s.dt;\n\t\tvar text = function (opt) {\n\t\t\treturn typeof opt === 'function' ? opt(dt, button, config) : opt;\n\t\t};\n\n\t\t// Create an object that describes the button which can be in `dom.button`, or\n\t\t// `dom.collection.button` or `dom.split.button` or `dom.collection.split.button`!\n\t\t// Each should extend from `dom.button`.\n\t\tvar dom = $.extend(true, {}, configDom.button);\n\n\t\tif (inCollection && isSplit && configDom.collection.split) {\n\t\t\t$.extend(true, dom, configDom.collection.split.action);\n\t\t}\n\t\telse if (inSplit || inCollection) {\n\t\t\t$.extend(true, dom, configDom.collection.button);\n\t\t}\n\t\telse if (isSplit) {\n\t\t\t$.extend(true, dom, configDom.split.button);\n\t\t}\n\n\t\t// Spacers don't do much other than insert an element into the DOM\n\t\tif (config.spacer) {\n\t\t\tvar spacer = $('<' + dom.spacer.tag + '/>')\n\t\t\t\t.addClass(\n\t\t\t\t\t'dt-button-spacer ' +\n\t\t\t\t\t\tconfig.style +\n\t\t\t\t\t\t' ' +\n\t\t\t\t\t\tdom.spacer.className\n\t\t\t\t)\n\t\t\t\t.html(text(config.text));\n\n\t\t\treturn {\n\t\t\t\tconf: config,\n\t\t\t\tnode: spacer,\n\t\t\t\tinserter: spacer,\n\t\t\t\tbuttons: [],\n\t\t\t\tinCollection: inCollection,\n\t\t\t\tisSplit: isSplit,\n\t\t\t\tcollection: null,\n\t\t\t\ttextNode: spacer\n\t\t\t};\n\t\t}\n\n\t\t// Make sure that the button is available based on whatever requirements\n\t\t// it has. For example, PDF button require pdfmake\n\t\tif (\n\t\t\tconfig.available &&\n\t\t\t!config.available(dt, config) &&\n\t\t\t!config.html\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar button;\n\n\t\tif (!config.html) {\n\t\t\tvar run = function (e, dt, button, config, done) {\n\t\t\t\tconfig.action.call(dt.button(button), e, dt, button, config, done);\n\n\t\t\t\t$(dt.table().node()).triggerHandler('buttons-action.dt', [\n\t\t\t\t\tdt.button(button),\n\t\t\t\t\tdt,\n\t\t\t\t\tbutton,\n\t\t\t\t\tconfig\n\t\t\t\t]);\n\t\t\t};\n\n\t\t\tvar action = function(e, dt, button, config) {\n\t\t\t\tif (config.async) {\n\t\t\t\t\tthat.processing(button[0], true);\n\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\trun(e, dt, button, config, function () {\n\t\t\t\t\t\t\tthat.processing(button[0], false);\n\t\t\t\t\t\t});\n\t\t\t\t\t}, config.async);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\trun(e, dt, button, config, function () {});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar tag = config.tag || dom.tag;\n\t\t\tvar clickBlurs =\n\t\t\t\tconfig.clickBlurs === undefined ? true : config.clickBlurs;\n\n\t\t\tbutton = $('<' + tag + '/>')\n\t\t\t\t.addClass(dom.className)\n\t\t\t\t.attr('tabindex', this.s.dt.settings()[0].iTabIndex)\n\t\t\t\t.attr('aria-controls', this.s.dt.table().node().id)\n\t\t\t\t.on('click.dtb', function (e) {\n\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\tif (!button.hasClass(dom.disabled) && config.action) {\n\t\t\t\t\t\taction(e, dt, button, config);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (clickBlurs) {\n\t\t\t\t\t\tbutton.trigger('blur');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keypress.dtb', function (e) {\n\t\t\t\t\tif (e.keyCode === 13) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\tif (!button.hasClass(dom.disabled) && config.action) {\n\t\t\t\t\t\t\taction(e, dt, button, config);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t// Make `a` tags act like a link\n\t\t\tif (tag.toLowerCase() === 'a') {\n\t\t\t\tbutton.attr('href', '#');\n\t\t\t}\n\n\t\t\t// Button tags should have `type=button` so they don't have any default behaviour\n\t\t\tif (tag.toLowerCase() === 'button') {\n\t\t\t\tbutton.attr('type', 'button');\n\t\t\t}\n\n\t\t\tif (dom.liner.tag) {\n\t\t\t\tvar liner = $('<' + dom.liner.tag + '/>')\n\t\t\t\t\t.html(text(config.text))\n\t\t\t\t\t.addClass(dom.liner.className);\n\n\t\t\t\tif (dom.liner.tag.toLowerCase() === 'a') {\n\t\t\t\t\tliner.attr('href', '#');\n\t\t\t\t}\n\n\t\t\t\tbutton.append(liner);\n\t\t\t\ttextNode = liner;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbutton.html(text(config.text));\n\t\t\t\ttextNode = button;\n\t\t\t}\n\n\t\t\tif (config.enabled === false) {\n\t\t\t\tbutton.addClass(dom.disabled);\n\t\t\t}\n\n\t\t\tif (config.className) {\n\t\t\t\tbutton.addClass(config.className);\n\t\t\t}\n\n\t\t\tif (config.titleAttr) {\n\t\t\t\tbutton.attr('title', text(config.titleAttr));\n\t\t\t}\n\n\t\t\tif (config.attr) {\n\t\t\t\tbutton.attr(config.attr);\n\t\t\t}\n\n\t\t\tif (!config.namespace) {\n\t\t\t\tconfig.namespace = '.dt-button-' + _buttonCounter++;\n\t\t\t}\n\n\t\t\tif (config.config !== undefined && config.config.split) {\n\t\t\t\tconfig.split = config.config.split;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tbutton = $(config.html);\n\t\t}\n\n\t\tvar buttonContainer = this.c.dom.buttonContainer;\n\t\tvar inserter;\n\t\tif (buttonContainer && buttonContainer.tag) {\n\t\t\tinserter = $('<' + buttonContainer.tag + '/>')\n\t\t\t\t.addClass(buttonContainer.className)\n\t\t\t\t.append(button);\n\t\t}\n\t\telse {\n\t\t\tinserter = button;\n\t\t}\n\n\t\tthis._addKey(config);\n\n\t\t// Style integration callback for DOM manipulation\n\t\t// Note that this is _not_ documented. It is currently\n\t\t// for style integration only\n\t\tif (this.c.buttonCreated) {\n\t\t\tinserter = this.c.buttonCreated(config, inserter);\n\t\t}\n\n\t\tvar splitDiv;\n\n\t\tif (isSplit) {\n\t\t\tvar dropdownConf = inCollection\n\t\t\t\t? $.extend(true, this.c.dom.split, this.c.dom.collection.split)\n\t\t\t\t: this.c.dom.split;\n\t\t\tvar wrapperConf = dropdownConf.wrapper;\n\n\t\t\tsplitDiv = $('<' + wrapperConf.tag + '/>')\n\t\t\t\t.addClass(wrapperConf.className)\n\t\t\t\t.append(button);\n\n\t\t\tvar dropButtonConfig = $.extend(config, {\n\t\t\t\talign: dropdownConf.dropdown.align,\n\t\t\t\tattr: {\n\t\t\t\t\t'aria-haspopup': 'dialog',\n\t\t\t\t\t'aria-expanded': false\n\t\t\t\t},\n\t\t\t\tclassName: dropdownConf.dropdown.className,\n\t\t\t\tcloseButton: false,\n\t\t\t\tsplitAlignClass: dropdownConf.dropdown.splitAlignClass,\n\t\t\t\ttext: dropdownConf.dropdown.text\n\t\t\t});\n\n\t\t\tthis._addKey(dropButtonConfig);\n\n\t\t\tvar splitAction = function (e, dt, button, config) {\n\t\t\t\t_dtButtons.split.action.call(\n\t\t\t\t\tdt.button(splitDiv),\n\t\t\t\t\te,\n\t\t\t\t\tdt,\n\t\t\t\t\tbutton,\n\t\t\t\t\tconfig\n\t\t\t\t);\n\n\t\t\t\t$(dt.table().node()).triggerHandler('buttons-action.dt', [\n\t\t\t\t\tdt.button(button),\n\t\t\t\t\tdt,\n\t\t\t\t\tbutton,\n\t\t\t\t\tconfig\n\t\t\t\t]);\n\t\t\t\tbutton.attr('aria-expanded', true);\n\t\t\t};\n\n\t\t\tvar dropButton = $(\n\t\t\t\t'<button class=\"' +\n\t\t\t\t\tdropdownConf.dropdown.className +\n\t\t\t\t\t' dt-button\"></button>'\n\t\t\t)\n\t\t\t\t.html(dropdownConf.dropdown.dropHtml)\n\t\t\t\t.on('click.dtb', function (e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tif (!dropButton.hasClass(dom.disabled)) {\n\t\t\t\t\t\tsplitAction(e, dt, dropButton, dropButtonConfig);\n\t\t\t\t\t}\n\t\t\t\t\tif (clickBlurs) {\n\t\t\t\t\t\tdropButton.trigger('blur');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keypress.dtb', function (e) {\n\t\t\t\t\tif (e.keyCode === 13) {\n\t\t\t\t\t\te.preventDefault();\n\n\t\t\t\t\t\tif (!dropButton.hasClass(dom.disabled)) {\n\t\t\t\t\t\t\tsplitAction(e, dt, dropButton, dropButtonConfig);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tif (config.split.length === 0) {\n\t\t\t\tdropButton.addClass('dtb-hide-drop');\n\t\t\t}\n\n\t\t\tsplitDiv.append(dropButton).attr(dropButtonConfig.attr);\n\t\t}\n\n\t\treturn {\n\t\t\tconf: config,\n\t\t\tnode: isSplit ? splitDiv.get(0) : button.get(0),\n\t\t\tinserter: isSplit ? splitDiv : inserter,\n\t\t\tbuttons: [],\n\t\t\tinCollection: inCollection,\n\t\t\tisSplit: isSplit,\n\t\t\tinSplit: inSplit,\n\t\t\tcollection: null,\n\t\t\ttextNode: textNode\n\t\t};\n\t},\n\n\t/**\n\t * Get the button object from a node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {object} Button object\n\t * @private\n\t */\n\t_nodeToButton: function (node, buttons) {\n\t\tif (!buttons) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tif (buttons[i].node === node) {\n\t\t\t\treturn buttons[i];\n\t\t\t}\n\n\t\t\tif (buttons[i].buttons.length) {\n\t\t\t\tvar ret = this._nodeToButton(node, buttons[i].buttons);\n\n\t\t\t\tif (ret) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Get container array for a button from a button node (recursive)\n\t * @param  {node} node Button node\n\t * @param  {array} [buttons] Button array, uses base if not defined\n\t * @return {array} Button's host array\n\t * @private\n\t */\n\t_nodeToHost: function (node, buttons) {\n\t\tif (!buttons) {\n\t\t\tbuttons = this.s.buttons;\n\t\t}\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tif (buttons[i].node === node) {\n\t\t\t\treturn buttons;\n\t\t\t}\n\n\t\t\tif (buttons[i].buttons.length) {\n\t\t\t\tvar ret = this._nodeToHost(node, buttons[i].buttons);\n\n\t\t\t\tif (ret) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Handle a key press - determine if any button's key configured matches\n\t * what was typed and trigger the action if so.\n\t * @param  {string} character The character pressed\n\t * @param  {object} e Key event that triggered this call\n\t * @private\n\t */\n\t_keypress: function (character, e) {\n\t\t// Check if this button press already activated on another instance of Buttons\n\t\tif (e._buttonsHandled) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar run = function (conf, node) {\n\t\t\tif (!conf.key) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (conf.key === character) {\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t\telse if ($.isPlainObject(conf.key)) {\n\t\t\t\tif (conf.key.key !== character) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (conf.key.shiftKey && !e.shiftKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (conf.key.altKey && !e.altKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (conf.key.ctrlKey && !e.ctrlKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (conf.key.metaKey && !e.metaKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Made it this far - it is good\n\t\t\t\te._buttonsHandled = true;\n\t\t\t\t$(node).click();\n\t\t\t}\n\t\t};\n\n\t\tvar recurse = function (a) {\n\t\t\tfor (var i = 0, ien = a.length; i < ien; i++) {\n\t\t\t\trun(a[i].conf, a[i].node);\n\n\t\t\t\tif (a[i].buttons.length) {\n\t\t\t\t\trecurse(a[i].buttons);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\trecurse(this.s.buttons);\n\t},\n\n\t/**\n\t * Remove a key from the key listener for this instance (to be used when a\n\t * button is removed)\n\t * @param  {object} conf Button configuration\n\t * @private\n\t */\n\t_removeKey: function (conf) {\n\t\tif (conf.key) {\n\t\t\tvar character = $.isPlainObject(conf.key) ? conf.key.key : conf.key;\n\n\t\t\t// Remove only one character, as multiple buttons could have the\n\t\t\t// same listening key\n\t\t\tvar a = this.s.listenKeys.split('');\n\t\t\tvar idx = $.inArray(character, a);\n\t\t\ta.splice(idx, 1);\n\t\t\tthis.s.listenKeys = a.join('');\n\t\t}\n\t},\n\n\t/**\n\t * Resolve a button configuration\n\t * @param  {string|function|object} conf Button config to resolve\n\t * @return {object} Button configuration\n\t * @private\n\t */\n\t_resolveExtends: function (conf) {\n\t\tvar that = this;\n\t\tvar dt = this.s.dt;\n\t\tvar i, ien;\n\t\tvar toConfObject = function (base) {\n\t\t\tvar loop = 0;\n\n\t\t\t// Loop until we have resolved to a button configuration, or an\n\t\t\t// array of button configurations (which will be iterated\n\t\t\t// separately)\n\t\t\twhile (!$.isPlainObject(base) && !Array.isArray(base)) {\n\t\t\t\tif (base === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (typeof base === 'function') {\n\t\t\t\t\tbase = base.call(that, dt, conf);\n\n\t\t\t\t\tif (!base) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (typeof base === 'string') {\n\t\t\t\t\tif (!_dtButtons[base]) {\n\t\t\t\t\t\treturn { html: base };\n\t\t\t\t\t}\n\n\t\t\t\t\tbase = _dtButtons[base];\n\t\t\t\t}\n\n\t\t\t\tloop++;\n\t\t\t\tif (loop > 30) {\n\t\t\t\t\t// Protect against misconfiguration killing the browser\n\t\t\t\t\tthrow 'Buttons: Too many iterations';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn Array.isArray(base) ? base : $.extend({}, base);\n\t\t};\n\n\t\tconf = toConfObject(conf);\n\n\t\twhile (conf && conf.extend) {\n\t\t\t// Use `toConfObject` in case the button definition being extended\n\t\t\t// is itself a string or a function\n\t\t\tif (!_dtButtons[conf.extend]) {\n\t\t\t\tthrow 'Cannot extend unknown button type: ' + conf.extend;\n\t\t\t}\n\n\t\t\tvar objArray = toConfObject(_dtButtons[conf.extend]);\n\t\t\tif (Array.isArray(objArray)) {\n\t\t\t\treturn objArray;\n\t\t\t}\n\t\t\telse if (!objArray) {\n\t\t\t\t// This is a little brutal as it might be possible to have a\n\t\t\t\t// valid button without the extend, but if there is no extend\n\t\t\t\t// then the host button would be acting in an undefined state\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Stash the current class name\n\t\t\tvar originalClassName = objArray.className;\n\n\t\t\tif (conf.config !== undefined && objArray.config !== undefined) {\n\t\t\t\tconf.config = $.extend({}, objArray.config, conf.config);\n\t\t\t}\n\n\t\t\tconf = $.extend({}, objArray, conf);\n\n\t\t\t// The extend will have overwritten the original class name if the\n\t\t\t// `conf` object also assigned a class, but we want to concatenate\n\t\t\t// them so they are list that is combined from all extended buttons\n\t\t\tif (originalClassName && conf.className !== originalClassName) {\n\t\t\t\tconf.className = originalClassName + ' ' + conf.className;\n\t\t\t}\n\n\t\t\t// Although we want the `conf` object to overwrite almost all of\n\t\t\t// the properties of the object being extended, the `extend`\n\t\t\t// property should come from the object being extended\n\t\t\tconf.extend = objArray.extend;\n\t\t}\n\n\t\t// Buttons to be added to a collection  -gives the ability to define\n\t\t// if buttons should be added to the start or end of a collection\n\t\tvar postfixButtons = conf.postfixButtons;\n\t\tif (postfixButtons) {\n\t\t\tif (!conf.buttons) {\n\t\t\t\tconf.buttons = [];\n\t\t\t}\n\n\t\t\tfor (i = 0, ien = postfixButtons.length; i < ien; i++) {\n\t\t\t\tconf.buttons.push(postfixButtons[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar prefixButtons = conf.prefixButtons;\n\t\tif (prefixButtons) {\n\t\t\tif (!conf.buttons) {\n\t\t\t\tconf.buttons = [];\n\t\t\t}\n\n\t\t\tfor (i = 0, ien = prefixButtons.length; i < ien; i++) {\n\t\t\t\tconf.buttons.splice(i, 0, prefixButtons[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn conf;\n\t},\n\n\t/**\n\t * Display (and replace if there is an existing one) a popover attached to a button\n\t * @param {string|node} content Content to show\n\t * @param {DataTable.Api} hostButton DT API instance of the button\n\t * @param {object} inOpts Options (see object below for all options)\n\t */\n\t_popover: function (content, hostButton, inOpts) {\n\t\tvar dt = hostButton;\n\t\tvar c = this.c;\n\t\tvar closed = false;\n\t\tvar options = $.extend(\n\t\t\t{\n\t\t\t\talign: 'button-left', // button-right, dt-container, split-left, split-right\n\t\t\t\tautoClose: false,\n\t\t\t\tbackground: true,\n\t\t\t\tbackgroundClassName: 'dt-button-background',\n\t\t\t\tcloseButton: true,\n\t\t\t\tcontainerClassName: c.dom.collection.container.className,\n\t\t\t\tcontentClassName: c.dom.collection.container.content.className,\n\t\t\t\tcollectionLayout: '',\n\t\t\t\tcollectionTitle: '',\n\t\t\t\tdropup: false,\n\t\t\t\tfade: 400,\n\t\t\t\tpopoverTitle: '',\n\t\t\t\trightAlignClassName: 'dt-button-right',\n\t\t\t\ttag: c.dom.collection.container.tag\n\t\t\t},\n\t\t\tinOpts\n\t\t);\n\n\t\tvar containerSelector =\n\t\t\toptions.tag + '.' + options.containerClassName.replace(/ /g, '.');\n\t\tvar hostNode = hostButton.node();\n\n\t\tvar close = function () {\n\t\t\tclosed = true;\n\n\t\t\t_fadeOut($(containerSelector), options.fade, function () {\n\t\t\t\t$(this).detach();\n\t\t\t});\n\n\t\t\t$(\n\t\t\t\tdt\n\t\t\t\t\t.buttons('[aria-haspopup=\"dialog\"][aria-expanded=\"true\"]')\n\t\t\t\t\t.nodes()\n\t\t\t).attr('aria-expanded', 'false');\n\n\t\t\t$('div.dt-button-background').off('click.dtb-collection');\n\t\t\tButtons.background(\n\t\t\t\tfalse,\n\t\t\t\toptions.backgroundClassName,\n\t\t\t\toptions.fade,\n\t\t\t\thostNode\n\t\t\t);\n\n\t\t\t$(window).off('resize.resize.dtb-collection');\n\t\t\t$('body').off('.dtb-collection');\n\t\t\tdt.off('buttons-action.b-internal');\n\t\t\tdt.off('destroy');\n\t\t};\n\n\t\tif (content === false) {\n\t\t\tclose();\n\t\t\treturn;\n\t\t}\n\n\t\tvar existingExpanded = $(\n\t\t\tdt.buttons('[aria-haspopup=\"dialog\"][aria-expanded=\"true\"]').nodes()\n\t\t);\n\t\tif (existingExpanded.length) {\n\t\t\t// Reuse the current position if the button that was triggered is inside an existing collection\n\t\t\tif (hostNode.closest(containerSelector).length) {\n\t\t\t\thostNode = existingExpanded.eq(0);\n\t\t\t}\n\n\t\t\tclose();\n\t\t}\n\n\t\t// Try to be smart about the layout\n\t\tvar cnt = $('.dt-button', content).length;\n\t\tvar mod = '';\n\n\t\tif (cnt === 3) {\n\t\t\tmod = 'dtb-b3';\n\t\t}\n\t\telse if (cnt === 2) {\n\t\t\tmod = 'dtb-b2';\n\t\t}\n\t\telse if (cnt === 1) {\n\t\t\tmod = 'dtb-b1';\n\t\t}\n\n\t\tvar display = $('<' + options.tag + '/>')\n\t\t\t.addClass(options.containerClassName)\n\t\t\t.addClass(options.collectionLayout)\n\t\t\t.addClass(options.splitAlignClass)\n\t\t\t.addClass(mod)\n\t\t\t.css('display', 'none')\n\t\t\t.attr({\n\t\t\t\t'aria-modal': true,\n\t\t\t\trole: 'dialog'\n\t\t\t});\n\n\t\tcontent = $(content)\n\t\t\t.addClass(options.contentClassName)\n\t\t\t.attr('role', 'menu')\n\t\t\t.appendTo(display);\n\n\t\thostNode.attr('aria-expanded', 'true');\n\n\t\tif (hostNode.parents('body')[0] !== document.body) {\n\t\t\thostNode = document.body.lastChild;\n\t\t}\n\n\t\tif (options.popoverTitle) {\n\t\t\tdisplay.prepend(\n\t\t\t\t'<div class=\"dt-button-collection-title\">' +\n\t\t\t\t\toptions.popoverTitle +\n\t\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\t\telse if (options.collectionTitle) {\n\t\t\tdisplay.prepend(\n\t\t\t\t'<div class=\"dt-button-collection-title\">' +\n\t\t\t\t\toptions.collectionTitle +\n\t\t\t\t\t'</div>'\n\t\t\t);\n\t\t}\n\n\t\tif (options.closeButton) {\n\t\t\tdisplay\n\t\t\t\t.prepend('<div class=\"dtb-popover-close\">&times;</div>')\n\t\t\t\t.addClass('dtb-collection-closeable');\n\t\t}\n\n\t\t_fadeIn(display.insertAfter(hostNode), options.fade);\n\n\t\tvar tableContainer = $(hostButton.table().container());\n\t\tvar position = display.css('position');\n\n\t\tif (options.span === 'container' || options.align === 'dt-container') {\n\t\t\thostNode = hostNode.parent();\n\t\t\tdisplay.css('width', tableContainer.width());\n\t\t}\n\n\t\t// Align the popover relative to the DataTables container\n\t\t// Useful for wide popovers such as SearchPanes\n\t\tif (position === 'absolute') {\n\t\t\t// Align relative to the host button\n\t\t\tvar offsetParent = $(hostNode[0].offsetParent);\n\t\t\tvar buttonPosition = hostNode.position();\n\t\t\tvar buttonOffset = hostNode.offset();\n\t\t\tvar tableSizes = offsetParent.offset();\n\t\t\tvar containerPosition = offsetParent.position();\n\t\t\tvar computed = window.getComputedStyle(offsetParent[0]);\n\n\t\t\ttableSizes.height = offsetParent.outerHeight();\n\t\t\ttableSizes.width =\n\t\t\t\toffsetParent.width() + parseFloat(computed.paddingLeft);\n\t\t\ttableSizes.right = tableSizes.left + tableSizes.width;\n\t\t\ttableSizes.bottom = tableSizes.top + tableSizes.height;\n\n\t\t\t// Set the initial position so we can read height / width\n\t\t\tvar top = buttonPosition.top + hostNode.outerHeight();\n\t\t\tvar left = buttonPosition.left;\n\n\t\t\tdisplay.css({\n\t\t\t\ttop: top,\n\t\t\t\tleft: left\n\t\t\t});\n\n\t\t\t// Get the popover position\n\t\t\tcomputed = window.getComputedStyle(display[0]);\n\t\t\tvar popoverSizes = display.offset();\n\n\t\t\tpopoverSizes.height = display.outerHeight();\n\t\t\tpopoverSizes.width = display.outerWidth();\n\t\t\tpopoverSizes.right = popoverSizes.left + popoverSizes.width;\n\t\t\tpopoverSizes.bottom = popoverSizes.top + popoverSizes.height;\n\t\t\tpopoverSizes.marginTop = parseFloat(computed.marginTop);\n\t\t\tpopoverSizes.marginBottom = parseFloat(computed.marginBottom);\n\n\t\t\t// First position per the class requirements - pop up and right align\n\t\t\tif (options.dropup) {\n\t\t\t\ttop =\n\t\t\t\t\tbuttonPosition.top -\n\t\t\t\t\tpopoverSizes.height -\n\t\t\t\t\tpopoverSizes.marginTop -\n\t\t\t\t\tpopoverSizes.marginBottom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\toptions.align === 'button-right' ||\n\t\t\t\tdisplay.hasClass(options.rightAlignClassName)\n\t\t\t) {\n\t\t\t\tleft =\n\t\t\t\t\tbuttonPosition.left -\n\t\t\t\t\tpopoverSizes.width +\n\t\t\t\t\thostNode.outerWidth();\n\t\t\t}\n\n\t\t\t// Container alignment - make sure it doesn't overflow the table container\n\t\t\tif (\n\t\t\t\toptions.align === 'dt-container' ||\n\t\t\t\toptions.align === 'container'\n\t\t\t) {\n\t\t\t\tif (left < buttonPosition.left) {\n\t\t\t\t\tleft = -buttonPosition.left;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Window adjustment\n\t\t\tif (\n\t\t\t\tcontainerPosition.left + left + popoverSizes.width >\n\t\t\t\t$(window).width()\n\t\t\t) {\n\t\t\t\t// Overflowing the document to the right\n\t\t\t\tleft =\n\t\t\t\t\t$(window).width() -\n\t\t\t\t\tpopoverSizes.width -\n\t\t\t\t\tcontainerPosition.left;\n\t\t\t}\n\n\t\t\tif (buttonOffset.left + left < 0) {\n\t\t\t\t// Off to the left of the document\n\t\t\t\tleft = -buttonOffset.left;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tcontainerPosition.top + top + popoverSizes.height >\n\t\t\t\t$(window).height() + $(window).scrollTop()\n\t\t\t) {\n\t\t\t\t// Pop up if otherwise we'd need the user to scroll down\n\t\t\t\ttop =\n\t\t\t\t\tbuttonPosition.top -\n\t\t\t\t\tpopoverSizes.height -\n\t\t\t\t\tpopoverSizes.marginTop -\n\t\t\t\t\tpopoverSizes.marginBottom;\n\t\t\t}\n\n\t\t\tif (containerPosition.top + top < $(window).scrollTop()) {\n\t\t\t\t// Correction for when the top is beyond the top of the page\n\t\t\t\ttop = buttonPosition.top + hostNode.outerHeight();\n\t\t\t}\n\n\t\t\t// Calculations all done - now set it\n\t\t\tdisplay.css({\n\t\t\t\ttop: top,\n\t\t\t\tleft: left\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\t// Fix position - centre on screen\n\t\t\tvar place = function () {\n\t\t\t\tvar half = $(window).height() / 2;\n\n\t\t\t\tvar top = display.height() / 2;\n\t\t\t\tif (top > half) {\n\t\t\t\t\ttop = half;\n\t\t\t\t}\n\n\t\t\t\tdisplay.css('marginTop', top * -1);\n\t\t\t};\n\n\t\t\tplace();\n\n\t\t\t$(window).on('resize.dtb-collection', function () {\n\t\t\t\tplace();\n\t\t\t});\n\t\t}\n\n\t\tif (options.background) {\n\t\t\tButtons.background(\n\t\t\t\ttrue,\n\t\t\t\toptions.backgroundClassName,\n\t\t\t\toptions.fade,\n\t\t\t\toptions.backgroundHost || hostNode\n\t\t\t);\n\t\t}\n\n\t\t// This is bonkers, but if we don't have a click listener on the\n\t\t// background element, iOS Safari will ignore the body click\n\t\t// listener below. An empty function here is all that is\n\t\t// required to make it work...\n\t\t$('div.dt-button-background').on(\n\t\t\t'click.dtb-collection',\n\t\t\tfunction () {}\n\t\t);\n\n\t\tif (options.autoClose) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tdt.on('buttons-action.b-internal', function (e, btn, dt, node) {\n\t\t\t\t\tif (node[0] === hostNode[0]) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tclose();\n\t\t\t\t});\n\t\t\t}, 0);\n\t\t}\n\n\t\t$(display).trigger('buttons-popover.dt');\n\n\t\tdt.on('destroy', close);\n\n\t\tsetTimeout(function () {\n\t\t\tclosed = false;\n\t\t\t$('body')\n\t\t\t\t.on('click.dtb-collection', function (e) {\n\t\t\t\t\tif (closed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// andSelf is deprecated in jQ1.8, but we want 1.7 compat\n\t\t\t\t\tvar back = $.fn.addBack ? 'addBack' : 'andSelf';\n\t\t\t\t\tvar parent = $(e.target).parent()[0];\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t(!$(e.target).parents()[back]().filter(content)\n\t\t\t\t\t\t\t.length &&\n\t\t\t\t\t\t\t!$(parent).hasClass('dt-buttons')) ||\n\t\t\t\t\t\t$(e.target).hasClass('dt-button-background')\n\t\t\t\t\t) {\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keyup.dtb-collection', function (e) {\n\t\t\t\t\tif (e.keyCode === 27) {\n\t\t\t\t\t\tclose();\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.on('keydown.dtb-collection', function (e) {\n\t\t\t\t\t// Focus trap for tab key\n\t\t\t\t\tvar elements = $('a, button', content);\n\t\t\t\t\tvar active = document.activeElement;\n\n\t\t\t\t\tif (e.keyCode !== 9) {\n\t\t\t\t\t\t// tab\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (elements.index(active) === -1) {\n\t\t\t\t\t\t// If current focus is not inside the popover\n\t\t\t\t\t\telements.first().focus();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\telse if (e.shiftKey) {\n\t\t\t\t\t\t// Reverse tabbing order when shift key is pressed\n\t\t\t\t\t\tif (active === elements[0]) {\n\t\t\t\t\t\t\telements.last().focus();\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (active === elements.last()[0]) {\n\t\t\t\t\t\t\telements.first().focus();\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}, 0);\n\t}\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n */\n\n/**\n * Show / hide a background layer behind a collection\n * @param  {boolean} Flag to indicate if the background should be shown or\n *   hidden\n * @param  {string} Class to assign to the background\n * @static\n */\nButtons.background = function (show, className, fade, insertPoint) {\n\tif (fade === undefined) {\n\t\tfade = 400;\n\t}\n\tif (!insertPoint) {\n\t\tinsertPoint = document.body;\n\t}\n\n\tif (show) {\n\t\t_fadeIn(\n\t\t\t$('<div/>')\n\t\t\t\t.addClass(className)\n\t\t\t\t.css('display', 'none')\n\t\t\t\t.insertAfter(insertPoint),\n\t\t\tfade\n\t\t);\n\t}\n\telse {\n\t\t_fadeOut($('div.' + className), fade, function () {\n\t\t\t$(this).removeClass(className).remove();\n\t\t});\n\t}\n};\n\n/**\n * Instance selector - select Buttons instances based on an instance selector\n * value from the buttons assigned to a DataTable. This is only useful if\n * multiple instances are attached to a DataTable.\n * @param  {string|int|array} Instance selector - see `instance-selector`\n *   documentation on the DataTables site\n * @param  {array} Button instance array that was attached to the DataTables\n *   settings object\n * @return {array} Buttons instances\n * @static\n */\nButtons.instanceSelector = function (group, buttons) {\n\tif (group === undefined || group === null) {\n\t\treturn $.map(buttons, function (v) {\n\t\t\treturn v.inst;\n\t\t});\n\t}\n\n\tvar ret = [];\n\tvar names = $.map(buttons, function (v) {\n\t\treturn v.name;\n\t});\n\n\t// Flatten the group selector into an array of single options\n\tvar process = function (input) {\n\t\tif (Array.isArray(input)) {\n\t\t\tfor (var i = 0, ien = input.length; i < ien; i++) {\n\t\t\t\tprocess(input[i]);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof input === 'string') {\n\t\t\tif (input.indexOf(',') !== -1) {\n\t\t\t\t// String selector, list of names\n\t\t\t\tprocess(input.split(','));\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// String selector individual name\n\t\t\t\tvar idx = $.inArray(input.trim(), names);\n\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tret.push(buttons[idx].inst);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (typeof input === 'number') {\n\t\t\t// Index selector\n\t\t\tret.push(buttons[input].inst);\n\t\t}\n\t\telse if (typeof input === 'object') {\n\t\t\t// Actual instance selector\n\t\t\tret.push(input);\n\t\t}\n\t};\n\n\tprocess(group);\n\n\treturn ret;\n};\n\n/**\n * Button selector - select one or more buttons from a selector input so some\n * operation can be performed on them.\n * @param  {array} Button instances array that the selector should operate on\n * @param  {string|int|node|jQuery|array} Button selector - see\n *   `button-selector` documentation on the DataTables site\n * @return {array} Array of objects containing `inst` and `idx` properties of\n *   the selected buttons so you know which instance each button belongs to.\n * @static\n */\nButtons.buttonSelector = function (insts, selector) {\n\tvar ret = [];\n\tvar nodeBuilder = function (a, buttons, baseIdx) {\n\t\tvar button;\n\t\tvar idx;\n\n\t\tfor (var i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\tbutton = buttons[i];\n\n\t\t\tif (button) {\n\t\t\t\tidx = baseIdx !== undefined ? baseIdx + i : i + '';\n\n\t\t\t\ta.push({\n\t\t\t\t\tnode: button.node,\n\t\t\t\t\tname: button.conf.name,\n\t\t\t\t\tidx: idx\n\t\t\t\t});\n\n\t\t\t\tif (button.buttons) {\n\t\t\t\t\tnodeBuilder(a, button.buttons, idx + '-');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tvar run = function (selector, inst) {\n\t\tvar i, ien;\n\t\tvar buttons = [];\n\t\tnodeBuilder(buttons, inst.s.buttons);\n\n\t\tvar nodes = $.map(buttons, function (v) {\n\t\t\treturn v.node;\n\t\t});\n\n\t\tif (Array.isArray(selector) || selector instanceof $) {\n\t\t\tfor (i = 0, ien = selector.length; i < ien; i++) {\n\t\t\t\trun(selector[i], inst);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (selector === null || selector === undefined || selector === '*') {\n\t\t\t// Select all\n\t\t\tfor (i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\t\tret.push({\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if (typeof selector === 'number') {\n\t\t\t// Main button index selector\n\t\t\tif (inst.s.buttons[selector]) {\n\t\t\t\tret.push({\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: inst.s.buttons[selector].node\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if (typeof selector === 'string') {\n\t\t\tif (selector.indexOf(',') !== -1) {\n\t\t\t\t// Split\n\t\t\t\tvar a = selector.split(',');\n\n\t\t\t\tfor (i = 0, ien = a.length; i < ien; i++) {\n\t\t\t\t\trun(a[i].trim(), inst);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (selector.match(/^\\d+(\\-\\d+)*$/)) {\n\t\t\t\t// Sub-button index selector\n\t\t\t\tvar indexes = $.map(buttons, function (v) {\n\t\t\t\t\treturn v.idx;\n\t\t\t\t});\n\n\t\t\t\tret.push({\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: buttons[$.inArray(selector, indexes)].node\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (selector.indexOf(':name') !== -1) {\n\t\t\t\t// Button name selector\n\t\t\t\tvar name = selector.replace(':name', '');\n\n\t\t\t\tfor (i = 0, ien = buttons.length; i < ien; i++) {\n\t\t\t\t\tif (buttons[i].name === name) {\n\t\t\t\t\t\tret.push({\n\t\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\t\tnode: buttons[i].node\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// jQuery selector on the nodes\n\t\t\t\t$(nodes)\n\t\t\t\t\t.filter(selector)\n\t\t\t\t\t.each(function () {\n\t\t\t\t\t\tret.push({\n\t\t\t\t\t\t\tinst: inst,\n\t\t\t\t\t\t\tnode: this\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if (typeof selector === 'object' && selector.nodeName) {\n\t\t\t// Node selector\n\t\t\tvar idx = $.inArray(selector, nodes);\n\n\t\t\tif (idx !== -1) {\n\t\t\t\tret.push({\n\t\t\t\t\tinst: inst,\n\t\t\t\t\tnode: nodes[idx]\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tfor (var i = 0, ien = insts.length; i < ien; i++) {\n\t\tvar inst = insts[i];\n\n\t\trun(selector, inst);\n\t}\n\n\treturn ret;\n};\n\n/**\n * Default function used for formatting output data.\n * @param {*} str Data to strip\n */\nButtons.stripData = function (str, config) {\n\tif (typeof str !== 'string') {\n\t\treturn str;\n\t}\n\n\t// Always remove script tags\n\tstr = str.replace(\n\t\t/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n\t\t''\n\t);\n\n\t// Always remove comments\n\tstr = str.replace(/<!\\-\\-.*?\\-\\->/g, '');\n\n\tif (!config || config.stripHtml) {\n\t\tstr = str.replace(/<[^>]*>/g, '');\n\t}\n\n\tif (!config || config.trim) {\n\t\tstr = str.replace(/^\\s+|\\s+$/g, '');\n\t}\n\n\tif (!config || config.stripNewlines) {\n\t\tstr = str.replace(/\\n/g, ' ');\n\t}\n\n\tif (!config || config.decodeEntities) {\n\t\tif (_entityDecoder) {\n\t\t\tstr = _entityDecoder(str);\n\t\t}\n\t\telse {\n\t\t\t_exportTextarea.innerHTML = str;\n\t\t\tstr = _exportTextarea.value;\n\t\t}\n\t}\n\n\treturn str;\n};\n\n/**\n * Provide a custom entity decoding function - e.g. a regex one, which can be\n * much faster than the built in DOM option, but also larger code size.\n * @param {function} fn\n */\nButtons.entityDecoder = function (fn) {\n\t_entityDecoder = fn;\n};\n\n/**\n * Buttons defaults. For full documentation, please refer to the docs/option\n * directory or the DataTables site.\n * @type {Object}\n * @static\n */\nButtons.defaults = {\n\tbuttons: ['copy', 'excel', 'csv', 'pdf', 'print'],\n\tname: 'main',\n\ttabIndex: 0,\n\tdom: {\n\t\tcontainer: {\n\t\t\ttag: 'div',\n\t\t\tclassName: 'dt-buttons'\n\t\t},\n\t\tcollection: {\n\t\t\taction: {\n\t\t\t\t// action button\n\t\t\t\tdropHtml: '<span class=\"dt-button-down-arrow\">&#x25BC;</span>'\n\t\t\t},\n\t\t\tcontainer: {\n\t\t\t\t// The element used for the dropdown\n\t\t\t\tclassName: 'dt-button-collection',\n\t\t\t\tcontent: {\n\t\t\t\t\tclassName: '',\n\t\t\t\t\ttag: 'div'\n\t\t\t\t},\n\t\t\t\ttag: 'div'\n\t\t\t}\n\t\t\t// optionally\n\t\t\t// , button: IButton - buttons inside the collection container\n\t\t\t// , split: ISplit - splits inside the collection container\n\t\t},\n\t\tbutton: {\n\t\t\ttag: 'button',\n\t\t\tclassName: 'dt-button',\n\t\t\tactive: 'dt-button-active', // class name\n\t\t\tdisabled: 'disabled', // class name\n\t\t\tspacer: {\n\t\t\t\tclassName: 'dt-button-spacer',\n\t\t\t\ttag: 'span'\n\t\t\t},\n\t\t\tliner: {\n\t\t\t\ttag: 'span',\n\t\t\t\tclassName: ''\n\t\t\t}\n\t\t},\n\t\tsplit: {\n\t\t\taction: {\n\t\t\t\t// action button\n\t\t\t\tclassName: 'dt-button-split-drop-button dt-button',\n\t\t\t\ttag: 'button'\n\t\t\t},\n\t\t\tdropdown: {\n\t\t\t\t// button to trigger the dropdown\n\t\t\t\talign: 'split-right',\n\t\t\t\tclassName: 'dt-button-split-drop',\n\t\t\t\tdropHtml: '<span class=\"dt-button-down-arrow\">&#x25BC;</span>',\n\t\t\t\tsplitAlignClass: 'dt-button-split-left',\n\t\t\t\ttag: 'button'\n\t\t\t},\n\t\t\twrapper: {\n\t\t\t\t// wrap around both\n\t\t\t\tclassName: 'dt-button-split',\n\t\t\t\ttag: 'div'\n\t\t\t}\n\t\t}\n\t}\n};\n\n/**\n * Version information\n * @type {string}\n * @static\n */\nButtons.version = '3.0.0';\n\n$.extend(_dtButtons, {\n\tcollection: {\n\t\ttext: function (dt) {\n\t\t\treturn dt.i18n('buttons.collection', 'Collection');\n\t\t},\n\t\tclassName: 'buttons-collection',\n\t\tcloseButton: false,\n\t\tinit: function (dt, button) {\n\t\t\tbutton.attr('aria-expanded', false);\n\t\t},\n\t\taction: function (e, dt, button, config) {\n\t\t\tif (config._collection.parents('body').length) {\n\t\t\t\tthis.popover(false, config);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.popover(config._collection, config);\n\t\t\t}\n\n\t\t\t// When activated using a key - auto focus on the\n\t\t\t// first item in the popover\n\t\t\tif (e.type === 'keypress') {\n\t\t\t\t$('a, button', config._collection).eq(0).focus();\n\t\t\t}\n\t\t},\n\t\tattr: {\n\t\t\t'aria-haspopup': 'dialog'\n\t\t}\n\t\t// Also the popover options, defined in Buttons.popover\n\t},\n\tsplit: {\n\t\ttext: function (dt) {\n\t\t\treturn dt.i18n('buttons.split', 'Split');\n\t\t},\n\t\tclassName: 'buttons-split',\n\t\tcloseButton: false,\n\t\tinit: function (dt, button) {\n\t\t\treturn button.attr('aria-expanded', false);\n\t\t},\n\t\taction: function (e, dt, button, config) {\n\t\t\tthis.popover(config._collection, config);\n\t\t},\n\t\tattr: {\n\t\t\t'aria-haspopup': 'dialog'\n\t\t}\n\t\t// Also the popover options, defined in Buttons.popover\n\t},\n\tcopy: function () {\n\t\tif (_dtButtons.copyHtml5) {\n\t\t\treturn 'copyHtml5';\n\t\t}\n\t},\n\tcsv: function (dt, conf) {\n\t\tif (_dtButtons.csvHtml5 && _dtButtons.csvHtml5.available(dt, conf)) {\n\t\t\treturn 'csvHtml5';\n\t\t}\n\t},\n\texcel: function (dt, conf) {\n\t\tif (\n\t\t\t_dtButtons.excelHtml5 &&\n\t\t\t_dtButtons.excelHtml5.available(dt, conf)\n\t\t) {\n\t\t\treturn 'excelHtml5';\n\t\t}\n\t},\n\tpdf: function (dt, conf) {\n\t\tif (_dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available(dt, conf)) {\n\t\t\treturn 'pdfHtml5';\n\t\t}\n\t},\n\tpageLength: function (dt) {\n\t\tvar lengthMenu = dt.settings()[0].aLengthMenu;\n\t\tvar vals = [];\n\t\tvar lang = [];\n\t\tvar text = function (dt) {\n\t\t\treturn dt.i18n(\n\t\t\t\t'buttons.pageLength',\n\t\t\t\t{\n\t\t\t\t\t'-1': 'Show all rows',\n\t\t\t\t\t_: 'Show %d rows'\n\t\t\t\t},\n\t\t\t\tdt.page.len()\n\t\t\t);\n\t\t};\n\n\t\t// Support for DataTables 1.x 2D array\n\t\tif (Array.isArray(lengthMenu[0])) {\n\t\t\tvals = lengthMenu[0];\n\t\t\tlang = lengthMenu[1];\n\t\t}\n\t\telse {\n\t\t\tfor (var i = 0; i < lengthMenu.length; i++) {\n\t\t\t\tvar option = lengthMenu[i];\n\n\t\t\t\t// Support for DataTables 2 object in the array\n\t\t\t\tif ($.isPlainObject(option)) {\n\t\t\t\t\tvals.push(option.value);\n\t\t\t\t\tlang.push(option.label);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvals.push(option);\n\t\t\t\t\tlang.push(option);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\textend: 'collection',\n\t\t\ttext: text,\n\t\t\tclassName: 'buttons-page-length',\n\t\t\tautoClose: true,\n\t\t\tbuttons: $.map(vals, function (val, i) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: lang[i],\n\t\t\t\t\tclassName: 'button-page-length',\n\t\t\t\t\taction: function (e, dt) {\n\t\t\t\t\t\tdt.page.len(val).draw();\n\t\t\t\t\t},\n\t\t\t\t\tinit: function (dt, node, conf) {\n\t\t\t\t\t\tvar that = this;\n\t\t\t\t\t\tvar fn = function () {\n\t\t\t\t\t\t\tthat.active(dt.page.len() === val);\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tdt.on('length.dt' + conf.namespace, fn);\n\t\t\t\t\t\tfn();\n\t\t\t\t\t},\n\t\t\t\t\tdestroy: function (dt, node, conf) {\n\t\t\t\t\t\tdt.off('length.dt' + conf.namespace);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}),\n\t\t\tinit: function (dt, node, conf) {\n\t\t\t\tvar that = this;\n\t\t\t\tdt.on('length.dt' + conf.namespace, function () {\n\t\t\t\t\tthat.text(conf.text);\n\t\t\t\t});\n\t\t\t},\n\t\t\tdestroy: function (dt, node, conf) {\n\t\t\t\tdt.off('length.dt' + conf.namespace);\n\t\t\t}\n\t\t};\n\t},\n\tspacer: {\n\t\tstyle: 'empty',\n\t\tspacer: true,\n\t\ttext: function (dt) {\n\t\t\treturn dt.i18n('buttons.spacer', '');\n\t\t}\n\t}\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Buttons group and individual button selector\nDataTable.Api.register('buttons()', function (group, selector) {\n\t// Argument shifting\n\tif (selector === undefined) {\n\t\tselector = group;\n\t\tgroup = undefined;\n\t}\n\n\tthis.selector.buttonGroup = group;\n\n\tvar res = this.iterator(\n\t\ttrue,\n\t\t'table',\n\t\tfunction (ctx) {\n\t\t\tif (ctx._buttons) {\n\t\t\t\treturn Buttons.buttonSelector(\n\t\t\t\t\tButtons.instanceSelector(group, ctx._buttons),\n\t\t\t\t\tselector\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\ttrue\n\t);\n\n\tres._groupSelector = group;\n\treturn res;\n});\n\n// Individual button selector\nDataTable.Api.register('button()', function (group, selector) {\n\t// just run buttons() and truncate\n\tvar buttons = this.buttons(group, selector);\n\n\tif (buttons.length > 1) {\n\t\tbuttons.splice(1, buttons.length);\n\t}\n\n\treturn buttons;\n});\n\n// Active buttons\nDataTable.Api.registerPlural(\n\t'buttons().active()',\n\t'button().active()',\n\tfunction (flag) {\n\t\tif (flag === undefined) {\n\t\t\treturn this.map(function (set) {\n\t\t\t\treturn set.inst.active(set.node);\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function (set) {\n\t\t\tset.inst.active(set.node, flag);\n\t\t});\n\t}\n);\n\n// Get / set button action\nDataTable.Api.registerPlural(\n\t'buttons().action()',\n\t'button().action()',\n\tfunction (action) {\n\t\tif (action === undefined) {\n\t\t\treturn this.map(function (set) {\n\t\t\t\treturn set.inst.action(set.node);\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function (set) {\n\t\t\tset.inst.action(set.node, action);\n\t\t});\n\t}\n);\n\n// Collection control\nDataTable.Api.registerPlural(\n\t'buttons().collectionRebuild()',\n\t'button().collectionRebuild()',\n\tfunction (buttons) {\n\t\treturn this.each(function (set) {\n\t\t\tfor (var i = 0; i < buttons.length; i++) {\n\t\t\t\tif (typeof buttons[i] === 'object') {\n\t\t\t\t\tbuttons[i].parentConf = set;\n\t\t\t\t}\n\t\t\t}\n\t\t\tset.inst.collectionRebuild(set.node, buttons);\n\t\t});\n\t}\n);\n\n// Enable / disable buttons\nDataTable.Api.register(\n\t['buttons().enable()', 'button().enable()'],\n\tfunction (flag) {\n\t\treturn this.each(function (set) {\n\t\t\tset.inst.enable(set.node, flag);\n\t\t});\n\t}\n);\n\n// Disable buttons\nDataTable.Api.register(\n\t['buttons().disable()', 'button().disable()'],\n\tfunction () {\n\t\treturn this.each(function (set) {\n\t\t\tset.inst.disable(set.node);\n\t\t});\n\t}\n);\n\n// Button index\nDataTable.Api.register('button().index()', function () {\n\tvar idx = null;\n\n\tthis.each(function (set) {\n\t\tvar res = set.inst.index(set.node);\n\n\t\tif (res !== null) {\n\t\t\tidx = res;\n\t\t}\n\t});\n\n\treturn idx;\n});\n\n// Get button nodes\nDataTable.Api.registerPlural(\n\t'buttons().nodes()',\n\t'button().node()',\n\tfunction () {\n\t\tvar jq = $();\n\n\t\t// jQuery will automatically reduce duplicates to a single entry\n\t\t$(\n\t\t\tthis.each(function (set) {\n\t\t\t\tjq = jq.add(set.inst.node(set.node));\n\t\t\t})\n\t\t);\n\n\t\treturn jq;\n\t}\n);\n\n// Get / set button processing state\nDataTable.Api.registerPlural(\n\t'buttons().processing()',\n\t'button().processing()',\n\tfunction (flag) {\n\t\tif (flag === undefined) {\n\t\t\treturn this.map(function (set) {\n\t\t\t\treturn set.inst.processing(set.node);\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function (set) {\n\t\t\tset.inst.processing(set.node, flag);\n\t\t});\n\t}\n);\n\n// Get / set button text (i.e. the button labels)\nDataTable.Api.registerPlural(\n\t'buttons().text()',\n\t'button().text()',\n\tfunction (label) {\n\t\tif (label === undefined) {\n\t\t\treturn this.map(function (set) {\n\t\t\t\treturn set.inst.text(set.node);\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function (set) {\n\t\t\tset.inst.text(set.node, label);\n\t\t});\n\t}\n);\n\n// Trigger a button's action\nDataTable.Api.registerPlural(\n\t'buttons().trigger()',\n\t'button().trigger()',\n\tfunction () {\n\t\treturn this.each(function (set) {\n\t\t\tset.inst.node(set.node).trigger('click');\n\t\t});\n\t}\n);\n\n// Button resolver to the popover\nDataTable.Api.register('button().popover()', function (content, options) {\n\treturn this.map(function (set) {\n\t\treturn set.inst._popover(content, this.button(this[0].node), options);\n\t});\n});\n\n// Get the container elements\nDataTable.Api.register('buttons().containers()', function () {\n\tvar jq = $();\n\tvar groupSelector = this._groupSelector;\n\n\t// We need to use the group selector directly, since if there are no buttons\n\t// the result set will be empty\n\tthis.iterator(true, 'table', function (ctx) {\n\t\tif (ctx._buttons) {\n\t\t\tvar insts = Buttons.instanceSelector(groupSelector, ctx._buttons);\n\n\t\t\tfor (var i = 0, ien = insts.length; i < ien; i++) {\n\t\t\t\tjq = jq.add(insts[i].container());\n\t\t\t}\n\t\t}\n\t});\n\n\treturn jq;\n});\n\nDataTable.Api.register('buttons().container()', function () {\n\t// API level of nesting is `buttons()` so we can zip into the containers method\n\treturn this.containers().eq(0);\n});\n\n// Add a new button\nDataTable.Api.register('button().add()', function (idx, conf, draw) {\n\tvar ctx = this.context;\n\n\t// Don't use `this` as it could be empty - select the instances directly\n\tif (ctx.length) {\n\t\tvar inst = Buttons.instanceSelector(\n\t\t\tthis._groupSelector,\n\t\t\tctx[0]._buttons\n\t\t);\n\n\t\tif (inst.length) {\n\t\t\tinst[0].add(conf, idx, draw);\n\t\t}\n\t}\n\n\treturn this.button(this._groupSelector, idx);\n});\n\n// Destroy the button sets selected\nDataTable.Api.register('buttons().destroy()', function () {\n\tthis.pluck('inst')\n\t\t.unique()\n\t\t.each(function (inst) {\n\t\t\tinst.destroy();\n\t\t});\n\n\treturn this;\n});\n\n// Remove a button\nDataTable.Api.registerPlural(\n\t'buttons().remove()',\n\t'buttons().remove()',\n\tfunction () {\n\t\tthis.each(function (set) {\n\t\t\tset.inst.remove(set.node);\n\t\t});\n\n\t\treturn this;\n\t}\n);\n\n// Information box that can be used by buttons\nvar _infoTimer;\nDataTable.Api.register('buttons.info()', function (title, message, time) {\n\tvar that = this;\n\n\tif (title === false) {\n\t\tthis.off('destroy.btn-info');\n\t\t_fadeOut($('#datatables_buttons_info'), 400, function () {\n\t\t\t$(this).remove();\n\t\t});\n\t\tclearTimeout(_infoTimer);\n\t\t_infoTimer = null;\n\n\t\treturn this;\n\t}\n\n\tif (_infoTimer) {\n\t\tclearTimeout(_infoTimer);\n\t}\n\n\tif ($('#datatables_buttons_info').length) {\n\t\t$('#datatables_buttons_info').remove();\n\t}\n\n\ttitle = title ? '<h2>' + title + '</h2>' : '';\n\n\t_fadeIn(\n\t\t$('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>')\n\t\t\t.html(title)\n\t\t\t.append(\n\t\t\t\t$('<div/>')[typeof message === 'string' ? 'html' : 'append'](\n\t\t\t\t\tmessage\n\t\t\t\t)\n\t\t\t)\n\t\t\t.css('display', 'none')\n\t\t\t.appendTo('body')\n\t);\n\n\tif (time !== undefined && time !== 0) {\n\t\t_infoTimer = setTimeout(function () {\n\t\t\tthat.buttons.info(false);\n\t\t}, time);\n\t}\n\n\tthis.on('destroy.btn-info', function () {\n\t\tthat.buttons.info(false);\n\t});\n\n\treturn this;\n});\n\n// Get data from the table for export - this is common to a number of plug-in\n// buttons so it is included in the Buttons core library\nDataTable.Api.register('buttons.exportData()', function (options) {\n\tif (this.context.length) {\n\t\treturn _exportData(new DataTable.Api(this.context[0]), options);\n\t}\n});\n\n// Get information about the export that is common to many of the export data\n// types (DRY)\nDataTable.Api.register('buttons.exportInfo()', function (conf) {\n\tif (!conf) {\n\t\tconf = {};\n\t}\n\n\treturn {\n\t\tfilename: _filename(conf, this),\n\t\ttitle: _title(conf, this),\n\t\tmessageTop: _message(this, conf, conf.message || conf.messageTop, 'top'),\n\t\tmessageBottom: _message(this, conf, conf.messageBottom, 'bottom')\n\t};\n});\n\n/**\n * Get the file name for an exported file.\n *\n * @param {object} config Button configuration\n * @param {object} dt DataTable instance\n */\nvar _filename = function (config, dt) {\n\t// Backwards compatibility\n\tvar filename =\n\t\tconfig.filename === '*' &&\n\t\tconfig.title !== '*' &&\n\t\tconfig.title !== undefined &&\n\t\tconfig.title !== null &&\n\t\tconfig.title !== ''\n\t\t\t? config.title\n\t\t\t: config.filename;\n\n\tif (typeof filename === 'function') {\n\t\tfilename = filename(config, dt);\n\t}\n\n\tif (filename === undefined || filename === null) {\n\t\treturn null;\n\t}\n\n\tif (filename.indexOf('*') !== -1) {\n\t\tfilename = filename.replace('*', $('head > title').text()).trim();\n\t}\n\n\t// Strip characters which the OS will object to\n\tfilename = filename.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g, '');\n\n\tvar extension = _stringOrFunction(config.extension, config, dt);\n\tif (!extension) {\n\t\textension = '';\n\t}\n\n\treturn filename + extension;\n};\n\n/**\n * Simply utility method to allow parameters to be given as a function\n *\n * @param {undefined|string|function} option Option\n * @return {null|string} Resolved value\n */\nvar _stringOrFunction = function (option, config, dt) {\n\tif (option === null || option === undefined) {\n\t\treturn null;\n\t}\n\telse if (typeof option === 'function') {\n\t\treturn option(config, dt);\n\t}\n\treturn option;\n};\n\n/**\n * Get the title for an exported file.\n *\n * @param {object} config\tButton configuration\n */\nvar _title = function (config, dt) {\n\tvar title = _stringOrFunction(config.title, config, dt);\n\n\treturn title === null\n\t\t? null\n\t\t: title.indexOf('*') !== -1\n\t\t? title.replace('*', $('head > title').text() || 'Exported data')\n\t\t: title;\n};\n\nvar _message = function (dt, config, option, position) {\n\tvar message = _stringOrFunction(option, config, dt);\n\tif (message === null) {\n\t\treturn null;\n\t}\n\n\tvar caption = $('caption', dt.table().container()).eq(0);\n\tif (message === '*') {\n\t\tvar side = caption.css('caption-side');\n\t\tif (side !== position) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn caption.length ? caption.text() : '';\n\t}\n\n\treturn message;\n};\n\nvar _exportTextarea = $('<textarea/>')[0];\nvar _exportData = function (dt, inOpts) {\n\tvar config = $.extend(\n\t\ttrue,\n\t\t{},\n\t\t{\n\t\t\trows: null,\n\t\t\tcolumns: '',\n\t\t\tmodifier: {\n\t\t\t\tsearch: 'applied',\n\t\t\t\torder: 'applied'\n\t\t\t},\n\t\t\torthogonal: 'display',\n\t\t\tstripHtml: true,\n\t\t\tstripNewlines: true,\n\t\t\tdecodeEntities: true,\n\t\t\ttrim: true,\n\t\t\tformat: {\n\t\t\t\theader: function (d) {\n\t\t\t\t\treturn Buttons.stripData(d, config);\n\t\t\t\t},\n\t\t\t\tfooter: function (d) {\n\t\t\t\t\treturn Buttons.stripData(d, config);\n\t\t\t\t},\n\t\t\t\tbody: function (d) {\n\t\t\t\t\treturn Buttons.stripData(d, config);\n\t\t\t\t}\n\t\t\t},\n\t\t\tcustomizeData: null\n\t\t},\n\t\tinOpts\n\t);\n\n\tvar header = dt\n\t\t.columns(config.columns)\n\t\t.indexes()\n\t\t.map(function (idx) {\n\t\t\tvar col = dt.column(idx);\n\t\t\treturn config.format.header(col.title(), idx, col.header());\n\t\t})\n\t\t.toArray();\n\n\tvar footer = dt.table().footer()\n\t\t? dt\n\t\t\t\t.columns(config.columns)\n\t\t\t\t.indexes()\n\t\t\t\t.map(function (idx) {\n\t\t\t\t\tvar el = dt.column(idx).footer();\n\t\t\t\t\treturn config.format.footer(\n\t\t\t\t\t\tel ? $('.dt-column-title', el).html() : '',\n\t\t\t\t\t\tidx,\n\t\t\t\t\t\tel\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.toArray()\n\t\t: null;\n\n\t// If Select is available on this table, and any rows are selected, limit the export\n\t// to the selected rows. If no rows are selected, all rows will be exported. Specify\n\t// a `selected` modifier to control directly.\n\tvar modifier = $.extend({}, config.modifier);\n\tif (\n\t\tdt.select &&\n\t\ttypeof dt.select.info === 'function' &&\n\t\tmodifier.selected === undefined\n\t) {\n\t\tif (\n\t\t\tdt.rows(config.rows, $.extend({ selected: true }, modifier)).any()\n\t\t) {\n\t\t\t$.extend(modifier, { selected: true });\n\t\t}\n\t}\n\n\tvar rowIndexes = dt.rows(config.rows, modifier).indexes().toArray();\n\tvar selectedCells = dt.cells(rowIndexes, config.columns, {\n\t\torder: modifier.order\n\t});\n\tvar cells = selectedCells.render(config.orthogonal).toArray();\n\tvar cellNodes = selectedCells.nodes().toArray();\n\tvar cellIndexes = selectedCells.indexes().toArray();\n\n\tvar columns = header.length;\n\tvar rows = columns > 0 ? cells.length / columns : 0;\n\tvar body = [];\n\tvar cellCounter = 0;\n\n\tfor (var i = 0, ien = rows; i < ien; i++) {\n\t\tvar row = [columns];\n\n\t\tfor (var j = 0; j < columns; j++) {\n\t\t\trow[j] = config.format.body(\n\t\t\t\tcells[cellCounter],\n\t\t\t\tcellIndexes[i + j].row,\n\t\t\t\tcellIndexes[i + j].column,\n\t\t\t\tcellNodes[cellCounter]\n\t\t\t);\n\t\t\tcellCounter++;\n\t\t}\n\n\t\tbody[i] = row;\n\t}\n\n\tvar data = {\n\t\theader: header,\n\t\theaderStructure: dt.table().header.structure(config.columns),\n\t\tfooter: footer,\n\t\tfooterStructure: dt.table().footer.structure(config.columns),\n\t\tbody: body\n\t};\n\n\tif (config.customizeData) {\n\t\tconfig.customizeData(data);\n\t}\n\n\treturn data;\n};\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables interface\n */\n\n// Attach to DataTables objects for global access\n$.fn.dataTable.Buttons = Buttons;\n$.fn.DataTable.Buttons = Buttons;\n\n// DataTables creation - check if the buttons have been defined for this table,\n// they will have been if the `B` option was used in `dom`, otherwise we should\n// create the buttons instance here so they can be inserted into the document\n// using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n// be removed in future.\n$(document).on('init.dt plugin-init.dt', function (e, settings) {\n\tif (e.namespace !== 'dt') {\n\t\treturn;\n\t}\n\n\tvar opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n\tif (opts && !settings._buttons) {\n\t\tnew Buttons(settings, opts).container();\n\t}\n});\n\nfunction _init(settings, options) {\n\tvar api = new DataTable.Api(settings);\n\tvar opts = options\n\t\t? options\n\t\t: api.init().buttons || DataTable.defaults.buttons;\n\n\treturn new Buttons(api, opts).container();\n}\n\n// DataTables 1 `dom` feature option\nDataTable.ext.feature.push({\n\tfnInit: _init,\n\tcFeature: 'B'\n});\n\n// DataTables 2 layout feature\nif (DataTable.feature) {\n\tDataTable.feature.register('buttons', _init);\n}\n\n\nexport default DataTable;\n","/*! Bootstrap integration for DataTables' Buttons\n * © SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\nimport DataTable from 'datatables.net-bs5';\nimport Buttons from 'datatables.net-buttons';\n\n// Allow reassignment of the $ variable\nlet $ = jQuery;\n\n\n$.extend(true, DataTable.Buttons.defaults, {\n\tdom: {\n\t\tcontainer: {\n\t\t\tclassName: 'dt-buttons btn-group flex-wrap'\n\t\t},\n\t\tbutton: {\n\t\t\tclassName: 'btn btn-secondary',\n\t\t\tactive: 'active'\n\t\t},\n\t\tcollection: {\n\t\t\taction: {\n\t\t\t\tdropHtml: ''\n\t\t\t},\n\t\t\tcontainer: {\n\t\t\t\ttag: 'div',\n\t\t\t\tclassName: 'dropdown-menu dt-button-collection'\n\t\t\t},\n\t\t\tcloseButton: false,\n\t\t\tbutton: {\n\t\t\t\ttag: 'a',\n\t\t\t\tclassName: 'dt-button dropdown-item',\n\t\t\t\tactive: 'dt-button-active',\n\t\t\t\tdisabled: 'disabled',\n\t\t\t\tspacer: {\n\t\t\t\t\tclassName: 'dropdown-divider',\n\t\t\t\t\ttag: 'hr'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tsplit: {\n\t\t\taction: {\n\t\t\t\ttag: 'a',\n\t\t\t\tclassName: 'btn btn-secondary dt-button-split-drop-button',\n\t\t\t\tcloseButton: false\n\t\t\t},\n\t\t\tdropdown: {\n\t\t\t\ttag: 'button',\n\t\t\t\tdropHtml: '',\n\t\t\t\tclassName:\n\t\t\t\t\t'btn btn-secondary dt-button-split-drop dropdown-toggle dropdown-toggle-split',\n\t\t\t\tcloseButton: false,\n\t\t\t\talign: 'split-left',\n\t\t\t\tsplitAlignClass: 'dt-button-split-left'\n\t\t\t},\n\t\t\twrapper: {\n\t\t\t\ttag: 'div',\n\t\t\t\tclassName: 'dt-button-split btn-group',\n\t\t\t\tcloseButton: false\n\t\t\t}\n\t\t}\n\t},\n\tbuttonCreated: function (config, button) {\n\t\treturn config.buttons ? $('<div class=\"btn-group\"/>').append(button) : button;\n\t}\n});\n\nDataTable.ext.buttons.collection.className += ' dropdown-toggle';\nDataTable.ext.buttons.collection.rightAlignClassName = 'dropdown-menu-right';\n\n\nexport default DataTable;\n"],"names":["_ext","_Api","_api_register","_api_registerPlural","$","jQuery","DataTable","selector","options","factory","this","_that","emptyInit","undefined","len","length","api","each","iLen","o","oInit","_fnExtend","i","sId","getAttribute","bInitHandedOff","defaults","$this","nodeName","toLowerCase","trigger","_fnCompatOpts","_fnCompatCols","column","_fnCamelToHungarian","extend","data","allSettings","settings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","Api","destroy","_fnLog","sTableId","id","splice","ext","_unique","oSettings","models","style","width","colgroup","prependTo","fastData","row","type","_fnGetCellData","push","dataTable","aLengthMenu","iDisplayLength","Array","isArray","isPlainObject","value","_fnMap","oFeatures","oScroll","oLanguage","_fnCallbackReg","fnDrawCallback","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","classes","addClass","table","bPaginate","iDisplayStart","iInitDisplayStart","_iDisplayStart","sUrl","ajax","dataType","url","success","json","_fnCallbackFire","_fnInitialise","error","columnsInit","thead","getElementsByTagName","initHeaderLayout","_fnDetectHeader","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","iCol","oDef","_fnColumnOptions","rowOne","children","find","eq","a","cell","name","col","mData","sort","filter","_","_isArrayHost","features","loadedInit","aaSorting","sorting","asSorting","_fnSortingClasses","bSorted","_fnDataSource","bDeferRender","caption","appendTo","html","_captionSide","css","captionNode","tbody","insertAfter","nTBody","tfoot","aaData","_fnAddData","_fnAddTr","aiDisplay","aiDisplayMaster","slice","bInitialised","_fnSaveState","bStateSave","_fnLoadState","buttons","builder","errMode","feature","search","legacy","pager","renderer","pageButton","header","order","className","detect","render","fnVersionCheck","iApiIndex","sVersion","version","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","aoFeatures","oStdClasses","oPagination","container","empty","info","select","canAsc","canDesc","isAsc","isDesc","none","position","processing","scrolling","body","footer","self","inner","input","paging","active","button","disabled","_re_dic","_re_new_lines","_re_html","_re_date","_re_escape_regex","RegExp","join","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","strType","parseFloat","_isHtml","_htmlNumeric","match","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","start","end","_removeEmpty","_escapeHtml","_normalize","str","both","res","normalize","_areAllUnique","src","sorted","last","from","Set","val","j","k","again","_flatten","_addClass","el","split","forEach","n","classList","add","_fnHungarianMap","newKey","hungarian","map","key","indexOf","_hungarianMap","user","force","hungarianKey","charAt","util","diacritics","mixed","debounce","fn","timeout","timer","that","args","arguments","clearTimeout","setTimeout","apply","throttle","freq","frequency","now","Date","escapeRegex","set","source","meta","setData","b","arrayNotation","funcNotation","innerSrc","_fnSplitObjNotation","aLast","Error","__reArray","__reFn","jLen","get","t","fetchData","substring","stripHtml","escapeHtml","unique","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","serverSide","searchDelay","dataSort","aDataSort","__browser","browser","top","left","window","pageXOffset","height","overflow","append","outer","barWidth","offsetWidth","clientWidth","bScrollbarLeft","Math","round","offset","remove","oBrowser","iBarWidth","oDefaults","oCol","oColumn","idx","searchFixed","colEl","aoPreSearchCols","oOptions","mDataProp","sType","_sManualType","sClass","origClass","iDataSort","mDataSrc","mRender","copy","shift","_render","attrTest","_bAttrSrc","_setter","fnGetData","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSort","bSortable","_fnAdjustColumnSizing","_fnCalculateColumnWidths","_fnColumnSizes","scroll","sY","sX","_fnScrollDraw","cols","_fnColumnsSumWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","layout","aoHeader","columns","vis","bVisible","sParam","_fnColumnTypes","jen","ken","detectedType","cache","aoData","types","autoClass","_columnAutoClass","aoFooter","_columnAutoRender","colIdx","nTr","display","displayData","_fnWriteCell","anCells","aoColDefs","aoCols","headerLayout","kLen","def","sName","aTargets","target","targets","is","original","incVisible","_fnColumnsFromHeader","unit","sum","definedWidth","sWidthOrig","sWidth","matched","attr","closest","dataIn","tr","tds","rowIdx","rowModel","oRow","_aData","aIds","_fnCreateTr","trs","_fnGetRowElements","cells","draw","iDraw","defaultContent","sDefaultContent","cellData","innerHTML","iDrawError","call","fomatters","_fnSetCellData","td","parts","_fnGetDataMaster","_fnClearTable","_fnInvalidate","_aSortData","_aFilterData","_fnGetRowDisplay","maxLenString","_fnRowAttributes","contents","firstChild","objectRead","setter","cellProcess","trim","toUpperCase","nextSibling","rowNode","rowModal","iRow","nTrIn","anTds","nTd","create","trClass","document","createElement","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","removeChild","fnCreatedCell","DT_RowClass","__rowc","concat","removeClass","DT_RowAttr","DT_RowData","_fnBuildHead","side","titleProp","detected","_fnRenderer","_fnHeaderLayout","incColumns","rowspan","colspan","local","structure","columnCount","includes","title","_fnDrawHead","point","_fnDraw","ajaxComplete","_fnStart","aPreDraw","anRows","iRowCount","bServerSide","iDisplayEnd","fnDisplayEnd","bDrawing","bDestroying","_emptyRow","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","detach","nTableWrapper","toggleClass","bFiltered","_fnProcessingDisplay","_fnReDraw","holdPosition","recompute","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","oLang","zero","sZeroRecords","dataSrc","sLoadingRecords","sEmptyTable","fnRecordsTotal","_layoutArray","groups","pos","splitPos","align","group","Object","keys","opts","filtered","item","order1","order2","reverse","rows","full","_layoutResolve","getFeature","resolve","line","node","inst","_fnAddOptionsHtml","insert","insertBefore","bottom","sDom","_fnLayoutDom","_fnFeatureHtmlTable","_processingHtml","dom","featureNode","option","newNode","next","parent","cFeature","fnInit","write","l","shifted","isHeader","columnDef","sTitle","autoTitle","ariaTitle","childNodes","setAttribute","fnRecordsDisplay","_fnBuildAjax","ajaxData","instance","callback","status","jqXHR","_fnAjaxDataSrc","sError","newData","baseAjax","sServerMethod","xhr","ret","readyState","oAjaxData","_fnAjaxParameters","_fnAjaxUpdateDraw","preSearch","preColSearch","colData","searchable","bSearchable","orderable","regex","fixed","term","toString","_fnSortFlatten","dir","_iDisplayLength","_fnAjaxDataSrcParam","recordsTotal","recordsFiltered","_iRecordsTotal","_iRecordsDisplay","_fnInitComplete","dataProp","param","columnsSearch","_fnFilterData","_fnFilter","_fnFilterCustom","filters","displayRows","searchRows","searchFunc","rpSearch","_fnFilterCreateSearch","_sFilterRow","test","inOpts","not","boundary","caseInsensitive","exact","smart","word","m","negative","__filter_div","__filter_div_textContent","textContent","filterData","wasInvalidated","innerText","iAjaxStart","_fnSortInit","_colGroup","aData","_bInitComplete","_fnLengthChange","_fnLengthOverflow","_fnPageChange","action","redraw","records","floor","changed","bProcessing","sProcessing","on","e","show","scrollY","captionSide","headerClone","cloneNode","footerClone","_div","size","_fnStringToCss","scroller","border","sXInner","removeAttr","scrollHead","scrollBody","scrollFoot","scrollLeft","bCollapse","nScrollHead","nScrollBody","nScrollFoot","aoDrawCallback","headerCopy","footerCopy","divHeader","divHeaderInner","divHeaderTable","divBodyEl","divBody","divFooter","divFooterInner","divFooterTable","scrollBarVis","scrollHeight","clientHeight","clone","colSizes","outerWidth","colWidth","wrapAll","isScrolling","paddingSide","scrollTop","bAutoWidth","columnIdx","scrollXInner","visibleColumns","tableWidthAttr","tableContainer","styleWidth","visible","tmpTable","margin","padding","longest","_fnGetMaxLenString","text","sContentPadding","createTextNode","holder","right","total","bodyCells","bounding","getBoundingClientRect","_reszEvt","bindResize","sInstance","max","maxLen","cellString","nodeType","headerRows","querySelectorAll","legacyTop","bSortCellsTop","notSelector","_fnSortAttachListener","_fnSortResolve","_fnBindAction","shiftKey","_fnSortAdd","_fnSortDisplay","master","nestedSort","z","srcCol","aSort","extSort","aaSortingFixed","fixedObj","pre","post","_idx","index","formatter","sorter","sortCol","aiOrig","displayMaster","_fnSortData","x","y","dataA","dataB","nextSortIdx","bSortMulti","sortIdx","oldSort","aLastSort","sortClass","bSortClasses","customData","customSort","sSortDataType","_bLoadingState","state","time","oSavedState","fnStateSaveCallback","loaded","_fnImplementState","fnStateLoadCallback","duration","iStateDuration","abStateLoad","oLoadedState","page","adjust","level","msg","tn","console","log","sErrMode","alert","mappedName","extender","breakRefs","prototype","hasOwnProperty","which","preventDefault","store","callbackArr","eventName","bubbles","Event","dt","parents","result","host","_fnMacros","entries","fnFormatNumber","all","ceil","i18n","__apiStruct","__arrayProto","_toSettings","jq","tables","toArray","v","_api_scope","scope","struc","methodExt","_api_find","context","ctxSettings","any","count","flatten","ctx","iterator","alwaysNew","items","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","to$","toJQuery","unshift","obj","struct","__dt_wrapper","propExt","register","method","heir","registerPlural","pluralName","singularName","__table_selector","sel","nodes","indexes","prepend","visRecords","__reload","one","abort","resetPaging","_selector_run","selectFn","selectorType","_selector_opts","_selector_first","tmp","displayFiltered","displayFilteredMap","ordered","__row_selector","run","selInt","cellIdx","rowObj","r","hash","newRows","modRows","idFn","ids","_detailsShow","childRows","__details_state_load","every","__details_add","klass","addRow","created","colSpan","_details","__details_state","__details_remove","__details_display","__details_events","namespace","drawEvent","colvisEvent","destroyEvent","off","_emp","_child_obj","_child_mth","child","__re_column_selector","__columnData","r1","r2","__column_selector","names","titles","visColumns","jqResult","__setColumnVis","span","calc","widths","visIdx","__cell_selector","allCells","fnSelector","rowSelector","columnSelector","internalOpts","cellsNoOpts","selected","columnVisible","directions","caseInsen","ignoreTime","setMutate","use","module","DateTime","root","jquery","versionCheck","version2","iThis","iThat","aThis","aThat","isDataTable","head","foot","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","orderClasses","orig","removedMethod","sDestroyWidth","counter","selectedIdx","tableIdx","token","plural","resolved","toFormat","sThousands","JSON","parse","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","first","previous","topStart","topEnd","bottomStart","bottomEnd","pagingControls","min","extPagination","simple","numbers","simple_numbers","full_numbers","first_last","first_last_numbers","_numbers","_pagingNumbers","numbers_length","pagingButton","buttonType","content","btn","btnClasses","class","role","clicker","pagingContainer","_filterString","__mldFnName","__mld","momentFn","luxonFn","dateFn","arg1","moment","luxon","__mlWarning","__mldObj","format","locale","utc","isValid","fromFormat","fromISO","setLocale","__mlHelper","localeString","to","typeName","valueOf","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__thousands","__decimal","Intl","NumberFormat","formatToParts","datetime","date","number","thousands","decimal","precision","prefix","postfix","flo","abs","exp","toExponential","toFixed","intPart","floatPart","_extTypes","asc","desc","setProp","propVal","setDetect","cb","defineProperty","findIndex","setOrder","parsed","ts","Infinity","sDecimal","dp","__numericReplace","decimalPlace","re1","re2","_fnUpdateInfo","ariaType","sortDirs","orderedColumns","orderDirs","firstSort","sortOrder","bInfo","lang","tid","fnInfoCallback","sInfoEmpty","sInfoPostFix","sInfoFiltered","sInfo","nWrapper","__searchCounter","_pagingDraw","plugin","aria","oAria","pages","flat","buttonEls","btnInfo","_pagingButtonInfo","iTabIndex","wrapped","activeEl","activeElement","outerHeight","oPaginate","sFirst","sPrevious","sNext","sLast","half","tableId","language","previousSearch","placeholder","sSearchPlaceholder","sSearch","removed","searchFn","event","return","jqFilter","keyCode","ev","sPaginationType","__lengthCounter","bLengthChange","menu","sLengthMenu","lengths","label","div","textNodes","Node","TEXT_NODE","updateEntries","Option","replaceWith","dataTableSettings","dataTableExt","_instCounter","_buttonCounter","_dtButtons","_entityDecoder","_fadeIn","animate","stop","fadeIn","_fadeOut","fadeOut","_infoTimer","Buttons","config","c","listenKeys","tag","_constructor","_nodeToButton","conf","flag","jqNode","inCollection","collection","hasClass","base","_expandButton","_draw","collectionRebuild","newButtons","prefixButtons","postfixButtons","newBtn","parentConf","disable","buttonInsts","enable","nested","triggerHandler","_nodeToHost","destroying","_removeKey","inArray","textNode","opt","dtSettings","_buttons","character","String","fromCharCode","_keypress","_addKey","inserter","attachTo","inSplit","attachPoint","isSplit","domCollection","_resolveExtends","built","_buildButton","_collection","dropHtml","collectionLayout","dropup","fade","configDom","spacer","available","done","async","clickBlurs","liner","enabled","titleAttr","splitDiv","buttonContainer","buttonCreated","dropdownConf","wrapperConf","wrapper","dropButtonConfig","dropdown","closeButton","splitAlignClass","splitAction","dropButton","stopPropagation","_buttonsHandled","click","altKey","ctrlKey","metaKey","recurse","toConfObject","loop","objArray","originalClassName","_popover","hostButton","closed","autoClose","background","backgroundClassName","containerClassName","contentClassName","collectionTitle","popoverTitle","rightAlignClassName","containerSelector","hostNode","close","existingExpanded","cnt","mod","lastChild","offsetParent","buttonPosition","buttonOffset","tableSizes","containerPosition","computed","getComputedStyle","paddingLeft","popoverSizes","marginTop","marginBottom","place","backgroundHost","back","addBack","elements","focus","insertPoint","instanceSelector","process","buttonSelector","insts","nodeBuilder","baseIdx","stripData","stripNewlines","decodeEntities","_exportTextarea","entityDecoder","tabIndex","popover","copyHtml5","csv","csvHtml5","excel","excelHtml5","pdf","pdfHtml5","pageLength","lengthMenu","vals","buttonGroup","_groupSelector","groupSelector","containers","message","_exportData","filename","_filename","_title","messageTop","_message","messageBottom","extension","_stringOrFunction","modifier","orthogonal","customizeData","rowIndexes","selectedCells","cellNodes","cellIndexes","cellCounter","headerStructure","footerStructure","_init"],"sourceRoot":""}