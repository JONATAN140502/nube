{"version":3,"file":"js/9828.5828cade.js","mappings":"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","sources":["webpack://legalcase/./src/modules/legal/mantenimiento/CambioAbogado.vue","webpack://legalcase/src/modules/legal/mantenimiento/CambioAbogado.vue","webpack://legalcase/./src/modules/legal/mantenimiento/CambioAbogado.vue?b997","webpack://legalcase/./src/modules/legal/mantenimiento/CambioAbogado.vue?8cbf","webpack://legalcase/./src/utils/dataTable.js"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',{staticClass:\"pc-container pb-4\"},[_c('div',{staticClass:\"pcoded-content\"},[_vm._m(0),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-xl-12\"},[_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-body pt-5 px-5\"},[_c('div',{staticClass:\"row mb-4\"},[_vm._m(1),_c('div',{staticClass:\"col-md-4\"},[_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.abogado_asignado),expression:\"abogado_asignado\"}],staticClass:\"form-control fade-transition\",on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.abogado_asignado=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{\"value\":\"\",\"disabled\":\"\",\"selected\":\"\"}},[_vm._v(\"Seleccionar\")]),_vm._l((_vm.lawyers),function(lawyer){return _c('option',{domProps:{\"value\":lawyer.abo_id}},[_vm._v(\" \"+_vm._s(_vm.completeNames(lawyer))+\" \")])})],2)])]),_c('div',{staticClass:\"row mb-4\"},[_vm._m(2),_c('div',{staticClass:\"col-md-4\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.letraInput),expression:\"letraInput\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"placeholder\":\"Ingrese hasta dos letras\",\"maxlength\":\"2\"},domProps:{\"value\":(_vm.letraInput)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.letraInput=$event.target.value},_vm.validarYConvertirLetra],\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;$event.preventDefault();return _vm.agregarLetra.apply(null, arguments)}}})])]),_c('div',{staticClass:\"row\"},[_vm._m(3),_c('div',{staticClass:\"col-md-4 mt-2\"},[(_vm.letrasSeleccionadas.length > 0)?_c('div',_vm._l((_vm.letrasSeleccionadas),function(letra,index){return _c('span',{key:index,class:{ 'letra-seleccionada': true, 'duplicada': _vm.letraEsDuplicada(letra) },on:{\"click\":function($event){return _vm.quitarLetra(index)}}},[_vm._v(\" \"+_vm._s(letra)+\" \")])}),0):_c('div',[_c('span',[_vm._v(\"No hay letras seleccionadas.\")])])])])]),_c('div',{staticClass:\"card-footer px-5\"},[_c('div',{staticClass:\"d-flex\"},[_c('button',{staticClass:\"btn btn-success px-5 rounded btn-lg ml-auto\",on:{\"click\":_vm.asignarExpedientes}},[_vm._v(\"Asignar\")])])])])])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"row mb-4\"},[_c('h5',{},[_c('span',{staticClass:\"text-primary\"},[_vm._v(\"Asignacion de abogados a expedientes\")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"col-md-3 d-flex align-items-center\"},[_c('label',{staticClass:\"form-label\"},[_vm._v(\"Lista de abogados\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"col-md-3 d-flex align-items-center\"},[_c('label',{staticClass:\"form-label mt-2\",attrs:{\"for\":\"letras\"}},[_vm._v(\"Escriba las letras a asignar\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"col-md-3 mt-2\"},[_c('label',{staticClass:\"form-label\"},[_vm._v(\"Letras a asignar al abogado: \")])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <section class=\"pc-container pb-4\">\r\n        <div class=\"pcoded-content\">\r\n            <div class=\"row mb-4\">\r\n                <h5 class=\"\">\r\n                    <span class=\"text-primary\">Asignacion de abogados a expedientes</span>\r\n                </h5>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xl-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body pt-5 px-5\">\r\n                            <div class=\"row mb-4\">\r\n                                <div class=\"col-md-3 d-flex align-items-center\">\r\n                                    <label class=\"form-label\">Lista de abogados</label>\r\n                                </div>\r\n                                <div class=\"col-md-4\">\r\n                                    <select class=\"form-control fade-transition\" v-model=\"abogado_asignado\">\r\n                                        <option value=\"\" disabled selected>Seleccionar</option>\r\n                                        <option v-for=\"lawyer in lawyers\" :value=\"lawyer.abo_id\">\r\n                                            {{ completeNames(lawyer) }}\r\n                                        </option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class=\"row mb-4\">\r\n                                <div class=\"col-md-3 d-flex align-items-center\">\r\n                                    <label for=\"letras\" class=\"form-label mt-2\">Escriba las letras a asignar</label>\r\n                                </div>\r\n                                <div class=\"col-md-4\">\r\n                                    <input type=\"text\" @input=\"validarYConvertirLetra\" v-model=\"letraInput\"\r\n                                            @keydown.enter.prevent=\"agregarLetra\" class=\"form-control\"\r\n                                            placeholder=\"Ingrese hasta dos letras\" maxlength=\"2\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3 mt-2\">\r\n                                    <label class=\"form-label\">Letras a asignar al abogado: </label>\r\n                                </div>\r\n                                <div class=\"col-md-4 mt-2\">\r\n                                    <div v-if=\"letrasSeleccionadas.length > 0\">\r\n                                        <span v-for=\"(letra, index) in letrasSeleccionadas\" :key=\"index\"\r\n                                            :class=\"{ 'letra-seleccionada': true, 'duplicada': letraEsDuplicada(letra) }\"\r\n                                            @click=\"quitarLetra(index)\">\r\n                                            {{ letra }}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div v-else>\r\n                                        <span>No hay letras seleccionadas.</span>\r\n                                    </div>\r\n                                </div>\r\n                                <!-- <div v-if=\"letrasSeleccionadas.length > 0\" class=\"col-md-auto ml-auto\">\r\n                                    <p class=\"text-danger\">{{ contadorExpedientesFiltrados }} expedientes encontrados</p>\r\n                                </div> -->\r\n                            </div>\r\n                          \r\n                            <!-- <div class=\"row border-top pt-4 pb-1\" v-if=\"expedientes.length === 0 && !isLoading\">\r\n                                <div class=\"col-md-12\">\r\n                                    <p class=\"text-center text-secondary\">Seleccione un abogado para visualizar sus\r\n                                        expedientes.</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row border-top pt-4 pb-1\" v-else-if=\"expedientes.length === 0 && isLoading\">\r\n                                <div class=\"col-md-12 text-center\">\r\n                                    <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n                                    Obteniendo expedientes...\r\n                                </div>\r\n                            </div> -->\r\n                            <!-- <div class=\"table-responsive\">\r\n                                <table class=\"table\" id=\"table\" ref=\"myDataTable\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>#</th>\r\n                                            <th>N° de Expediente</th>\r\n                                            <th>Fecha de Inicio</th>\r\n                                            <th>Parte procesal</th>\r\n                                            <th>Materia/Delito</th>\r\n                                            <th>Pretensión</th>\r\n                                            <th>Estado</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr v-for=\"(expediente, index) in expedientesFiltrados\" :key=\"index\">\r\n                                            <td>{{ index + 1 }}</td>\r\n                                            <td>\r\n                                                <router-link\r\n                                                    :to=\"{ name: 'expediente/detalle', params: { id: expediente.exp_id } }\">\r\n                                                    {{ expediente.numero }}\r\n                                                </router-link>\r\n                                            </td>\r\n                                            <td>{{ expediente.fecha_inicio }}</td>\r\n                                            <td>{{ isDemandante(expediente.procesal, expediente.multiple) }}</td>\r\n                                            <td>{{ expediente.materia }}</td>\r\n                                            <td>{{ expediente.pretencion }}</td>\r\n                                            <td>\r\n                                                <span :class=\"badgeClass(expediente.estado_proceso)\">\r\n                                                    {{ expediente.estado_proceso }}\r\n                                                </span>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div> -->\r\n                        </div>\r\n                        <div class=\"card-footer px-5\">\r\n                            <div class=\"d-flex\">\r\n                                <button class=\"btn btn-success px-5 rounded btn-lg ml-auto\"\r\n                                            @click=\"asignarExpedientes\">Asignar</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</template>\r\n  \r\n<script>\r\nimport feather from 'feather-icons';\r\nimport DataTable from '@/utils/dataTable';\r\nimport { badgeClass } from '@/utils/utils.js'\r\n\r\nexport default {\r\n    name: \"abogado\",\r\n    mixins: [DataTable],\r\n    created() {\r\n        this.loadSelectedOptions();\r\n        // this.cargarExpedientes();\r\n        this.listLawyers();\r\n    },\r\n    beforeDestroy() {\r\n        this.saveSelectedOptions();\r\n        this.clearLocalStorage();\r\n    },\r\n\r\n    mounted() {\r\n        this.$nextTick(() => {\r\n            feather.replace();\r\n        });\r\n    },\r\n    data() {\r\n        return {\r\n            dataTable: null,\r\n            abogado_asignado: '',\r\n            assignedAttorney: \"\",\r\n            newlawyer: \"\",\r\n            lawyersWithFiles: null,\r\n            lawyers: null,\r\n            expedientes: [],\r\n            isLoading: false,\r\n\r\n            letraInput: '',\r\n            letrasSeleccionadas: [],\r\n            letraDuplicada: null,\r\n            parpadeoInterval: null,\r\n            nombreAbogado: '',\r\n            name: '',\r\n            alfabeto: \"A,B,C,CH,D,E,F,G,H,I,J,K,L,LL,M,N,Ñ,O,P,Q,R,S,T,U,V,W,X,Y,Z\"\r\n        };\r\n    },\r\n    computed: {\r\n      \r\n    },\r\n\r\n    methods: {\r\n\r\n        validarYConvertirLetra() {\r\n            const letrasPermitidas = [\"A\", \"B\", \"C\", \"CH\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"LL\", \"M\", \"N\", \"Ñ\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\r\n\r\n            // Convertir a mayúsculas y verificar si la entrada está en la lista permitida\r\n            this.letraInput = this.letraInput.toUpperCase();\r\n            if (!letrasPermitidas.includes(this.letraInput)) {\r\n                this.letraInput = ''; // Limpiar la entrada si no es válida\r\n            }\r\n        },\r\n       \r\n        agregarLetra() {\r\n            const letrasIngresadas = this.letraInput.toUpperCase();\r\n\r\n            if (letrasIngresadas.length > 0 && this.alfabeto.includes(letrasIngresadas)) {\r\n                if (!this.letrasSeleccionadas.includes(letrasIngresadas)) {\r\n                    this.letrasSeleccionadas.push(letrasIngresadas);\r\n                    console.log(this.letrasSeleccionadas);\r\n                    this.letraInput = '';\r\n                } else {\r\n                    this.letraDuplicada = letrasIngresadas;\r\n                    this.letraInput = '';\r\n                    this.iniciarParpadeo();\r\n\r\n                    setTimeout(() => {\r\n                        this.letraDuplicada = null;\r\n                        this.detenerParpadeo();\r\n                    }, 2000);\r\n                }\r\n            }\r\n        },\r\n        quitarLetra(index) {\r\n            this.letrasSeleccionadas.splice(index, 1);\r\n        },\r\n        letraEsDuplicada(letra) {\r\n            return this.letraDuplicada === letra;\r\n        },\r\n        iniciarParpadeo() {\r\n            let tonoAzul = '#7267EF';\r\n            let tonoRojoOriginal = '#EA4D4D';\r\n            let tonoRojoIntenso = '#FF0000';\r\n            let usandoRojoOriginal = true;\r\n\r\n            this.parpadeoInterval = setInterval(() => {\r\n                usandoRojoOriginal = !usandoRojoOriginal;\r\n                document.querySelectorAll('.letra-seleccionada.duplicada').forEach(element => {\r\n                    element.style.backgroundColor = usandoRojoOriginal ? tonoRojoOriginal : tonoRojoIntenso;\r\n                });\r\n            }, 500);\r\n        },\r\n        detenerParpadeo() {\r\n            clearInterval(this.parpadeoInterval);\r\n            document.querySelectorAll('.letra-seleccionada.duplicada').forEach(element => {\r\n                element.style.backgroundColor = '#7267EF';\r\n            });\r\n        },\r\n\r\n\r\n        saveSelectedOptions() {\r\n            localStorage.setItem('assignedAttorney', this.assignedAttorney);\r\n            localStorage.setItem('newlawyer', this.newlawyer);\r\n        },\r\n        loadSelectedOptions() {\r\n            const assignedAttorney = localStorage.getItem('assignedAttorney');\r\n            const newlawyer = localStorage.getItem('newlawyer');\r\n\r\n            if (assignedAttorney !== null && newlawyer !== null) {\r\n                this.assignedAttorney = assignedAttorney;\r\n                this.newlawyer = newlawyer;\r\n            }\r\n        },\r\n        clearLocalStorage() {\r\n            localStorage.removeItem('assignedAttorney');\r\n            localStorage.removeItem('newlawyer');\r\n        },\r\n\r\n        completeNames(lawyer) {\r\n            this.nombreAbogado = `${lawyer.nat_nombres} ${lawyer.nat_apellido_paterno} ${lawyer.nat_apellido_materno}`;\r\n            return `${lawyer.nat_nombres} ${lawyer.nat_apellido_paterno} ${lawyer.nat_apellido_materno}`;\r\n        },\r\n\r\n\r\n        delay(ms) {\r\n            return new Promise(resolve => setTimeout(resolve, ms));\r\n        },\r\n\r\n        isValidSelection() {\r\n            return this.assignedAttorney !== 'default_value' && this.newlawyer !== 'default_value';\r\n        },\r\n\r\n        async listLawyers() {\r\n            try {\r\n                this.$showLoadingAlert();\r\n                const response = await this.$getData('lawyer', this);\r\n                console.log(response);\r\n                this.lawyers = response.data;\r\n                this.lawyersWithFiles = response.data.filter(lawyerWith => lawyerWith.abo_carga_laboral > 0);\r\n                this.$closeLoadingAlert();\r\n            } catch (error) {\r\n                this.$handleApiError(error, 'cargar abogados');\r\n            }\r\n        },\r\n\r\n        async namea(id) {\r\n            const selectedLawyer = this.lawyers.find(lawyer => lawyer.abo_id === id);\r\n            if (selectedLawyer) {\r\n                this.name = `${selectedLawyer.nat_nombres} ${selectedLawyer.nat_apellido_paterno} ${selectedLawyer.nat_apellido_materno}`;\r\n            } else {\r\n                this.name = ''; // O algún valor predeterminado si el abogado no se encuentra\r\n            }\r\n        },\r\n        asignarExpedientes() {\r\n            if (this.abogado_asignado === '' || this.letrasSeleccionadas.length === 0) {\r\n                this.$warnignAlert('', 'Seleccione un abogado y las letras a asignar.');\r\n                return;\r\n            }\r\n            try {\r\n                this.namea(this.abogado_asignado);\r\n                this.$warningAlertWithCancel(\r\n                    'Asignación de abogado',\r\n                    `Confirmar asignación de expedientes al abogado ${this.name}?`,\r\n                    this.confirmarAsignacion,\r\n                );\r\n            } catch (error) {\r\n                this.$handleApiError(error, error.message);\r\n            }\r\n        },\r\n\r\n        async confirmarAsignacion() {\r\n            try {\r\n                this.$showLoadingAlert('', 'Asignando expedientes...');\r\n                const formData = {\r\n                    abogado_asignado: this.abogado_asignado,\r\n                    letras_selecionadas: this.letrasSeleccionadas\r\n                }\r\n                console.log(formData);\r\n                const response = await this.$postData('lawyer/changeOfLawyer', this, formData);\r\n                console.log(response);\r\n                if (response.state === 0) {\r\n                    this.abogado_asignado = '';\r\n                    this.letrasSeleccionadas = [];\r\n                this.$closeLoadingAlert();\r\n                this.$successAlert('Asignación Correcta!','Se han asignado' +response.cantidad+\"expediente(s).\");\r\n                }\r\n            } catch (error) {\r\n                this.$handleApiError(error, error.message);\r\n                this.$errorAlert('', error);\r\n            }\r\n        },\r\n\r\n        async saveChanges() {\r\n            if (!this.isValidSelection()) {\r\n                this.$warnignAlert('', 'Por favor, selecciona abogados válidos antes de guardar cambios.');\r\n                return;\r\n            }\r\n            try {\r\n                this.$showLoadingAlert('', 'Procesando cambios');\r\n                const filesShown = this.expedientes.map(e => e.exp_id);\r\n                const formData = {\r\n                    expedientes: filesShown,\r\n                    abogado_actual: this.assignedAttorney,\r\n                    abogado_nuevo: this.newlawyer\r\n                }\r\n                const response = await this.$postData('lawyer/changeOfLawyer', this, formData);\r\n\r\n                if (response.state == 0) {\r\n                    await this.cargarExpedientes();\r\n                    this.assignedAttorney = \"\";\r\n                    this.newlawyer = \"\";\r\n                    await this.delay(500);\r\n\r\n                    await this.listLawyers();\r\n\r\n                    this.$closeLoadingAlert();\r\n                }\r\n            } catch (error) {\r\n                this.$handleApiError(error, error.message);\r\n            }\r\n        },\r\n\r\n        async cargarExpedientes() {\r\n            try {\r\n                // this.$showLoadingAlert();\r\n                const result = await this.$getData('proceeding', this);\r\n                this.expedientes = result.data;\r\n                console.log(result);\r\n                await this.$waitForDataTableDraw(this, 'myDataTable');\r\n                // this.$closeLoadingAlert();\r\n            } catch (error) {\r\n                this.$handleApiError(error, 'cargar expedientes');\r\n            }\r\n        },\r\n        isDemandante(procesal, multiple) {\r\n            return procesal[0].tipo_procesal === 'DEMANDANTE'\r\n                ? this.nombreCompleto(procesal, multiple)\r\n                : 'UNPRG';\r\n        },\r\n        isDemandado(procesal, multiple) {\r\n            return procesal[0].tipo_procesal === 'DEMANDADO'\r\n                ? this.nombreCompleto(procesal, multiple)\r\n                : 'UNPRG';\r\n        },\r\n        nombreCompleto(procesal, multiple) {\r\n            if (multiple === '1') {\r\n                return 'Demanda Colectiva';\r\n            }\r\n\r\n            const tipoPersona = procesal[0].tipo_persona;\r\n            const { apellido_paterno, apellido_materno, nombres, razon_social } = procesal[0];\r\n\r\n            return tipoPersona === 'NATURAL'\r\n                ? `${apellido_paterno} ${apellido_materno} ${nombres}`\r\n                : razon_social;\r\n        },\r\n\r\n       \r\n        badgeClass,\r\n    },\r\n\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n@import '@/assets/css/fileStatus.css';\r\n@import '@/assets/css/dataTable.css';\r\n\r\n.letra-seleccionada {\r\n    display: inline-block;\r\n    background-color: #7267EF;\r\n    /*width: 1.5rem;*/\r\n    text-align: center;\r\n    padding: 5px;\r\n    margin: 2px;\r\n    color: white;\r\n    cursor: pointer;\r\n    border-radius: 2px;\r\n    transition: background-color 0.5s;\r\n}\r\n\r\n.letra-seleccionada.duplicada {\r\n    background-color: #EA4D4D;\r\n}\r\n</style>\r\n  ","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CambioAbogado.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CambioAbogado.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./CambioAbogado.vue?vue&type=template&id=09b77d30&scoped=true\"\nimport script from \"./CambioAbogado.vue?vue&type=script&lang=js\"\nexport * from \"./CambioAbogado.vue?vue&type=script&lang=js\"\nimport style0 from \"./CambioAbogado.vue?vue&type=style&index=0&id=09b77d30&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"09b77d30\",\n  null\n  \n)\n\nexport default component.exports","export default {\r\n    methods: {\r\n        async initDataTable() {\r\n            this.destroyDataTable();\r\n            await this.$nextTick();\r\n            this.dataTable = $(this.$refs.myDataTable).DataTable({\r\n                language: {\r\n                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/es-ES.json',\r\n                },\r\n            });\r\n        },\r\n\r\n        destroyDataTable() {\r\n            this.dataTable && this.dataTable.destroy() && (this.dataTable = null);\r\n        },\r\n    },\r\n    beforeDestroy() {\r\n        this.destroyDataTable();\r\n    },\r\n};"],"names":["render","_vm","this","_c","_self","staticClass","_m","directives","name","rawName","value","abogado_asignado","expression","on","$event","$$selectedVal","Array","prototype","filter","call","target","options","o","selected","map","val","_value","multiple","attrs","_v","_l","lawyers","lawyer","domProps","abo_id","_s","completeNames","letraInput","composing","validarYConvertirLetra","type","indexOf","_k","keyCode","key","preventDefault","agregarLetra","apply","arguments","letrasSeleccionadas","length","letra","index","class","letraEsDuplicada","quitarLetra","asignarExpedientes","staticRenderFns","mixins","DataTable","created","loadSelectedOptions","listLawyers","beforeDestroy","saveSelectedOptions","clearLocalStorage","mounted","$nextTick","feather","data","dataTable","assignedAttorney","newlawyer","lawyersWithFiles","expedientes","isLoading","letraDuplicada","parpadeoInterval","nombreAbogado","alfabeto","computed","methods","letrasPermitidas","toUpperCase","includes","letrasIngresadas","iniciarParpadeo","setTimeout","detenerParpadeo","push","console","log","splice","tonoRojoOriginal","tonoRojoIntenso","usandoRojoOriginal","setInterval","document","querySelectorAll","forEach","element","style","backgroundColor","clearInterval","localStorage","setItem","getItem","removeItem","nat_nombres","nat_apellido_paterno","nat_apellido_materno","delay","ms","Promise","resolve","isValidSelection","$showLoadingAlert","response","$getData","lawyerWith","abo_carga_laboral","$closeLoadingAlert","error","$handleApiError","namea","id","selectedLawyer","find","$warningAlertWithCancel","confirmarAsignacion","message","$warnignAlert","formData","letras_selecionadas","$postData","state","$successAlert","cantidad","$errorAlert","saveChanges","filesShown","e","exp_id","abogado_actual","abogado_nuevo","cargarExpedientes","result","$waitForDataTableDraw","isDemandante","procesal","tipo_procesal","nombreCompleto","isDemandado","tipoPersona","tipo_persona","apellido_paterno","apellido_materno","nombres","razon_social","badgeClass","component","initDataTable","destroyDataTable","$","$refs","myDataTable","language","url","destroy"],"sourceRoot":""}